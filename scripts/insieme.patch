diff -ru llvm_build/llvm-2.7/tools/clang/include/clang/Analysis/FlowSensitive/DataflowSolver.h /home/motonacciu/software/llvm-2.7-src/tools/clang/include/clang/Analysis/FlowSensitive/DataflowSolver.h
--- llvm_build/llvm-2.7/tools/clang/include/clang/Analysis/FlowSensitive/DataflowSolver.h	2009-11-15 08:26:58.000000000 +0100
+++ /home/motonacciu/software/llvm-2.7-src/tools/clang/include/clang/Analysis/FlowSensitive/DataflowSolver.h	2010-07-21 10:02:08.161299479 +0200
@@ -204,13 +204,12 @@
   void ProcessMerge(CFG& cfg, const CFGBlock* B) {
     ValTy& V = TF.getVal();
     TF.SetTopValue(V);
-
     // Merge dataflow values from all predecessors of this block.
     MergeOperatorTy Merge;
 
     EdgeDataMapTy& M = D.getEdgeDataMap();
     bool firstMerge = true;
-
+		bool noEdges = true;
     for (PrevBItr I=ItrTraits::PrevBegin(B),E=ItrTraits::PrevEnd(B); I!=E; ++I){
 
       CFGBlock *PrevBlk = *I;
@@ -222,6 +221,7 @@
         M.find(ItrTraits::PrevEdge(B, PrevBlk));
 
       if (EI != M.end()) {
+				noEdges = false;
         if (firstMerge) {
           firstMerge = false;
           V.copyValues(EI->second);
@@ -230,9 +230,20 @@
           Merge(V, EI->second);
       }
     }
-
+    bool isInitialized = true;
+    typename BlockDataMapTy::iterator BI = D.getBlockDataMap().find(B);
+    if(BI == D.getBlockDataMap().end()) {
+      isInitialized = false;
+      BI = D.getBlockDataMap().insert( std::make_pair(B,ValTy()) ).first;
+    }
+    // If no edges have been found, it means this is the first time the solver 
+    // has been called on block B, we copy the initialization values (if any)
+    // as current value for V (which will be used as edge data)
+    if(noEdges && isInitialized) 
+      Merge(V, BI->second);
+    
     // Set the data for the block.
-    D.getBlockDataMap()[B].copyValues(V);
+    BI->second.copyValues(V);
   }
 
   /// ProcessBlock - Process the transfer functions for a given block.
diff -ru llvm_build/llvm-2.7/tools/clang/include/clang/Parse/Parser.h /home/motonacciu/software/llvm-2.7-src/tools/clang/include/clang/Parse/Parser.h
--- llvm_build/llvm-2.7/tools/clang/include/clang/Parse/Parser.h	2010-03-02 18:53:14.000000000 +0100
+++ /home/motonacciu/software/llvm-2.7-src/tools/clang/include/clang/Parse/Parser.h	2010-06-11 14:33:27.191885269 +0200
@@ -22,6 +22,11 @@
 #include <stack>
 #include <list>
 
+//--- INSIEME COMPILER ---//
+class OMPParserProxy;
+class ParserProxy;
+//-----------------------//
+
 namespace clang {
   class AttributeList;
   struct CXX0XAttributeList;
@@ -47,6 +52,10 @@
 /// been read.
 ///
 class Parser {
+//--- INSIEME COMPILER ---//
+  friend class ::OMPParserProxy;
+	friend class ::ParserProxy;
+//-----------------------//
   friend class PragmaUnusedHandler;
   friend class ColonProtectionRAIIObject;
   PrettyStackTraceParserEntry CrashInfo;

diff -crB llvm-2.9/tools/clang/include/clang/Parse/Parser.h llvm-2.9/tools/clang/include/clang/Parse/Parser.h
*** llvm-2.9/tools/clang/include/clang/Parse/Parser.h	2011-03-05 15:45:16.000000000 +0100
--- llvm-2.9/tools/clang/include/clang/Parse/Parser.h	2011-03-09 21:42:44.286334000 +0100
***************
*** 24,29 ****
--- 24,33 ----
  #include <stack>
  #include <list>
  
+ //--- INSIEME COMPILER ---//
+ class ParserProxy;
+ //-----------------------//
+ 
  namespace clang {
    class PragmaHandler;
    class Scope;
***************
*** 76,81 ****
--- 80,88 ----
    friend class ColonProtectionRAIIObject;
    friend class InMessageExpressionRAIIObject;
    friend class ParenBraceBracketBalancer;
+   //--- INSIEME COMPILER ---//
+ 	friend class ::ParserProxy;
+ //-----------------------//
    PrettyStackTraceParserEntry CrashInfo;
  
    Preprocessor &PP;
diff -crB llvm-2.9/tools/clang/include/clang/Sema/Sema.h llvm-2.9/tools/clang/include/clang/Sema/Sema.h
*** llvm-2.9/tools/clang/include/clang/Sema/Sema.h	2011-03-07 17:54:27.000000000 +0100
--- llvm-2.9/tools/clang/include/clang/Sema/Sema.h	2011-03-10 18:59:24.956569001 +0100
***************
*** 801,807 ****
                                 CXXScopeSpec *SS,
                                 ParsedType &SuggestedType);
  
!   Decl *ActOnDeclarator(Scope *S, Declarator &D);
  
    Decl *HandleDeclarator(Scope *S, Declarator &D,
                           MultiTemplateParamsArg TemplateParameterLists,
--- 801,807 ----
                                 CXXScopeSpec *SS,
                                 ParsedType &SuggestedType);
  
!   virtual Decl *ActOnDeclarator(Scope *S, Declarator &D);
  
    Decl *HandleDeclarator(Scope *S, Declarator &D,
                           MultiTemplateParamsArg TemplateParameterLists,
***************
*** 870,880 ****
                                        bool TypeMayContainAuto = true);
    void ActOnFinishKNRParamDeclarations(Scope *S, Declarator &D,
                                         SourceLocation LocAfterDecls);
!   Decl *ActOnStartOfFunctionDef(Scope *S, Declarator &D);
!   Decl *ActOnStartOfFunctionDef(Scope *S, Decl *D);
    void ActOnStartOfObjCMethodDef(Scope *S, Decl *D);
  
!   Decl *ActOnFinishFunctionBody(Decl *Decl, Stmt *Body);
    Decl *ActOnFinishFunctionBody(Decl *Decl, Stmt *Body, bool IsInstantiation);
  
    /// \brief Diagnose any unused parameters in the given sequence of
--- 870,880 ----
                                        bool TypeMayContainAuto = true);
    void ActOnFinishKNRParamDeclarations(Scope *S, Declarator &D,
                                         SourceLocation LocAfterDecls);
!   virtual Decl *ActOnStartOfFunctionDef(Scope *S, Declarator &D);
!   virtual Decl *ActOnStartOfFunctionDef(Scope *S, Decl *D);
    void ActOnStartOfObjCMethodDef(Scope *S, Decl *D);
  
!   virtual Decl *ActOnFinishFunctionBody(Decl *Decl, Stmt *Body);
    Decl *ActOnFinishFunctionBody(Decl *Decl, Stmt *Body, bool IsInstantiation);
  
    /// \brief Diagnose any unused parameters in the given sequence of
***************
*** 983,989 ****
                    tok::ObjCKeywordKind visibility);
  
    // This is used for both record definitions and ObjC interface declarations.
!   void ActOnFields(Scope* S, SourceLocation RecLoc, Decl *TagDecl,
                     Decl **Fields, unsigned NumFields,
                     SourceLocation LBrac, SourceLocation RBrac,
                     AttributeList *AttrList);
--- 983,989 ----
                    tok::ObjCKeywordKind visibility);
  
    // This is used for both record definitions and ObjC interface declarations.
!   virtual void ActOnFields(Scope* S, SourceLocation RecLoc, Decl *TagDecl,
                     Decl **Fields, unsigned NumFields,
                     SourceLocation LBrac, SourceLocation RBrac,
                     AttributeList *AttrList);
***************
*** 1002,1008 ****
  
    /// ActOnTagFinishDefinition - Invoked once we have finished parsing
    /// the definition of a tag (enumeration, class, struct, or union).
!   void ActOnTagFinishDefinition(Scope *S, Decl *TagDecl,
                                  SourceLocation RBraceLoc);
  
    /// ActOnTagDefinitionError - Invoked when there was an unrecoverable
--- 1002,1008 ----
  
    /// ActOnTagFinishDefinition - Invoked once we have finished parsing
    /// the definition of a tag (enumeration, class, struct, or union).
!   virtual void ActOnTagFinishDefinition(Scope *S, Decl *TagDecl,
                                  SourceLocation RBraceLoc);
  
    /// ActOnTagDefinitionError - Invoked when there was an unrecoverable
***************
*** 1744,1753 ****
  
    StmtResult ActOnNullStmt(SourceLocation SemiLoc,
                             bool LeadingEmptyMacro = false);
!   StmtResult ActOnCompoundStmt(SourceLocation L, SourceLocation R,
                                         MultiStmtArg Elts,
                                         bool isStmtExpr);
!   StmtResult ActOnDeclStmt(DeclGroupPtrTy Decl,
                                     SourceLocation StartLoc,
                                     SourceLocation EndLoc);
    void ActOnForEachDeclStmt(DeclGroupPtrTy Decl);
--- 1744,1753 ----
  
    StmtResult ActOnNullStmt(SourceLocation SemiLoc,
                             bool LeadingEmptyMacro = false);
!   virtual StmtResult ActOnCompoundStmt(SourceLocation L, SourceLocation R,
                                         MultiStmtArg Elts,
                                         bool isStmtExpr);
!   virtual StmtResult ActOnDeclStmt(DeclGroupPtrTy Decl,
                                     SourceLocation StartLoc,
                                     SourceLocation EndLoc);
    void ActOnForEachDeclStmt(DeclGroupPtrTy Decl);
***************
*** 1763,1769 ****
    StmtResult ActOnLabelStmt(SourceLocation IdentLoc, LabelDecl *TheDecl,
                              SourceLocation ColonLoc, Stmt *SubStmt);
      
!   StmtResult ActOnIfStmt(SourceLocation IfLoc,
                           FullExprArg CondVal, Decl *CondVar,
                           Stmt *ThenVal,
                           SourceLocation ElseLoc, Stmt *ElseVal);
--- 1763,1769 ----
    StmtResult ActOnLabelStmt(SourceLocation IdentLoc, LabelDecl *TheDecl,
                              SourceLocation ColonLoc, Stmt *SubStmt);
      
!   virtual StmtResult ActOnIfStmt(SourceLocation IfLoc,
                           FullExprArg CondVal, Decl *CondVar,
                           Stmt *ThenVal,
                           SourceLocation ElseLoc, Stmt *ElseVal);
***************
*** 1780,1786 ****
                                   SourceLocation CondLParen, Expr *Cond,
                                   SourceLocation CondRParen);
  
!   StmtResult ActOnForStmt(SourceLocation ForLoc,
                            SourceLocation LParenLoc,
                            Stmt *First, FullExprArg Second,
                            Decl *SecondVar,
--- 1780,1786 ----
                                   SourceLocation CondLParen, Expr *Cond,
                                   SourceLocation CondRParen);
  
!   virtual StmtResult ActOnForStmt(SourceLocation ForLoc,
                            SourceLocation LParenLoc,
                            Stmt *First, FullExprArg Second,
                            Decl *SecondVar,

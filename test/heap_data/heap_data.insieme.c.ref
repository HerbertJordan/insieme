// --- Generated Inspire Code ---
#include <alloca.h>
#include <stddef.h>
#include <stdlib.h>
#include <runtime.h>
#define bool int
#define true 1
#define false 0
#define null 0
// --- Entry Point ---

// start code fragment :: type_declaration___insieme_globals //
struct __insieme_globals { 
    int a[10];
};

// start code fragment :: Definition of init //
void init(struct __insieme_globals var_4) {
	{
		for(int i = 0; i < 10; i += 1) {
			((((((var_4).a))[((unsigned int)((i)))])) = (i));
		};
	}
}


// start code fragment :: Prototype for external function: printf ... type: ((ref<array<char,1>>,var_list)->int<4>) //
int printf(char*, ...);

// start code fragment :: Definition of sum //
int sum(struct __insieme_globals var_7) {
	{
		int res = 0;
		for(int i = 0; i < 10; i += 1) {
			((res) = ((res)+(((((var_7).a))[((unsigned int)((i)))]))));
		};
		return (res);;
	}
}


// start code fragment :: Definition of main //
int main(int argc, char** argv) {
	{
		struct __insieme_globals* var_1 = malloc(sizeof(struct __insieme_globals));
		init(var_1);
		printf("sum=%d\n", sum(var_1));
	}
}


digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: printf(..., ...)\l"];
3[shape=box,label="[B3]\l"];
4[shape=box,label="[B4]\l0: string.as.char.pointer(\"sum=%d\n\")\l"];
5[shape=box,label="[B5]\l0: varlist.pack((fun{...}(v1)))\l"];
6[shape=diamond,label="ENTRY"];
7[shape=diamond,label="EXIT"];
8[shape=box,label="[B8]\l0: 10 <CTRL>\lT: FOR( ... ; v4 < 10; ...)\l"];
9[shape=box,label="[B9]\l0: v4 += 1 <LOOP_INC>\l"];
10[shape=box,label="[B10]\l0: ref.assign(..., v4)\l"];
11[shape=box,label="[B11]\l"];
12[shape=box,label="[B12]\l0: vector.ref.elem(..., ...)\l"];
13[shape=box,label="[B13]\l0: composite.ref.elem(v2, a, type<vector<int<4>,10>>)\l"];
14[shape=box,label="[B14]\l0: CAST<uint<4>>\l"];
15[shape=box,label="[B15]\l0: decl int<4> v4 = 0 <LOOP_INIT>\l"];
16[shape=box,label="CALL"];
17[shape=box,label="RET"];
19[shape=box,label="[B19]\l0: decl v1 = ...\l"];
20[shape=box,label="[B20]\l0: ref.new(struct{a:=vector.init.uniform(0, 10)})\l"];
2->1 [label=""];
4->2 [label="0"];
3->4 [label=""];
5->2 [label="1"];
3->5 [label=""];
9->8 [label=""];
10->9 [label=""];
12->10 [label="0"];
13->12 [label="0"];
11->13 [label=""];
14->12 [label="1"];
11->14 [label=""];
8->11 [label="true"];
8->7 [label="false"];
15->8 [label=""];
6->15 [label=""];
16->6 [label=""];
7->17 [label=""];
17->3 [label=""];
19->16 [label=""];
20->19 [label=""];
0->20 [label=""];
}

// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v1, ref<array<array<char,1>,1>> v2){
        decl ref<char> v3 =  var('a');
        decl ref<vector<char,5>> v4 =  var("Hallo");
        decl ref<vector<vector<char,3>,5>> v5 =  var([ var("X"),  var("Y"),  var("Z")]);
        decl ref<vector<vector<vector<char,2>,3>,5>> v6 =  var(undefined(vector<vector<vector<char,2>,3>,5>));
        decl ref<array<char,1>> v7 = v4;
        decl ref<array<array<char,1>,1>> v8 =  var(null);
        decl ref<array<array<array<char,1>,1>,1>> v9 =  var(null);
        decl ref<array<vector<char,3>,1>> v10 =  var(undefined(array<vector<char,3>,1>));
        decl ref<array<array<vector<vector<char,2>,3>,1>,1>> v11 =  var(undefined(array<array<vector<vector<char,2>,3>,1>,1>));
        decl ref<array<array<array<vector<vector<vector<char,1>,2>,3>,1>,1>,1>> v12 =  var(undefined(array<array<array<vector<vector<vector<char,1>,2>,3>,1>,1>,1>));
        decl ref<array<array<array<vector<char,3>,1>,1>,1>> v13 =  var(undefined(array<array<array<vector<char,3>,1>,1>,1>));
        decl ref<array<vector<vector<vector<char,1>,2>,3>,1>> v14 =  var(undefined(array<vector<vector<vector<char,1>,2>,3>,1>));
        decl ref<vector<array<char,1>,3>> v15 =  var(undefined(vector<array<char,1>,3>));
        decl ref<vector<vector<array<array<char,1>,1>,3>,2>> v16 =  var(undefined(vector<vector<array<array<char,1>,1>,3>,2>));
        decl ref<vector<vector<vector<array<array<array<char,1>,1>,1>,3>,2>,1>> v17 =  var(undefined(vector<vector<vector<array<array<array<char,1>,1>,1>,3>,2>,1>));
        decl ref<struct<s1:char,s2:array<char,1>,s3:vector<char,5>,s4:vector<vector<char,3>,5>,s5:array<char,1>,s6:array<array<char,1>,1>,s7:array<vector<char,4>,1>,s8:array<vector<vector<char,3>,4>,1>,s9:array<array<vector<char,4>,1>,1>,s10:array<array<vector<vector<char,3>,4>,1>,1>>> v18 =  var(undefined(struct<s1:char,s2:array<char,1>,s3:vector<char,5>,s4:vector<vector<char,3>,5>,s5:array<char,1>,s6:array<array<char,1>,1>,s7:array<vector<char,4>,1>,s8:array<vector<vector<char,3>,4>,1>,s9:array<array<vector<char,4>,1>,1>,s10:array<array<vector<vector<char,3>,4>,1>,1>>));
        composite.ref.elem(v18, s1, char) := '#';
        printf(string.as.char.pointer("size of s %d\n"), varlist.pack((sizeof(struct<s1:char,s2:array<char,1>,s3:vector<char,5>,s4:vector<vector<char,3>,5>,s5:array<char,1>,s6:array<array<char,1>,1>,s7:array<vector<char,4>,1>,s8:array<vector<vector<char,3>,4>,1>,s9:array<array<vector<char,4>,1>,1>,s10:array<array<vector<vector<char,3>,4>,1>,1>>))));
        printf(string.as.char.pointer("size of b1 %d\n"), varlist.pack((5*sizeof(char))));
        printf(string.as.char.pointer("size of b2 %d\n"), varlist.pack((5*3*sizeof(char))));
        printf(string.as.char.pointer("size of b3 %d\n"), varlist.pack((5*3*2*sizeof(char))));
        printf(string.as.char.pointer("size of c1 %d\n"), varlist.pack((sizeof(array<char,1>))));
        printf(string.as.char.pointer("size of c2 %d\n"), varlist.pack((sizeof(array<array<char,1>,1>))));
        printf(string.as.char.pointer("size of c3 %d\n"), varlist.pack((sizeof(array<array<array<char,1>,1>,1>))));
        printf(string.as.char.pointer("size of d1 %d\n"), varlist.pack((sizeof(array<vector<char,3>,1>))));
        printf(string.as.char.pointer("size of d2 %d\n"), varlist.pack((sizeof(array<array<vector<vector<char,2>,3>,1>,1>))));
        printf(string.as.char.pointer("size of d3 %d\n"), varlist.pack((sizeof(array<array<array<vector<vector<vector<char,1>,2>,3>,1>,1>,1>))));
        printf(string.as.char.pointer("size of d4 %d\n"), varlist.pack((sizeof(array<array<array<vector<char,3>,1>,1>,1>))));
        printf(string.as.char.pointer("size of d5 %d\n"), varlist.pack((sizeof(array<vector<vector<vector<char,1>,2>,3>,1>))));
        printf(string.as.char.pointer("size of e1 %d\n"), varlist.pack((3*sizeof(array<char,1>))));
        printf(string.as.char.pointer("size of e2 %d\n"), varlist.pack((2*3*sizeof(array<array<char,1>,1>))));
        printf(string.as.char.pointer("size of e3 %d\n"), varlist.pack((1*2*3*sizeof(array<array<array<char,1>,1>,1>))));
        printf(string.as.char.pointer("Letter Array:   %c\n"), varlist.pack((fun(char v19, ref<array<char,1>> v20, ref<array<vector<char,3>,1>> v21, ref<array<vector<vector<char,2>,3>,1>> v22){
            return array.ref.elem.1D(v20, 3);
        }(v3, v4, v5, v6))));
        printf(string.as.char.pointer("Letter Pointer: %c\n"), varlist.pack((fun(char v24, ref<array<char,1>> v25, ref<array<array<char,1>,1>> v26, ref<array<array<array<char,1>,1>,1>> v27){
            return array.ref.elem.1D(v25, 3);
        }(v3, v7, v8, v9))));
        printf(string.as.char.pointer("Letter Struct:  %c\n"), varlist.pack((fun(struct<s1:char,s2:array<char,1>,s3:vector<char,5>,s4:vector<vector<char,3>,5>,s5:array<char,1>,s6:array<array<char,1>,1>,s7:array<vector<char,4>,1>,s8:array<vector<vector<char,3>,4>,1>,s9:array<array<vector<char,4>,1>,1>,s10:array<array<vector<vector<char,3>,4>,1>,1>> v29){
            return v29.s1;
        }(v18))));
        decl ref<vector<array<char,1>,5>> v31 =  var([ var("This"),  var("is"),  var("a"),  var("little"),  var("test")]);
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((array.ref.elem.1D(v31, 0))));
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((array.ref.elem.1D(v31, 1))));
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((array.ref.elem.1D(v31, 2))));
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((array.ref.elem.1D(v31, 3))));
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((array.ref.elem.1D(v31, 4))));
        return 0;
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v1, ref<array<array<char,1>,1>> v2){
        decl ref<char> v3 = ( var('a'));
        decl ref<vector<char,5>> v4 = ( var("Hallo"));
        decl ref<vector<vector<char,3>,5>> v5 = ( var([( var("X")), ( var("Y")), ( var("Z"))]));
        decl ref<vector<vector<vector<char,2>,3>,5>> v6 = ( var(undefined(vector<vector<vector<char,2>,3>,5>)));
        decl ref<array<char,1>> v7 = v4;
        decl ref<array<array<char,1>,1>> v8 = ( var(CAST<array<array<char,1>,1>>(null)));
        decl ref<array<array<array<char,1>,1>,1>> v9 = ( var(CAST<array<array<array<char,1>,1>,1>>(null)));
        decl ref<array<vector<char,3>,1>> v10 = ( var(undefined(array<vector<char,3>,1>)));
        decl ref<array<array<vector<vector<char,2>,3>,1>,1>> v11 = ( var(undefined(array<array<vector<vector<char,2>,3>,1>,1>)));
        decl ref<array<array<array<vector<vector<vector<char,1>,2>,3>,1>,1>,1>> v12 = ( var(undefined(array<array<array<vector<vector<vector<char,1>,2>,3>,1>,1>,1>)));
        decl ref<array<array<array<vector<char,3>,1>,1>,1>> v13 = ( var(undefined(array<array<array<vector<char,3>,1>,1>,1>)));
        decl ref<array<vector<vector<vector<char,1>,2>,3>,1>> v14 = ( var(undefined(array<vector<vector<vector<char,1>,2>,3>,1>)));
        decl ref<vector<array<char,1>,3>> v15 = ( var(undefined(vector<array<char,1>,3>)));
        decl ref<vector<vector<array<array<char,1>,1>,3>,2>> v16 = ( var(undefined(vector<vector<array<array<char,1>,1>,3>,2>)));
        decl ref<vector<vector<vector<array<array<array<char,1>,1>,1>,3>,2>,1>> v17 = ( var(undefined(vector<vector<vector<array<array<array<char,1>,1>,1>,3>,2>,1>)));
        decl ref<struct<s1:char,s2:array<char,1>,s3:vector<char,5>,s4:vector<vector<char,3>,5>,s5:array<char,1>,s6:array<array<char,1>,1>,s7:array<vector<char,4>,1>,s8:array<vector<vector<char,3>,4>,1>,s9:array<array<vector<char,4>,1>,1>,s10:array<array<vector<vector<char,3>,4>,1>,1>>> v18 = ( var(undefined(struct<s1:char,s2:array<char,1>,s3:vector<char,5>,s4:vector<vector<char,3>,5>,s5:array<char,1>,s6:array<array<char,1>,1>,s7:array<vector<char,4>,1>,s8:array<vector<vector<char,3>,4>,1>,s9:array<array<vector<char,4>,1>,1>,s10:array<array<vector<vector<char,3>,4>,1>,1>>)));
        (composite.ref.elem(v18, s1, char) := '#');
        printf(string.as.char.pointer("size of s %d\n"), varlist.pack((sizeof(struct<s1:char,s2:array<char,1>,s3:vector<char,5>,s4:vector<vector<char,3>,5>,s5:array<char,1>,s6:array<array<char,1>,1>,s7:array<vector<char,4>,1>,s8:array<vector<vector<char,3>,4>,1>,s9:array<array<vector<char,4>,1>,1>,s10:array<array<vector<vector<char,3>,4>,1>,1>>))));
        printf(string.as.char.pointer("size of b1 %d\n"), varlist.pack(((5*sizeof(char)))));
        printf(string.as.char.pointer("size of b2 %d\n"), varlist.pack(((5*(3*sizeof(char))))));
        printf(string.as.char.pointer("size of b3 %d\n"), varlist.pack(((5*(3*(2*sizeof(char)))))));
        printf(string.as.char.pointer("size of c1 %d\n"), varlist.pack((sizeof(array<char,1>))));
        printf(string.as.char.pointer("size of c2 %d\n"), varlist.pack((sizeof(array<array<char,1>,1>))));
        printf(string.as.char.pointer("size of c3 %d\n"), varlist.pack((sizeof(array<array<array<char,1>,1>,1>))));
        printf(string.as.char.pointer("size of d1 %d\n"), varlist.pack((sizeof(array<vector<char,3>,1>))));
        printf(string.as.char.pointer("size of d2 %d\n"), varlist.pack((sizeof(array<array<vector<vector<char,2>,3>,1>,1>))));
        printf(string.as.char.pointer("size of d3 %d\n"), varlist.pack((sizeof(array<array<array<vector<vector<vector<char,1>,2>,3>,1>,1>,1>))));
        printf(string.as.char.pointer("size of d4 %d\n"), varlist.pack((sizeof(array<array<array<vector<char,3>,1>,1>,1>))));
        printf(string.as.char.pointer("size of d5 %d\n"), varlist.pack((sizeof(array<vector<vector<vector<char,1>,2>,3>,1>))));
        printf(string.as.char.pointer("size of e1 %d\n"), varlist.pack(((3*sizeof(array<char,1>)))));
        printf(string.as.char.pointer("size of e2 %d\n"), varlist.pack(((2*(3*sizeof(array<array<char,1>,1>))))));
        printf(string.as.char.pointer("size of e3 %d\n"), varlist.pack(((1*(2*(3*sizeof(array<array<array<char,1>,1>,1>)))))));
        printf(string.as.char.pointer("Letter Array:   %c\n"), varlist.pack((CAST<int<4>>(fun(char v19, ref<array<char,1>> v20, ref<array<vector<char,3>,1>> v21, ref<array<vector<vector<char,2>,3>,1>> v22){
            return ( *array.ref.elem.1D(v20, CAST<uint<4>>(3)));
        }(( *v3), v4, v5, v6)))));
        printf(string.as.char.pointer("Letter Pointer: %c\n"), varlist.pack((CAST<int<4>>(fun(char v24, ref<array<char,1>> v25, ref<array<array<char,1>,1>> v26, ref<array<array<array<char,1>,1>,1>> v27){
            return ( *array.ref.elem.1D(v25, CAST<uint<4>>(3)));
        }(( *v3), v7, v8, v9)))));
        printf(string.as.char.pointer("Letter Struct:  %c\n"), varlist.pack((CAST<int<4>>(fun(struct<s1:char,s2:array<char,1>,s3:vector<char,5>,s4:vector<vector<char,3>,5>,s5:array<char,1>,s6:array<array<char,1>,1>,s7:array<vector<char,4>,1>,s8:array<vector<vector<char,3>,4>,1>,s9:array<array<vector<char,4>,1>,1>,s10:array<array<vector<vector<char,3>,4>,1>,1>> v29){
            return v29.s1;
        }(( *v18))))));
        decl ref<vector<array<char,1>,5>> v31 = ( var([( var("This")), ( var("is")), ( var("a")), ( var("little")), ( var("test"))]));
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((( *array.ref.elem.1D(v31, CAST<uint<4>>(0))))));
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((( *array.ref.elem.1D(v31, CAST<uint<4>>(1))))));
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((( *array.ref.elem.1D(v31, CAST<uint<4>>(2))))));
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((( *array.ref.elem.1D(v31, CAST<uint<4>>(3))))));
        printf(string.as.char.pointer("String:  %s\n"), varlist.pack((( *array.ref.elem.1D(v31, CAST<uint<4>>(4))))));
        return 0;
    }


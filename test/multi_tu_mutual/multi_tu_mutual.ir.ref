// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v1, ref<array<array<char,1>,1>> v2){
        printf(string.as.char.pointer("even(%d)?: %s\n"), varlist.pack((12, ite(int.ne(recFun v3 {
            v3 = fun(uint<4> v5){
                return ite(v5==0, bind(){fun()return 1()}, bind(){fun(uint<4> v6, (uint<4>) -> int<4> v7)return v7(v6-1)(v5, v4)});
            };
            v4 = fun(uint<4> v10){
                return ite(v10==0, bind(){fun()return 0()}, bind(){fun(uint<4> v11, (uint<4>) -> int<4> v12)return v12(v11-1)(v10, v3)});
            };
        }(12), 0), bind(){fun()return vector.to.array(['t', 'r', 'u', 'e', '\0'])()}, bind(){fun()return vector.to.array(['f', 'a', 'l', 's', 'e', ...])()}))));
        printf(string.as.char.pointer("odd(%d)?: %s\n"), varlist.pack((12, ite(int.ne(recFun v4 {
            v3 = fun(uint<4> v5){
                return ite(v5==0, bind(){fun()return 1()}, bind(){fun(uint<4> v6, (uint<4>) -> int<4> v7)return v7(v6-1)(v5, v4)});
            };
            v4 = fun(uint<4> v10){
                return ite(v10==0, bind(){fun()return 0()}, bind(){fun(uint<4> v11, (uint<4>) -> int<4> v12)return v12(v11-1)(v10, v3)});
            };
        }(12), 0), bind(){fun()return vector.to.array(['t', 'r', 'u', 'e', '\0'])()}, bind(){fun()return vector.to.array(['f', 'a', 'l', 's', 'e', ...])()}))));
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v1, ref<array<array<char,1>,1>> v2){
        printf(string.as.char.pointer("even(%d)?: %s\n"), varlist.pack((12, ite(int.ne(recFun v3 {
            v3 = fun(uint<4> v5){
                return ite((v5==CAST<uint<4>>(0)), bind(){fun()return 1()}, bind(){fun(uint<4> v6, (uint<4>) -> int<4> v7)return v7((v6-CAST<uint<4>>(1)))(v5, v4)});
            };
            v4 = fun(uint<4> v10){
                return ite((v10==CAST<uint<4>>(0)), bind(){fun()return 0()}, bind(){fun(uint<4> v11, (uint<4>) -> int<4> v12)return v12((v11-CAST<uint<4>>(1)))(v10, v3)});
            };
        }(CAST<uint<4>>(12)), 0), bind(){fun()return vector.to.array(['t', 'r', 'u', 'e', '\0'])()}, bind(){fun()return vector.to.array(['f', 'a', 'l', 's', 'e', ...])()}))));
        printf(string.as.char.pointer("odd(%d)?: %s\n"), varlist.pack((12, ite(int.ne(recFun v4 {
            v3 = fun(uint<4> v5){
                return ite((v5==CAST<uint<4>>(0)), bind(){fun()return 1()}, bind(){fun(uint<4> v6, (uint<4>) -> int<4> v7)return v7((v6-CAST<uint<4>>(1)))(v5, v4)});
            };
            v4 = fun(uint<4> v10){
                return ite((v10==CAST<uint<4>>(0)), bind(){fun()return 0()}, bind(){fun(uint<4> v11, (uint<4>) -> int<4> v12)return v12((v11-CAST<uint<4>>(1)))(v10, v3)});
            };
        }(CAST<uint<4>>(12)), 0), bind(){fun()return vector.to.array(['t', 'r', 'u', 'e', '\0'])()}, bind(){fun()return vector.to.array(['f', 'a', 'l', 's', 'e', ...])()}))));
    }


digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: 0\lT: RETURN\l"];
3[shape=diamond,label="ENTRY"];
4[shape=diamond,label="EXIT"];
5[shape=box,label="[B5]\l0: ref.delete(v3)\l"];
7[shape=box,label="[B7]\l0: bool.not(is.null(( *composite.ref.elem(array.ref.elem.1D(( *v3), 0), top, type<ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>))))\lT: WHILE(...)\l"];
8[shape=box,label="[B8]\l0: ref.delete(...)\l"];
10[shape=box,label="[B10]\l0: ref.deref(v2)\l"];
11[shape=box,label="[B11]\l0: ref.assign(..., ...)\l"];
12[shape=box,label="[B12]\l0: decl v2 = ...\l"];
13[shape=box,label="[B13]\l0: composite.ref.elem(..., top, type<ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>)\l"];
14[shape=box,label="[B14]\l0: array.ref.elem.1D(..., 0)\l"];
15[shape=box,label="[B15]\l0: ref.deref(v3)\l"];
16[shape=box,label="[B16]\l0: ref.deref(...)\l"];
17[shape=box,label="[B17]\l0: composite.ref.elem(..., next, type<ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>)\l"];
18[shape=box,label="[B18]\l0: array.ref.elem.1D(..., 0)\l"];
19[shape=box,label="[B19]\l0: ref.deref(v2)\l"];
20[shape=box,label="[B20]\l0: ref.var(...)\l"];
22[shape=box,label="[B22]\l0: ref.deref(...)\l"];
23[shape=box,label="[B23]\l0: composite.ref.elem(..., top, type<ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>)\l"];
24[shape=box,label="[B24]\l0: array.ref.elem.1D(..., 0)\l"];
25[shape=box,label="[B25]\l0: ref.deref(v3)\l"];
27[shape=box,label="[B27]\l0: is.null(...)\l"];
28[shape=box,label="[B28]\l0: ref.deref(...)\l"];
29[shape=box,label="[B29]\l0: composite.ref.elem(..., top, type<ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>)\l"];
30[shape=box,label="[B30]\l0: array.ref.elem.1D(..., 0)\l"];
31[shape=box,label="[B31]\l0: ref.deref(v3)\l"];
32[shape=box,label="[B32]\l0: decl v3 = ...\l"];
33[shape=box,label="[B33]\l0: ref.var(v1)\l"];
35[shape=box,label="CALL"];
36[shape=box,label="RET"];
38[shape=box,label="[B38]\l0: ref.deref(v16)\l"];
39[shape=box,label="[B39]\l0: ref.assign(v15, ...)\l"];
40[shape=box,label="[B40]\l"];
41[shape=box,label="[B41]\l0: int.add(0, ...)\l"];
42[shape=box,label="[B42]\l0: int.mul(..., 1)\l"];
43[shape=box,label="[B43]\l0: CAST<int<4>>(...)\l"];
44[shape=box,label="[B44]\l0: ceil(...)\l"];
45[shape=box,label="[B45]\l0: real.div(..., ...)\l"];
46[shape=box,label="[B46]\l0: CAST<real<8>>(...)\l"];
47[shape=box,label="[B47]\l0: int.sub(5, 0)\l"];
48[shape=box,label="[B48]\l0: CAST<real<8>>\l"];
49[shape=box,label="[B49]\l0: 5 <CTRL>\lT: FOR( ... ; v20 < 5; ...)\l"];
50[shape=box,label="[B50]\l0: v20 += 1 <LOOP_INC>\l"];
51[shape=box,label="[B51]\l0: printf(..., ...)\l"];
52[shape=box,label="[B52]\l"];
53[shape=box,label="[B53]\l0: string.as.char.pointer(\"Poping %d\n\")\l"];
54[shape=box,label="[B54]\l0: varlist.pack((fun{...}(( *v16))))\l"];
55[shape=box,label="[B55]\l0: decl int<4> v20 = 0 <LOOP_INIT>\l"];
56[shape=box,label="[B56]\l0: ref.assign(v15, ...)\l"];
57[shape=box,label="[B57]\l"];
58[shape=box,label="[B58]\l0: int.add(0, ...)\l"];
59[shape=box,label="[B59]\l0: int.mul(..., 1)\l"];
60[shape=box,label="[B60]\l0: CAST<int<4>>(...)\l"];
61[shape=box,label="[B61]\l0: ceil(...)\l"];
62[shape=box,label="[B62]\l0: real.div(..., ...)\l"];
63[shape=box,label="[B63]\l0: CAST<real<8>>(...)\l"];
64[shape=box,label="[B64]\l0: int.sub(10, 0)\l"];
65[shape=box,label="[B65]\l0: CAST<real<8>>\l"];
66[shape=box,label="[B66]\l0: 10 <CTRL>\lT: FOR( ... ; v18 < 10; ...)\l"];
67[shape=box,label="[B67]\l0: v18 += 1 <LOOP_INC>\l"];
68[shape=diamond,label="ENTRY"];
69[shape=diamond,label="EXIT"];
70[shape=box,label="[B70]\l0: ref.assign(..., ...)\l"];
71[shape=box,label="[B71]\l0: ref.assign(..., ...)\l"];
72[shape=box,label="[B72]\l0: composite.ref.elem(..., top, type<ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>)\l"];
73[shape=box,label="[B73]\l0: array.ref.elem.1D(v5, 0)\l"];
74[shape=box,label="[B74]\l0: ref.deref(v7)\l"];
75[shape=box,label="[B75]\l0: ref.assign(..., v6)\l"];
76[shape=box,label="[B76]\l0: composite.ref.elem(..., next, type<ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>)\l"];
77[shape=box,label="[B77]\l0: array.ref.elem.1D(..., 0)\l"];
78[shape=box,label="[B78]\l0: ref.deref(v7)\l"];
79[shape=box,label="[B79]\l0: ref.deref(...)\l"];
80[shape=box,label="[B80]\l0: composite.ref.elem(..., top, type<ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>)\l"];
81[shape=box,label="[B81]\l0: array.ref.elem.1D(v5, 0)\l"];
83[shape=box,label="[B83]\l0: composite.ref.elem(..., value, type<int<4>>)\l"];
84[shape=box,label="[B84]\l0: array.ref.elem.1D(..., 0)\l"];
85[shape=box,label="[B85]\l0: ref.deref(v7)\l"];
86[shape=box,label="[B86]\l0: decl v7 = ...\l"];
87[shape=box,label="[B87]\l0: ref.var(...)\l"];
89[shape=box,label="[B89]\l0: ref.new(...)\l"];
90[shape=box,label="[B90]\l0: array.create.1D(type<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>}>, ...)\l"];
91[shape=box,label="[B91]\l0: uint.div(..., ...)\l"];
92[shape=box,label="[B92]\l0: sizeof(type<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>}>)\l"];
93[shape=box,label="[B93]\l0: sizeof(type<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>}>)\l"];
94[shape=box,label="CALL"];
95[shape=box,label="RET"];
97[shape=box,label="[B97]\l0: ref.deref(v16)\l"];
98[shape=box,label="[B98]\l0: printf(..., ...)\l"];
99[shape=box,label="[B99]\l"];
100[shape=box,label="[B100]\l0: string.as.char.pointer(\"Pushing %d\n\")\l"];
101[shape=box,label="[B101]\l0: varlist.pack((v18))\l"];
102[shape=box,label="[B102]\l0: decl int<4> v18 = 0 <LOOP_INIT>\l"];
103[shape=box,label="[B103]\l0: ref.assign(v16, ...)\l"];
105[shape=diamond,label="ENTRY"];
106[shape=diamond,label="EXIT"];
107[shape=box,label="[B107]\l0: ref.deref(v13)\lT: RETURN\l"];
109[shape=box,label="[B109]\l0: ref.assign(..., ...)\l"];
110[shape=box,label="[B110]\l0: decl v13 = ...\l"];
111[shape=box,label="[B111]\l0: composite.ref.elem(..., top, type<ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>)\l"];
112[shape=box,label="[B112]\l0: array.ref.elem.1D(..., 0)\l"];
113[shape=box,label="[B113]\l0: ref.deref(v13)\l"];
114[shape=box,label="[B114]\l0: get.null(type<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>)\l"];
115[shape=box,label="[B115]\l0: ref.var(...)\l"];
117[shape=box,label="[B117]\l0: ref.new(...)\l"];
118[shape=box,label="[B118]\l0: array.create.1D(type<struct<top:ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>>, ...)\l"];
119[shape=box,label="[B119]\l0: uint.div(..., ...)\l"];
120[shape=box,label="[B120]\l0: sizeof(type<struct<top:ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>>)\l"];
121[shape=box,label="[B121]\l0: sizeof(type<struct<top:ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>>)\l"];
122[shape=box,label="CALL"];
123[shape=box,label="RET"];
124[shape=box,label="[B124]\l0: decl v16 = ...\l"];
125[shape=box,label="[B125]\l0: ref.var(...)\l"];
127[shape=box,label="[B127]\l0: undefined(type<ref<array<struct<top:ref<array<rec 'elem{'elem=struct<value:int<4>,next:ref<array<'elem,1>>>},1>>>,1>>>)\l"];
128[shape=box,label="[B128]\l0: decl v15 = ...\l"];
129[shape=box,label="[B129]\l0: ref.var(0)\l"];
2->1 [label=""];
5->4 [label=""];
8->7 [label=""];
10->8 [label="0"];
11->10 [label=""];
13->11 [label="0"];
14->13 [label="0"];
15->14 [label="0"];
12->15 [label=""];
16->11 [label="1"];
17->16 [label="0"];
18->17 [label="0"];
19->18 [label="0"];
12->19 [label=""];
20->12 [label=""];
22->20 [label="0"];
23->22 [label="0"];
24->23 [label="0"];
25->24 [label="0"];
7->25 [label="true"];
7->5 [label="false"];
27->7 [label="0"];
28->27 [label="0"];
29->28 [label="0"];
30->29 [label="0"];
31->30 [label="0"];
32->31 [label=""];
33->32 [label=""];
3->33 [label=""];
35->3 [label=""];
4->36 [label=""];
36->2 [label=""];
38->35 [label="0"];
39->38 [label=""];
41->39 [label="1"];
42->41 [label="1"];
43->42 [label="0"];
44->43 [label="0"];
45->44 [label="0"];
46->45 [label="0"];
47->46 [label="0"];
40->47 [label=""];
48->45 [label="1"];
40->48 [label=""];
50->49 [label=""];
51->50 [label=""];
53->51 [label="0"];
52->53 [label=""];
54->51 [label="1"];
52->54 [label=""];
49->52 [label="true"];
49->40 [label="false"];
55->49 [label=""];
56->55 [label=""];
58->56 [label="1"];
59->58 [label="1"];
60->59 [label="0"];
61->60 [label="0"];
62->61 [label="0"];
63->62 [label="0"];
64->63 [label="0"];
57->64 [label=""];
65->62 [label="1"];
57->65 [label=""];
67->66 [label=""];
70->69 [label=""];
72->70 [label="0"];
73->72 [label="0"];
71->73 [label=""];
74->70 [label="1"];
71->74 [label=""];
76->71 [label="0"];
77->76 [label="0"];
78->77 [label="0"];
75->78 [label=""];
79->71 [label="1"];
80->79 [label="0"];
81->80 [label="0"];
75->81 [label=""];
83->75 [label="0"];
84->83 [label="0"];
85->84 [label="0"];
86->85 [label=""];
87->86 [label=""];
89->87 [label="0"];
90->89 [label="0"];
91->90 [label="1"];
92->91 [label="0"];
93->91 [label="1"];
68->92 [label=""];
68->93 [label=""];
94->68 [label=""];
69->95 [label=""];
95->67 [label=""];
97->94 [label="0"];
98->97 [label=""];
100->98 [label="0"];
99->100 [label=""];
101->98 [label="1"];
99->101 [label=""];
66->99 [label="true"];
66->57 [label="false"];
102->66 [label=""];
103->102 [label=""];
107->106 [label=""];
109->107 [label=""];
111->109 [label="0"];
112->111 [label="0"];
113->112 [label="0"];
110->113 [label=""];
114->109 [label="1"];
110->114 [label=""];
115->110 [label=""];
117->115 [label="0"];
118->117 [label="0"];
119->118 [label="1"];
120->119 [label="0"];
121->119 [label="1"];
105->120 [label=""];
105->121 [label=""];
122->105 [label=""];
106->123 [label=""];
123->103 [label="1"];
124->122 [label=""];
125->124 [label=""];
127->125 [label="0"];
128->127 [label=""];
129->128 [label=""];
0->129 [label=""];
}

digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: 0\lT: RETURN\l"];
3[shape=diamond,label="ENTRY"];
4[shape=diamond,label="EXIT"];
5[shape=box,label="[B5]\l0: ref.delete(v19)\l"];
7[shape=box,label="[B7]\l0: bool.not(is.null(( *composite.ref.elem(array.ref.elem.1D(( *v19), 0), top, type<array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>))))\lT: WHILE(...)\l"];
8[shape=box,label="[B8]\l0: ref.delete(v18)\l"];
10[shape=box,label="[B10]\l0: ref.assign(..., ...)\l"];
11[shape=box,label="[B11]\l0: decl v18 = ...\l"];
12[shape=box,label="[B12]\l0: composite.ref.elem(..., top, type<array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>)\l"];
13[shape=box,label="[B13]\l0: array.ref.elem.1D(..., 0)\l"];
14[shape=box,label="[B14]\l0: ref.deref(v19)\l"];
15[shape=box,label="[B15]\l0: ref.deref(...)\l"];
16[shape=box,label="[B16]\l0: composite.ref.elem(..., next, type<array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>)\l"];
17[shape=box,label="[B17]\l0: array.ref.elem.1D(v18, 0)\l"];
18[shape=box,label="[B18]\l0: composite.ref.elem(..., top, type<array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>)\l"];
20[shape=box,label="[B20]\l0: array.ref.elem.1D(..., 0)\l"];
21[shape=box,label="[B21]\l0: ref.deref(v19)\l"];
23[shape=box,label="[B23]\l0: is.null(...)\l"];
24[shape=box,label="[B24]\l0: ref.deref(...)\l"];
25[shape=box,label="[B25]\l0: composite.ref.elem(..., top, type<array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>)\l"];
26[shape=box,label="[B26]\l0: array.ref.elem.1D(..., 0)\l"];
27[shape=box,label="[B27]\l0: ref.deref(v19)\l"];
28[shape=box,label="[B28]\l0: decl v19 = ...\l"];
29[shape=box,label="[B29]\l0: ref.var(v17)\l"];
31[shape=box,label="CALL"];
32[shape=box,label="RET"];
34[shape=box,label="[B34]\l0: ref.assign(v1, ...)\l"];
35[shape=box,label="[B35]\l"];
36[shape=box,label="[B36]\l0: int.add(0, ...)\l"];
37[shape=box,label="[B37]\l0: int.mul(..., 1)\l"];
38[shape=box,label="[B38]\l0: CAST<int<4>>(...)\l"];
39[shape=box,label="[B39]\l0: ceil(...)\l"];
40[shape=box,label="[B40]\l0: real.div(..., ...)\l"];
41[shape=box,label="[B41]\l0: CAST<real<8>>(...)\l"];
42[shape=box,label="[B42]\l0: int.sub(5, 0)\l"];
43[shape=box,label="[B43]\l0: CAST<real<8>>\l"];
44[shape=box,label="[B44]\l0: 5 <CTRL>\lT: FOR( ... ; v16 < 5; ...)\l"];
45[shape=box,label="[B45]\l0: v16 += 1 <LOOP_INC>\l"];
46[shape=box,label="[B46]\l0: printf(..., ...)\l"];
47[shape=box,label="[B47]\l"];
48[shape=box,label="[B48]\l0: string.as.char.pointer(\"Poping %d\n\")\l"];
49[shape=box,label="[B49]\l0: varlist.pack((fun{...}(v2)))\l"];
50[shape=box,label="[B50]\l0: decl int<4> v16 = 0 <LOOP_INIT>\l"];
51[shape=box,label="[B51]\l0: ref.assign(v1, ...)\l"];
52[shape=box,label="[B52]\l"];
53[shape=box,label="[B53]\l0: int.add(0, ...)\l"];
54[shape=box,label="[B54]\l0: int.mul(..., 1)\l"];
55[shape=box,label="[B55]\l0: CAST<int<4>>(...)\l"];
56[shape=box,label="[B56]\l0: ceil(...)\l"];
57[shape=box,label="[B57]\l0: real.div(..., ...)\l"];
58[shape=box,label="[B58]\l0: CAST<real<8>>(...)\l"];
59[shape=box,label="[B59]\l0: int.sub(10, 0)\l"];
60[shape=box,label="[B60]\l0: CAST<real<8>>\l"];
61[shape=box,label="[B61]\l0: 10 <CTRL>\lT: FOR( ... ; v10 < 10; ...)\l"];
62[shape=box,label="[B62]\l0: v10 += 1 <LOOP_INC>\l"];
63[shape=diamond,label="ENTRY"];
64[shape=diamond,label="EXIT"];
65[shape=box,label="[B65]\l0: ref.assign(..., ...)\l"];
66[shape=box,label="[B66]\l0: ref.assign(..., ...)\l"];
67[shape=box,label="[B67]\l0: composite.ref.elem(..., top, type<array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>)\l"];
68[shape=box,label="[B68]\l0: array.ref.elem.1D(v5, 0)\l"];
69[shape=box,label="[B69]\l0: ref.deref(v7)\l"];
70[shape=box,label="[B70]\l0: ref.assign(..., v6)\l"];
71[shape=box,label="[B71]\l0: composite.ref.elem(..., next, type<array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>)\l"];
72[shape=box,label="[B72]\l0: array.ref.elem.1D(v7, 0)\l"];
73[shape=box,label="[B73]\l0: ref.deref(...)\l"];
74[shape=box,label="[B74]\l0: composite.ref.elem(..., top, type<array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>)\l"];
75[shape=box,label="[B75]\l0: array.ref.elem.1D(v5, 0)\l"];
77[shape=box,label="[B77]\l0: composite.ref.elem(..., value, type<int<4>>)\l"];
78[shape=box,label="[B78]\l0: array.ref.elem.1D(v7, 0)\l"];
79[shape=box,label="[B79]\l0: decl v7 = ...\l"];
80[shape=box,label="[B80]\l0: ref.new(...)\l"];
82[shape=box,label="[B82]\l0: array.create.1D(type<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>}>, ...)\l"];
83[shape=box,label="[B83]\l0: uint.div(..., ...)\l"];
84[shape=box,label="[B84]\l0: sizeof(type<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>}>)\l"];
85[shape=box,label="[B85]\l0: sizeof(type<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>}>)\l"];
86[shape=box,label="CALL"];
87[shape=box,label="RET"];
89[shape=box,label="[B89]\l0: printf(..., ...)\l"];
90[shape=box,label="[B90]\l"];
91[shape=box,label="[B91]\l0: string.as.char.pointer(\"Pushing %d\n\")\l"];
92[shape=box,label="[B92]\l0: varlist.pack((v10))\l"];
93[shape=box,label="[B93]\l0: decl int<4> v10 = 0 <LOOP_INIT>\l"];
94[shape=box,label="[B94]\l0: ref.assign(v2, ...)\l"];
96[shape=box,label="[B96]\l0: ref.deref(...)\l"];
97[shape=diamond,label="ENTRY"];
98[shape=diamond,label="EXIT"];
99[shape=box,label="[B99]\l0: v3\lT: RETURN\l"];
100[shape=box,label="[B100]\l0: ref.assign(..., ...)\l"];
101[shape=box,label="[B101]\l0: decl v3 = ...\l"];
102[shape=box,label="[B102]\l0: composite.ref.elem(..., top, type<array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>)\l"];
103[shape=box,label="[B103]\l0: array.ref.elem.1D(v3, 0)\l"];
104[shape=box,label="[B104]\l0: get.null(type<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>}>)\l"];
105[shape=box,label="[B105]\l0: ref.new(...)\l"];
107[shape=box,label="[B107]\l0: array.create.1D(type<struct<top:array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>>, ...)\l"];
108[shape=box,label="[B108]\l0: uint.div(..., ...)\l"];
109[shape=box,label="[B109]\l0: sizeof(type<struct<top:array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>>)\l"];
110[shape=box,label="[B110]\l0: sizeof(type<struct<top:array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>>)\l"];
111[shape=box,label="CALL"];
112[shape=box,label="RET"];
113[shape=box,label="[B113]\l0: decl v2 = ...\l"];
114[shape=box,label="[B114]\l0: ref.var(...)\l"];
116[shape=box,label="[B116]\l0: undefined(type<array<struct<top:array<rec 'elem{'elem=struct<value:int<4>,next:array<'elem,1>>},1>>,1>>)\l"];
117[shape=box,label="[B117]\l0: decl v1 = ...\l"];
118[shape=box,label="[B118]\l0: ref.var(0)\l"];
2->1 [label=""];
5->4 [label=""];
8->7 [label=""];
10->8 [label=""];
12->10 [label="0"];
13->12 [label="0"];
14->13 [label="0"];
11->14 [label=""];
15->10 [label="1"];
16->15 [label="0"];
17->16 [label="0"];
11->17 [label=""];
18->11 [label=""];
20->18 [label="0"];
21->20 [label="0"];
7->21 [label="true"];
7->5 [label="false"];
23->7 [label="0"];
24->23 [label="0"];
25->24 [label="0"];
26->25 [label="0"];
27->26 [label="0"];
28->27 [label=""];
29->28 [label=""];
3->29 [label=""];
31->3 [label=""];
4->32 [label=""];
32->2 [label=""];
34->31 [label=""];
36->34 [label="1"];
37->36 [label="1"];
38->37 [label="0"];
39->38 [label="0"];
40->39 [label="0"];
41->40 [label="0"];
42->41 [label="0"];
35->42 [label=""];
43->40 [label="1"];
35->43 [label=""];
45->44 [label=""];
46->45 [label=""];
48->46 [label="0"];
47->48 [label=""];
49->46 [label="1"];
47->49 [label=""];
44->47 [label="true"];
44->35 [label="false"];
50->44 [label=""];
51->50 [label=""];
53->51 [label="1"];
54->53 [label="1"];
55->54 [label="0"];
56->55 [label="0"];
57->56 [label="0"];
58->57 [label="0"];
59->58 [label="0"];
52->59 [label=""];
60->57 [label="1"];
52->60 [label=""];
62->61 [label=""];
65->64 [label=""];
67->65 [label="0"];
68->67 [label="0"];
66->68 [label=""];
69->65 [label="1"];
66->69 [label=""];
71->66 [label="0"];
72->71 [label="0"];
70->72 [label=""];
73->66 [label="1"];
74->73 [label="0"];
75->74 [label="0"];
70->75 [label=""];
77->70 [label="0"];
78->77 [label="0"];
79->78 [label=""];
80->79 [label=""];
82->80 [label="0"];
83->82 [label="1"];
84->83 [label="0"];
85->83 [label="1"];
63->84 [label=""];
63->85 [label=""];
86->63 [label=""];
64->87 [label=""];
87->62 [label=""];
89->86 [label=""];
91->89 [label="0"];
90->91 [label=""];
92->89 [label="1"];
90->92 [label=""];
61->90 [label="true"];
61->52 [label="false"];
93->61 [label=""];
94->93 [label=""];
96->94 [label="1"];
99->98 [label=""];
100->99 [label=""];
102->100 [label="0"];
103->102 [label="0"];
101->103 [label=""];
104->100 [label="1"];
101->104 [label=""];
105->101 [label=""];
107->105 [label="0"];
108->107 [label="1"];
109->108 [label="0"];
110->108 [label="1"];
97->109 [label=""];
97->110 [label=""];
111->97 [label=""];
98->112 [label=""];
112->96 [label="0"];
113->111 [label=""];
114->113 [label=""];
116->114 [label="0"];
117->116 [label=""];
118->117 [label=""];
0->118 [label=""];
}

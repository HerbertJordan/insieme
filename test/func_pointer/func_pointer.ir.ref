// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v28, ref<array<ref<array<char,1>>,1>> v29){
        decl ref<vector<(int<4>, int<4>) -> int<4>,4>> v30 =  var([fun(int<4> v1, int<4> v2){
            return ite(v1<v2, bind(){fun(int<4> v38)return v38(v1)}, bind(){fun(int<4> v36)return v36(v2)});
        }, fun(int<4> v8, int<4> v9){
            return ite(v8>v9, bind(){fun(int<4> v48)return v48(v8)}, bind(){fun(int<4> v46)return v46(v9)});
        }, fun(int<4> v15, int<4> v16){
            return v15+v16;
        }, fun(int<4> v18, int<4> v19){
            return fun(int<4> v15, int<4> v16){
                return v15+v16;
            }(v18, v19)/2;
        }]);
        for(decl int<4> v56 = 0 .. 4 : 1) {
            printf(string.as.char.pointer("Applying func: %d\n"), varlist.pack((vector.ref.elem(v30, v56)(10, 20))));
        };
        fun(ref<array<int<4>,1>> v21, int<4> v22){
            for(decl int<4> v24 = 0 .. v22 : 1) 
                printf(string.as.char.pointer("%d,"), varlist.pack((array.ref.elem.1D(v21, v24))))
            ;
        }( var(vector.to.array([2, 3, 4])), 3);
        if(!int.ne(2, 0)) { } else { };
        decl ref<vector<(int<4>, int<4>) -> int<4>,4>> v57 =  var([fun(int<4> v1, int<4> v2){
            return ite(v1<v2, bind(){fun(int<4> v65)return v65(v1)}, bind(){fun(int<4> v63)return v63(v2)});
        }, fun(int<4> v8, int<4> v9){
            return ite(v8>v9, bind(){fun(int<4> v75)return v75(v8)}, bind(){fun(int<4> v73)return v73(v9)});
        }, fun(int<4> v15, int<4> v16){
            return v15+v16;
        }, fun(int<4> v18, int<4> v19){
            return fun(int<4> v15, int<4> v16){
                return v15+v16;
            }(v18, v19)/2;
        }]);
        printf(string.as.char.pointer("Sum: %d\n"), varlist.pack((fun(ref<array<vector<(int<4>, int<4>) -> int<4>,4>,1>> v26){
            return vector.ref.elem(array.ref.elem.1D(v26, 0), 1)(1, 2);
        }(scalar.to.array(v57)))));
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v28, ref<array<ref<array<char,1>>,1>> v29){
        decl ref<vector<(int<4>, int<4>) -> int<4>,4>> v30 = ( var([fun(int<4> v1, int<4> v2){
            return ite((v1<v2), bind(){fun(int<4> v38)return v38(v1)}, bind(){fun(int<4> v36)return v36(v2)});
        }, fun(int<4> v8, int<4> v9){
            return ite((v8>v9), bind(){fun(int<4> v48)return v48(v8)}, bind(){fun(int<4> v46)return v46(v9)});
        }, fun(int<4> v15, int<4> v16){
            return (v15+v16);
        }, fun(int<4> v18, int<4> v19){
            return (fun(int<4> v15, int<4> v16){
                return (v15+v16);
            }(v18, v19)/2);
        }]));
        for(decl int<4> v56 = 0 .. 4 : 1) {
            printf(string.as.char.pointer("Applying func: %d\n"), varlist.pack((( *vector.ref.elem(v30, CAST<uint<4>>(v56)))(10, 20))));
        };
        fun(ref<array<int<4>,1>> v21, int<4> v22){
            for(decl int<4> v24 = 0 .. v22 : 1) 
                printf(string.as.char.pointer("%d,"), varlist.pack((( *array.ref.elem.1D(v21, CAST<uint<4>>(v24))))))
            ;
        }(( var(vector.to.array([2, 3, 4]))), 3);
        if((!int.ne(2, 0))) { } else { };
        decl ref<vector<(int<4>, int<4>) -> int<4>,4>> v57 = ( var([fun(int<4> v1, int<4> v2){
            return ite((v1<v2), bind(){fun(int<4> v65)return v65(v1)}, bind(){fun(int<4> v63)return v63(v2)});
        }, fun(int<4> v8, int<4> v9){
            return ite((v8>v9), bind(){fun(int<4> v75)return v75(v8)}, bind(){fun(int<4> v73)return v73(v9)});
        }, fun(int<4> v15, int<4> v16){
            return (v15+v16);
        }, fun(int<4> v18, int<4> v19){
            return (fun(int<4> v15, int<4> v16){
                return (v15+v16);
            }(v18, v19)/2);
        }]));
        printf(string.as.char.pointer("Sum: %d\n"), varlist.pack((fun(ref<array<vector<(int<4>, int<4>) -> int<4>,4>,1>> v26){
            return ( *vector.ref.elem(array.ref.elem.1D(v26, 0), CAST<uint<4>>(1)))(1, 2);
        }(scalar.to.array(v57)))));
    }


digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: 0\lT: RETURN\l"];
3[shape=box,label="[B3]\l0: ref.delete(v3)\l"];
5[shape=box,label="[B5]\l0: 10 <CTRL>\lT: FOR( ... ; v24 < 10; ...)\l"];
6[shape=box,label="[B6]\l0: v24 += 1 <LOOP_INC>\l"];
7[shape=box,label="[B7]\l0: printf(..., ...)\l"];
8[shape=box,label="[B8]\l"];
9[shape=box,label="[B9]\l0: string.as.char.pointer(\"a[N/2] == %d\n\")\l"];
10[shape=box,label="[B10]\l0: varlist.pack((( *array.ref.elem.1D(v3, CAST<uint<4>>((20000/2))))))\l"];
11[shape=diamond,label="ENTRY"];
12[shape=diamond,label="EXIT"];
13[shape=box,label="[B13]\l0: int.gt(v8, ...)\lT: IF(...)\l"];
14[shape=box,label="[B14]\l0: v5(v6, ..., v8)\l"];
16[shape=box,label="[B16]\l0: ref.deref(v11)\l"];
17[shape=box,label="[B17]\l0: v5(v6, v7, ...)\l"];
19[shape=box,label="[B19]\l0: ref.deref(v10)\l"];
20[shape=diamond,label="ENTRY"];
21[shape=diamond,label="EXIT"];
22[shape=box,label="[B22]\l0: ref.assign(..., ...)\l"];
23[shape=box,label="[B23]\l0: ref.assign(..., ...)\l"];
24[shape=box,label="[B24]\l0: array.ref.elem.1D(v13, 0)\l"];
25[shape=box,label="[B25]\l0: ref.deref(v14)\l"];
26[shape=box,label="[B26]\l0: decl v14 = ...\l"];
27[shape=box,label="[B27]\l0: array.ref.elem.1D(v12, 0)\l"];
28[shape=box,label="[B28]\l0: ref.deref(...)\l"];
29[shape=box,label="[B29]\l0: array.ref.elem.1D(v13, 0)\l"];
30[shape=box,label="[B30]\l0: array.ref.elem.1D(v12, 0)\l"];
32[shape=box,label="CALL"];
33[shape=box,label="RET"];
34[shape=box,label="[B34]\l"];
35[shape=box,label="[B35]\l0: scalar.to.array(...)\l"];
36[shape=box,label="[B36]\l0: array.ref.elem.1D(v6, ...)\l"];
37[shape=box,label="[B37]\l0: CAST<uint<4>>\l"];
38[shape=box,label="[B38]\l0: int.preDec(v10)\l"];
39[shape=box,label="[B39]\l0: scalar.to.array(...)\l"];
40[shape=box,label="[B40]\l0: array.ref.elem.1D(v6, ...)\l"];
41[shape=box,label="[B41]\l0: CAST<uint<4>>\l"];
42[shape=box,label="[B42]\l0: int.lt(( *v10), ( *v11))\lT: WHILE(...)\l"];
43[shape=box,label="[B43]\l0: int.le(..., ...)\lT: IF(...)\l"];
44[shape=box,label="[B44]\l0: int.postInc(v10)\l"];
46[shape=diamond,label="ENTRY"];
47[shape=diamond,label="EXIT"];
48[shape=box,label="[B48]\l0: ref.assign(..., ...)\l"];
49[shape=box,label="[B49]\l0: ref.assign(..., ...)\l"];
50[shape=box,label="[B50]\l0: array.ref.elem.1D(v13, 0)\l"];
51[shape=box,label="[B51]\l0: ref.deref(v14)\l"];
52[shape=box,label="[B52]\l0: decl v14 = ...\l"];
53[shape=box,label="[B53]\l0: array.ref.elem.1D(v12, 0)\l"];
54[shape=box,label="[B54]\l0: ref.deref(...)\l"];
55[shape=box,label="[B55]\l0: array.ref.elem.1D(v13, 0)\l"];
56[shape=box,label="[B56]\l0: array.ref.elem.1D(v12, 0)\l"];
58[shape=box,label="CALL"];
59[shape=box,label="RET"];
60[shape=box,label="[B60]\l"];
61[shape=box,label="[B61]\l0: scalar.to.array(...)\l"];
62[shape=box,label="[B62]\l0: array.ref.elem.1D(v6, ...)\l"];
63[shape=box,label="[B63]\l0: CAST<uint<4>>\l"];
64[shape=box,label="[B64]\l0: ref.deref(v10)\l"];
65[shape=box,label="[B65]\l0: scalar.to.array(...)\l"];
66[shape=box,label="[B66]\l0: array.ref.elem.1D(v6, ...)\l"];
67[shape=box,label="[B67]\l0: CAST<uint<4>>\l"];
68[shape=box,label="[B68]\l0: int.preDec(v11)\l"];
69[shape=box,label="[B69]\l"];
70[shape=box,label="[B70]\l0: ref.deref(...)\l"];
71[shape=box,label="[B71]\l0: array.ref.elem.1D(v6, ...)\l"];
72[shape=box,label="[B72]\l0: CAST<uint<4>>\l"];
73[shape=box,label="[B73]\l0: ref.deref(v10)\l"];
74[shape=box,label="[B74]\l0: ref.deref(v9)\l"];
75[shape=box,label="[B75]\l0: decl v11 = ...\l"];
76[shape=box,label="[B76]\l0: ref.deref(v10)\l"];
77[shape=box,label="[B77]\l0: ref.deref(v11)\l"];
78[shape=box,label="[B78]\l0: ref.var(v8)\l"];
80[shape=box,label="[B80]\l0: decl v10 = ...\l"];
81[shape=box,label="[B81]\l0: ref.var(...)\l"];
83[shape=box,label="[B83]\l0: int.add(v7, 1)\l"];
84[shape=box,label="[B84]\l0: decl v9 = ...\l"];
85[shape=box,label="[B85]\l0: array.ref.elem.1D(v6, ...)\l"];
87[shape=box,label="[B87]\l0: CAST<uint<4>>\l"];
89[shape=box,label="[B89]\l0: int.add(v7, 1)\l"];
90[shape=box,label="CALL"];
91[shape=box,label="RET"];
93[shape=diamond,label="ENTRY"];
94[shape=diamond,label="EXIT"];
95[shape=box,label="[B95]\l0: ((v21-v20)/2) <CTRL>\lT: FOR( ... ; v22 < v21-v20/2; ...)\l"];
96[shape=box,label="[B96]\l0: int.div(..., 2)\l"];
98[shape=box,label="[B98]\l0: int.sub(v21, v20)\l"];
99[shape=box,label="[B99]\l0: v22 += 1 <LOOP_INC>\l"];
100[shape=box,label="CALL"];
101[shape=box,label="RET"];
102[shape=box,label="[B102]\l"];
103[shape=box,label="[B103]\l0: scalar.to.array(...)\l"];
104[shape=box,label="[B104]\l0: array.ref.elem.1D(v19, ...)\l"];
105[shape=box,label="[B105]\l0: CAST<uint<4>>\l"];
106[shape=box,label="[B106]\l0: int.add(v20, ...)\l"];
107[shape=box,label="[B107]\l0: ref.deref(v22)\l"];
108[shape=box,label="[B108]\l0: scalar.to.array(...)\l"];
109[shape=box,label="[B109]\l0: array.ref.elem.1D(v19, ...)\l"];
110[shape=box,label="[B110]\l0: CAST<uint<4>>\l"];
111[shape=box,label="[B111]\l0: int.sub(..., 1)\l"];
112[shape=box,label="[B112]\l0: int.sub(v21, ...)\l"];
113[shape=box,label="[B113]\l0: ref.deref(v22)\l"];
114[shape=box,label="[B114]\l0: decl ref<int<4>> v22 = ( var(0)) <LOOP_INIT>\l"];
115[shape=box,label="CALL"];
116[shape=box,label="RET"];
118[shape=box,label="CALL"];
119[shape=box,label="RET"];
121[shape=box,label="[B121]\l0: 20000 <CTRL>\lT: FOR( ... ; v4 < 20000; ...)\l"];
122[shape=box,label="[B122]\l0: v4 += 1 <LOOP_INC>\l"];
123[shape=box,label="[B123]\l0: ref.assign(..., ...)\l"];
124[shape=box,label="[B124]\l"];
125[shape=box,label="[B125]\l0: array.ref.elem.1D(v3, ...)\l"];
126[shape=box,label="[B126]\l0: CAST<uint<4>>\l"];
127[shape=box,label="[B127]\l0: ref.deref(v4)\l"];
128[shape=box,label="[B128]\l0: int.mod(..., 20000)\l"];
129[shape=box,label="[B129]\l0: rand()\l"];
130[shape=box,label="[B130]\l0: decl ref<int<4>> v4 = ( var(0)) <LOOP_INIT>\l"];
131[shape=box,label="[B131]\l0: decl ref<int<4>> v24 = ( var(0)) <LOOP_INIT>\l"];
132[shape=box,label="[B132]\l0: decl v3 = ...\l"];
133[shape=box,label="[B133]\l0: ref.new(...)\l"];
134[shape=box,label="[B134]\l"];
135[shape=box,label="[B135]\l0: array.create.1D(type<int<4>>, ...)\l"];
136[shape=box,label="[B136]\l0: uint.div(..., ...)\l"];
137[shape=box,label="[B137]\l0: uint.mul(..., ...)\l"];
138[shape=box,label="[B138]\l0: CAST<uint<8>>\l"];
139[shape=box,label="[B139]\l0: sizeof(type<int<4>>)\l"];
140[shape=box,label="[B140]\l0: sizeof(type<int<4>>)\l"];
2->1 [label=""];
3->2 [label=""];
6->5 [label=""];
7->6 [label=""];
9->7 [label="0"];
8->9 [label=""];
10->7 [label="1"];
8->10 [label=""];
14->12 [label=""];
16->14 [label="1"];
17->16 [label=""];
19->17 [label="2"];
22->21 [label=""];
24->22 [label="0"];
23->24 [label=""];
25->22 [label="1"];
23->25 [label=""];
27->23 [label="0"];
26->27 [label=""];
28->23 [label="1"];
29->28 [label="0"];
26->29 [label=""];
30->26 [label=""];
20->30 [label=""];
32->20 [label=""];
21->33 [label=""];
33->19 [label=""];
35->32 [label="0"];
36->35 [label="0"];
37->36 [label="1"];
38->37 [label="1"];
34->38 [label=""];
39->32 [label="1"];
40->39 [label="0"];
41->40 [label="1"];
34->41 [label=""];
44->42 [label=""];
43->44 [label="true"];
48->47 [label=""];
50->48 [label="0"];
49->50 [label=""];
51->48 [label="1"];
49->51 [label=""];
53->49 [label="0"];
52->53 [label=""];
54->49 [label="1"];
55->54 [label="0"];
52->55 [label=""];
56->52 [label=""];
46->56 [label=""];
58->46 [label=""];
47->59 [label=""];
59->42 [label=""];
61->58 [label="0"];
62->61 [label="0"];
63->62 [label="1"];
64->63 [label="1"];
60->64 [label=""];
65->58 [label="1"];
66->65 [label="0"];
67->66 [label="1"];
68->67 [label="1"];
60->68 [label=""];
43->60 [label="false"];
70->43 [label="0"];
71->70 [label="0"];
72->71 [label="1"];
73->72 [label="1"];
69->73 [label=""];
74->43 [label="1"];
69->74 [label=""];
42->69 [label="true"];
42->34 [label="false"];
76->42 [label="0"];
75->76 [label=""];
77->42 [label="1"];
75->77 [label=""];
78->75 [label=""];
80->78 [label=""];
81->80 [label=""];
83->81 [label="0"];
84->83 [label=""];
85->84 [label=""];
87->85 [label="1"];
13->87 [label="true"];
13->12 [label="false"];
89->13 [label="1"];
11->89 [label=""];
90->11 [label=""];
12->91 [label=""];
91->8 [label=""];
96->95 [label=""];
98->96 [label="0"];
99->98 [label=""];
100->46 [label=""];
47->101 [label=""];
101->99 [label=""];
103->100 [label="0"];
104->103 [label="0"];
105->104 [label="1"];
106->105 [label="1"];
107->106 [label="1"];
102->107 [label=""];
108->100 [label="1"];
109->108 [label="0"];
110->109 [label="1"];
111->110 [label="1"];
112->111 [label="0"];
113->112 [label="1"];
102->113 [label=""];
95->102 [label="true"];
95->94 [label="false"];
114->98 [label=""];
93->114 [label=""];
115->93 [label=""];
94->116 [label=""];
116->90 [label=""];
118->11 [label=""];
12->119 [label=""];
119->115 [label=""];
122->121 [label=""];
123->122 [label=""];
125->123 [label="0"];
126->125 [label="1"];
127->126 [label="1"];
124->127 [label=""];
128->123 [label="1"];
129->128 [label="0"];
124->129 [label=""];
121->124 [label="true"];
121->118 [label="false"];
130->121 [label=""];
5->130 [label="true"];
5->3 [label="false"];
131->5 [label=""];
132->131 [label=""];
133->132 [label=""];
135->133 [label="0"];
136->135 [label="1"];
137->136 [label="0"];
138->137 [label="0"];
134->138 [label=""];
139->137 [label="1"];
134->139 [label=""];
140->136 [label="1"];
134->140 [label=""];
0->134 [label=""];
}

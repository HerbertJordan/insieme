digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: 0\lT: RETURN\l"];
3[shape=box,label="[B3]\l0: ref.delete(...)\l"];
5[shape=box,label="[B5]\l0: ref.deref(v20)\l"];
6[shape=box,label="[B6]\l0: 10 <CTRL>\lT: FOR( ... ; v24 < 10; ...)\l"];
7[shape=box,label="[B7]\l0: v24 += 1 <LOOP_INC>\l"];
8[shape=box,label="[B8]\l0: printf(..., ...)\l"];
9[shape=box,label="[B9]\l"];
10[shape=box,label="[B10]\l0: string.as.char.pointer(\"a[N/2] == %d\n\")\l"];
11[shape=box,label="[B11]\l0: varlist.pack((( *array.ref.elem.1D(( *v20), CAST<uint<4>>((20000/2))))))\l"];
12[shape=diamond,label="ENTRY"];
13[shape=diamond,label="EXIT"];
14[shape=box,label="[B14]\l0: int.gt(v8, ...)\lT: IF(...)\l"];
15[shape=box,label="[B15]\l0: v5(v6, ..., v8)\l"];
17[shape=box,label="[B17]\l0: ref.deref(v11)\l"];
18[shape=box,label="[B18]\l0: v5(v6, v7, ...)\l"];
20[shape=box,label="[B20]\l0: ref.deref(v10)\l"];
21[shape=diamond,label="ENTRY"];
22[shape=diamond,label="EXIT"];
23[shape=box,label="[B23]\l0: ref.assign(..., ...)\l"];
24[shape=box,label="[B24]\l0: ref.assign(..., ...)\l"];
25[shape=box,label="[B25]\l0: array.ref.elem.1D(v2, 0)\l"];
26[shape=box,label="[B26]\l0: ref.deref(v3)\l"];
27[shape=box,label="[B27]\l0: decl v3 = ...\l"];
28[shape=box,label="[B28]\l0: array.ref.elem.1D(v1, 0)\l"];
29[shape=box,label="[B29]\l0: ref.deref(...)\l"];
30[shape=box,label="[B30]\l0: array.ref.elem.1D(v2, 0)\l"];
31[shape=box,label="[B31]\l0: ref.var(...)\l"];
33[shape=box,label="[B33]\l0: ref.deref(...)\l"];
34[shape=box,label="[B34]\l0: array.ref.elem.1D(v1, 0)\l"];
35[shape=box,label="CALL"];
36[shape=box,label="RET"];
37[shape=box,label="[B37]\l"];
38[shape=box,label="[B38]\l0: scalar.to.array(...)\l"];
39[shape=box,label="[B39]\l0: array.ref.elem.1D(v6, ...)\l"];
40[shape=box,label="[B40]\l0: CAST<uint<4>>\l"];
41[shape=box,label="[B41]\l0: int.preDec(v10)\l"];
42[shape=box,label="[B42]\l0: scalar.to.array(...)\l"];
43[shape=box,label="[B43]\l0: array.ref.elem.1D(v6, ...)\l"];
44[shape=box,label="[B44]\l0: CAST<uint<4>>\l"];
45[shape=box,label="[B45]\l0: int.lt(( *v10), ( *v11))\lT: WHILE(...)\l"];
46[shape=box,label="[B46]\l0: int.le(..., ...)\lT: IF(...)\l"];
47[shape=box,label="[B47]\l0: int.postInc(v10)\l"];
49[shape=box,label="CALL"];
50[shape=box,label="RET"];
51[shape=box,label="[B51]\l"];
52[shape=box,label="[B52]\l0: scalar.to.array(...)\l"];
53[shape=box,label="[B53]\l0: array.ref.elem.1D(v6, ...)\l"];
54[shape=box,label="[B54]\l0: CAST<uint<4>>\l"];
55[shape=box,label="[B55]\l0: ref.deref(v10)\l"];
56[shape=box,label="[B56]\l0: scalar.to.array(...)\l"];
57[shape=box,label="[B57]\l0: array.ref.elem.1D(v6, ...)\l"];
58[shape=box,label="[B58]\l0: CAST<uint<4>>\l"];
59[shape=box,label="[B59]\l0: int.preDec(v11)\l"];
60[shape=box,label="[B60]\l"];
61[shape=box,label="[B61]\l0: ref.deref(...)\l"];
62[shape=box,label="[B62]\l0: array.ref.elem.1D(v6, ...)\l"];
63[shape=box,label="[B63]\l0: CAST<uint<4>>\l"];
64[shape=box,label="[B64]\l0: ref.deref(v10)\l"];
65[shape=box,label="[B65]\l0: ref.deref(v9)\l"];
66[shape=box,label="[B66]\l0: decl v11 = ...\l"];
67[shape=box,label="[B67]\l0: ref.deref(v10)\l"];
68[shape=box,label="[B68]\l0: ref.deref(v11)\l"];
69[shape=box,label="[B69]\l0: ref.var(v8)\l"];
71[shape=box,label="[B71]\l0: decl v10 = ...\l"];
72[shape=box,label="[B72]\l0: ref.var(...)\l"];
74[shape=box,label="[B74]\l0: int.add(v7, 1)\l"];
75[shape=box,label="[B75]\l0: decl v9 = ...\l"];
76[shape=box,label="[B76]\l0: ref.var(...)\l"];
78[shape=box,label="[B78]\l0: ref.deref(...)\l"];
79[shape=box,label="[B79]\l0: array.ref.elem.1D(v6, ...)\l"];
80[shape=box,label="[B80]\l0: CAST<uint<4>>\l"];
82[shape=box,label="[B82]\l0: int.add(v7, 1)\l"];
83[shape=box,label="CALL"];
84[shape=box,label="RET"];
86[shape=box,label="[B86]\l0: ref.deref(v20)\l"];
87[shape=diamond,label="ENTRY"];
88[shape=diamond,label="EXIT"];
89[shape=box,label="[B89]\l0: ((v14-v13)/2) <CTRL>\lT: FOR( ... ; v16 < v14-v13/2; ...)\l"];
90[shape=box,label="[B90]\l0: int.div(..., 2)\l"];
92[shape=box,label="[B92]\l0: int.sub(v14, v13)\l"];
93[shape=box,label="[B93]\l0: v16 += 1 <LOOP_INC>\l"];
94[shape=box,label="CALL"];
95[shape=box,label="RET"];
96[shape=box,label="[B96]\l"];
97[shape=box,label="[B97]\l0: scalar.to.array(...)\l"];
98[shape=box,label="[B98]\l0: array.ref.elem.1D(v12, ...)\l"];
99[shape=box,label="[B99]\l0: CAST<uint<4>>\l"];
100[shape=box,label="[B100]\l0: int.add(v13, v16)\l"];
101[shape=box,label="[B101]\l0: scalar.to.array(...)\l"];
102[shape=box,label="[B102]\l0: array.ref.elem.1D(v12, ...)\l"];
103[shape=box,label="[B103]\l0: CAST<uint<4>>\l"];
104[shape=box,label="[B104]\l0: int.sub(..., 1)\l"];
105[shape=box,label="[B105]\l0: int.sub(v14, v16)\l"];
106[shape=box,label="[B106]\l0: decl int<4> v16 = 0 <LOOP_INIT>\l"];
107[shape=box,label="CALL"];
108[shape=box,label="RET"];
110[shape=box,label="[B110]\l0: ref.deref(v20)\l"];
111[shape=box,label="CALL"];
112[shape=box,label="RET"];
114[shape=box,label="[B114]\l0: ref.deref(v20)\l"];
115[shape=box,label="[B115]\l0: 20000 <CTRL>\lT: FOR( ... ; v22 < 20000; ...)\l"];
116[shape=box,label="[B116]\l0: v22 += 1 <LOOP_INC>\l"];
117[shape=box,label="[B117]\l0: ref.assign(..., ...)\l"];
118[shape=box,label="[B118]\l"];
119[shape=box,label="[B119]\l0: array.ref.elem.1D(..., ...)\l"];
120[shape=box,label="[B120]\l0: ref.deref(v20)\l"];
121[shape=box,label="[B121]\l0: CAST<uint<4>>\l"];
122[shape=box,label="[B122]\l0: int.mod(..., 20000)\l"];
123[shape=box,label="[B123]\l0: rand()\l"];
124[shape=box,label="[B124]\l0: decl int<4> v22 = 0 <LOOP_INIT>\l"];
125[shape=box,label="[B125]\l0: decl int<4> v24 = 0 <LOOP_INIT>\l"];
126[shape=box,label="[B126]\l0: decl v20 = ...\l"];
127[shape=box,label="[B127]\l0: ref.var(...)\l"];
128[shape=box,label="[B128]\l"];
129[shape=box,label="[B129]\l0: ref.new(...)\l"];
130[shape=box,label="[B130]\l0: array.create.1D(type<int<4>>, ...)\l"];
131[shape=box,label="[B131]\l0: uint.div(..., ...)\l"];
132[shape=box,label="[B132]\l0: uint.mul(..., ...)\l"];
133[shape=box,label="[B133]\l0: CAST<uint<8>>\l"];
134[shape=box,label="[B134]\l0: sizeof(type<int<4>>)\l"];
135[shape=box,label="[B135]\l0: sizeof(type<int<4>>)\l"];
2->1 [label=""];
3->2 [label=""];
5->3 [label="0"];
7->6 [label=""];
8->7 [label=""];
10->8 [label="0"];
9->10 [label=""];
11->8 [label="1"];
9->11 [label=""];
15->13 [label=""];
17->15 [label="1"];
18->17 [label=""];
20->18 [label="2"];
23->22 [label=""];
25->23 [label="0"];
24->25 [label=""];
26->23 [label="1"];
24->26 [label=""];
28->24 [label="0"];
27->28 [label=""];
29->24 [label="1"];
30->29 [label="0"];
27->30 [label=""];
31->27 [label=""];
33->31 [label="0"];
34->33 [label="0"];
21->34 [label=""];
35->21 [label=""];
22->36 [label=""];
36->20 [label=""];
38->35 [label="0"];
39->38 [label="0"];
40->39 [label="1"];
41->40 [label="1"];
37->41 [label=""];
42->35 [label="1"];
43->42 [label="0"];
44->43 [label="1"];
37->44 [label=""];
47->45 [label=""];
46->47 [label="true"];
49->21 [label=""];
22->50 [label=""];
50->45 [label=""];
52->49 [label="0"];
53->52 [label="0"];
54->53 [label="1"];
55->54 [label="1"];
51->55 [label=""];
56->49 [label="1"];
57->56 [label="0"];
58->57 [label="1"];
59->58 [label="1"];
51->59 [label=""];
46->51 [label="false"];
61->46 [label="0"];
62->61 [label="0"];
63->62 [label="1"];
64->63 [label="1"];
60->64 [label=""];
65->46 [label="1"];
60->65 [label=""];
45->60 [label="true"];
45->37 [label="false"];
67->45 [label="0"];
66->67 [label=""];
68->45 [label="1"];
66->68 [label=""];
69->66 [label=""];
71->69 [label=""];
72->71 [label=""];
74->72 [label="0"];
75->74 [label=""];
76->75 [label=""];
78->76 [label="0"];
79->78 [label="0"];
80->79 [label="1"];
14->80 [label="true"];
14->13 [label="false"];
82->14 [label="1"];
12->82 [label=""];
83->12 [label=""];
13->84 [label=""];
84->9 [label=""];
86->83 [label="0"];
90->89 [label=""];
92->90 [label="0"];
93->92 [label=""];
94->21 [label=""];
22->95 [label=""];
95->93 [label=""];
97->94 [label="0"];
98->97 [label="0"];
99->98 [label="1"];
100->99 [label="1"];
96->100 [label=""];
101->94 [label="1"];
102->101 [label="0"];
103->102 [label="1"];
104->103 [label="1"];
105->104 [label="0"];
96->105 [label=""];
89->96 [label="true"];
89->88 [label="false"];
106->92 [label=""];
87->106 [label=""];
107->87 [label=""];
88->108 [label=""];
108->86 [label=""];
110->107 [label="0"];
111->12 [label=""];
13->112 [label=""];
112->110 [label=""];
114->111 [label="0"];
116->115 [label=""];
117->116 [label=""];
119->117 [label="0"];
120->119 [label="0"];
118->120 [label=""];
121->119 [label="1"];
118->121 [label=""];
122->117 [label="1"];
123->122 [label="0"];
118->123 [label=""];
115->118 [label="true"];
115->114 [label="false"];
124->115 [label=""];
6->124 [label="true"];
6->5 [label="false"];
125->6 [label=""];
126->125 [label=""];
127->126 [label=""];
129->127 [label="0"];
130->129 [label="0"];
131->130 [label="1"];
132->131 [label="0"];
133->132 [label="0"];
128->133 [label=""];
134->132 [label="1"];
128->134 [label=""];
135->131 [label="1"];
128->135 [label=""];
0->128 [label=""];
}

// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v10, ref<array<array<char,1>,1>> v11){
        printf(string.as.char.pointer("%d\n"), varlist.pack((recFun v5 {
            v5 = fun(int<4> v7){
                if(v7>0) return v6(v7-1) else { };
                return 0-1;
            };
            v6 = fun(int<4> v8){
                if(v8>0) {
                    decl ref<int<4>> v9 =  var(v5(v8-1));
                    return v9+recFun v1 {
                        v1 = fun(int<4> v3){
                            if(v3<10) return 10+v2(v3) else { };
                            return v3;
                        };
                        v2 = fun(int<4> v4){
                            if(v4>10) return 0 else { };
                            return v1(v4+1);
                        };
                    }(v8+1);
                } else { };
                return 10;
            };
        }(3))));
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v10, ref<array<array<char,1>,1>> v11){
        printf(string.as.char.pointer("%d\n"), varlist.pack((recFun v5 {
            v5 = fun(int<4> v7){
                if((v7>0)) return v6((v7-1)) else { };
                return (CAST<int<4>>(0)-1);
            };
            v6 = fun(int<4> v8){
                if((v8>0)) {
                    decl ref<int<4>> v9 = ( var(v5((v8-1))));
                    return (( *v9)+recFun v1 {
                        v1 = fun(int<4> v3){
                            if((v3<10)) return (10+v2(v3)) else { };
                            return v3;
                        };
                        v2 = fun(int<4> v4){
                            if((v4>10)) return 0 else { };
                            return v1((v4+1));
                        };
                    }((v8+1)));
                } else { };
                return 10;
            };
        }(3))));
    }


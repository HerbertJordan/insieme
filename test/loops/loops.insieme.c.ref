// --- Generated Inspire Code ---
#include <alloca.h>
#include <stddef.h>
#include <stdlib.h>
#define bool int
#define true 1
#define false 0
#define null 0
// --- Entry Point ---

// start code fragment :: type_declaration___insieme_globals //
struct __insieme_globals { 
    int N;
};

// start code fragment :: Prototype for external function: printf //
int printf(char*, ...);

// start code fragment :: Prototype for external function: ceil //
double ceil(double);

// start code fragment :: Definition of func //
int func(int k) {
	{
		int var_11 = k;
		{
			{
				for(int var_12 = (var_11); var_12 < 10; var_12 += 1) {
					printf("k=%d\n", (var_12));
				};
				((var_11) = ((var_11)+(((int)(ceil((((double)((10-(var_11))))/((double)(1))))))*1)));
			};
			{
				for(int var_13 = (((int)(0))-10); var_13 < ((((int)(0))-0)+1); var_13 += 1) {
					printf("k=%d\n", (((int)(0))-(var_13)));
				};
				((var_11) = (10+(((int)(ceil((((double)((((((int)(0))-0)+1)-10)))/((double)(1))))))*1)));
			};
		};
	}
}


// start code fragment :: Definition of main //
int main(int argc, char** argv) {
	{
		struct __insieme_globals var_1 = ((struct __insieme_globals){10
		});
		int a = 10;
		for(int idx = 0; idx < (a); idx += 1) {
			printf("idx=%d", (idx));
		};
		for(int idx = (((int)(0))-(a)); idx < ((((int)(0))-0)+1); idx += 1) {
			printf("idx=%d", (((int)(0))-(idx)));
		};
		for(int idx = (((int)(0))-(((var_1).N))); idx < (((int)(0))-0); idx += 1) {
			printf("idx=%d", (((int)(0))-(idx)));
		};
		{
			int idx = (a);
			while(((((var_1).N))>0)) {
				{
					printf("idx=%d", (a));
				};
				((((var_1).N))--);
			};
		};
		{
			for(int var_9 = 1; var_9 < 15; var_9 += 3) {
				printf("a=%d\n", (var_9));
			};
			((a) = (1+(((int)(ceil((((double)((15-1)))/((double)(3))))))*3)));
		};
		printf("a=%d\n", (a));
		func((a));
	}
}


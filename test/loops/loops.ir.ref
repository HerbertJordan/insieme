// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, array<ref<array<ref<char>,1>>,1> v3){
        decl ref<struct<N:ref<int<4>>>> v1 =  new(struct{N:= var(10)});
        decl ref<int<4>> v4 =  var(10);
        for(decl ref<int<4>> v5 =  var(0) .. v4 : 1) {
            printf("idx=%d", varlist.pack((v5)));
        };
        for(decl ref<int<4>> v6 =  var(0-v4) .. 0-0+1 : 1) {
            printf("idx=%d", varlist.pack((0-v6)));
        };
        for(decl ref<int<4>> v7 =  var(0-v1.N) .. 0-0 : 1) {
            printf("idx=%d", varlist.pack((0-v7)));
        };
        {
            decl ref<int<4>> v8 =  var(v4);
            while(v1.N>0) {
                {
                    printf("idx=%d", varlist.pack((v4)));
                };
                int.postDec(v1.N);
            };
        };
        {
            for(decl ref<int<4>> v9 =  var(1) .. 15 : 3) {
                printf("a=%d\n", varlist.pack((v9)));
            };
            v4 := 1+ceil(15-1/3)*3;
        };
        printf("a=%d\n", varlist.pack((v4)));
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, array<ref<array<ref<char>,1>>,1> v3){
        decl ref<struct<N:ref<int<4>>>> v1 = ( new(struct{N:=( var(10))}));
        decl ref<int<4>> v4 = ( var(10));
        for(decl ref<int<4>> v5 = ( var(0)) .. ( *v4) : 1) {
            printf("idx=%d", varlist.pack((( *v5))));
        };
        for(decl ref<int<4>> v6 = ( var((CAST<int<4>>(0)-( *v4)))) .. ((CAST<int<4>>(0)-0)+1) : 1) {
            printf("idx=%d", varlist.pack(((CAST<int<4>>(0)-( *v6)))));
        };
        for(decl ref<int<4>> v7 = ( var((CAST<int<4>>(0)-( *( *v1).N)))) .. (CAST<int<4>>(0)-0) : 1) {
            printf("idx=%d", varlist.pack(((CAST<int<4>>(0)-( *v7)))));
        };
        {
            decl ref<int<4>> v8 = ( var(( *v4)));
            while((( *( *v1).N)>0)) {
                {
                    printf("idx=%d", varlist.pack((( *v4))));
                };
                int.postDec(( *v1).N);
            };
        };
        {
            for(decl ref<int<4>> v9 = ( var(1)) .. 15 : 3) {
                printf("a=%d\n", varlist.pack((( *v9))));
            };
            (v4 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((15-1))/CAST<real<8>>(3))))*3)));
        };
        printf("a=%d\n", varlist.pack((( *v4))));
    }


// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, array<ref<array<ref<char>,1>>,1> v3){
        decl ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v1 =  var(struct{sec:= var(el), start:= var(vector.initUniform( var(0.0))), elapsed:= var(vector.initUniform( var(0.0))), key_buff_ptr_global:= var(null), passed_verification:= var(0), key_array:= var(vector.initUniform( var(0))), key_buff1:= var(vector.initUniform( var(0))), key_buff2:= var(vector.initUniform( var(0))), partial_verify_vals:= var(vector.initUniform( var(0))), test_index_array:= var(vector.initUniform( var(0))), test_rank_array:= var(vector.initUniform( var(0))), S_test_index_array:= var([ var(48427),  var(17148),  var(23627),  var(62548),  var(4431)]), S_test_rank_array:= var([ var(0),  var(18),  var(346),  var(64917),  var(65463)]), W_test_index_array:= var([ var(357773),  var(934767),  var(875723),  var(898999),  var(404505)]), W_test_rank_array:= var([ var(1249),  var(11698),  var(1039987),  var(1043896),  var(1048018)]), A_test_index_array:= var([ var(2112377),  var(662041),  var(5336171),  var(3642833),  var(4250760)]), A_test_rank_array:= var([ var(104),  var(17523),  var(123928),  var(8288932),  var(8388264)]), B_test_index_array:= var([ var(41869),  var(812306),  var(5102857),  var(18232239),  var(26860214)]), B_test_rank_array:= var([ var(33422937),  var(10244),  var(59149),  var(33135281),  var(99)]), C_test_index_array:= var([ var(44172927),  var(72999161),  var(74326391),  var(129606274),  var(21736814)]), C_test_rank_array:= var([ var(61147),  var(882988),  var(266290),  var(133997595),  var(133525895)]), KS:= var(0), R23:= var(0.0), R46:= var(0.0), T23:= var(0.0), T46:= var(0.0)});
        decl ref<int<4>> v4 =  var(0);
        decl ref<int<4>> v5 =  var(0);
        decl ref<int<4>> v6 =  var(0);
        decl ref<int<4>> v7 =  var(1);
        decl ref<real<8>> v8 =  var(0.0);
        decl ref<real<8>> v9 =  var(0.0);
        {
            for(decl ref<int<4>> v11 =  var(0) .. 5 : 1) {
                decl int<4> v10 = 'S';
                switch(v10) {
                    case 'S': {
                        v1.test_index_array[v11] := v1.S_test_index_array[v11];
                        v1.test_rank_array[v11] := v1.S_test_rank_array[v11];
                    }
                    case 'A': {
                        v1.test_index_array[v11] := v1.A_test_index_array[v11];
                        v1.test_rank_array[v11] := v1.A_test_rank_array[v11];
                    }
                    case 'W': {
                        v1.test_index_array[v11] := v1.W_test_index_array[v11];
                        v1.test_rank_array[v11] := v1.W_test_rank_array[v11];
                    }
                    case 'B': {
                        v1.test_index_array[v11] := v1.B_test_index_array[v11];
                        v1.test_rank_array[v11] := v1.B_test_rank_array[v11];
                    }
                    case 'C': {
                        v1.test_index_array[v11] := v1.C_test_index_array[v11];
                        v1.test_rank_array[v11] := v1.C_test_rank_array[v11];
                    }
                    default: { }
                };
            };
            v4 := 5;
        };
        { };
        printf("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version", varlist.pack(()));
        printf(" Size:  %d  (class %c)\n", varlist.pack((int.shl(1, 16), 'S')));
        printf(" Iterations:   %d\n", varlist.pack((10)));
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v13](int<4> v12){
            v13.elapsed[v12] := 0.0;
        }(0);
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v17](real<8> v15, real<8> v16){
            decl ref<real<8>> v22 =  var(v15);
            decl ref<real<8>> v23 =  var(v16);
            {
                decl ref<real<8>> v18 =  var(0.0);
                decl ref<int<4>> v19 =  var(0);
                decl ref<int<4>> v20 =  var(0);
                decl ref<int<4>> v21 =  var(0);
                v21 := int.shl(1, 11)/4;
                {
                    for(decl ref<int<4>> v41 =  var(0) .. int.shl(1, 16) : 1) {
                        v18 := [v17]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v26](array<ref<real<8>>,1> v24, array<ref<real<8>>,1> v25){
                            decl ref<real<8>> v27 =  var(0.0);
                            decl ref<real<8>> v28 =  var(0.0);
                            decl ref<real<8>> v29 =  var(0.0);
                            decl ref<real<8>> v30 =  var(0.0);
                            decl ref<real<8>> v31 =  var(0.0);
                            decl ref<real<8>> v32 =  var(0.0);
                            decl ref<real<8>> v33 =  var(0.0);
                            decl ref<real<8>> v34 =  var(0.0);
                            decl ref<real<8>> v35 =  var(0.0);
                            decl ref<int<4>> v36 =  var(0);
                            decl ref<int<4>> v37 =  var(0);
                            if(v26.KS==0) {
                                v26.R23 := 1.0;
                                v26.R46 := 1.0;
                                v26.T23 := 1.0;
                                v26.T46 := 1.0;
                                {
                                    for(decl ref<int<4>> v38 =  var(1) .. 23 : 1) {
                                        v26.R23 := 0.50*v26.R23;
                                        v26.T23 := 2.0*v26.T23;
                                    };
                                    v36 := 23;
                                };
                                {
                                    for(decl ref<int<4>> v39 =  var(1) .. 46 : 1) {
                                        v26.R46 := 0.50*v26.R46;
                                        v26.T46 := 2.0*v26.T46;
                                    };
                                    v36 := 46;
                                };
                                v26.KS := 1;
                            } else { };
                            v27 := v26.R23*v25[0];
                            v37 := v27;
                            v31 := v37;
                            v32 := v25[0]-v26.T23*v31;
                            v27 := v26.R23*v24[0];
                            v37 := v27;
                            v33 := v37;
                            v34 := v24[0]-v26.T23*v33;
                            v27 := v31*v34+v32*v33;
                            v37 := v26.R23*v27;
                            v28 := v37;
                            v35 := v27-v26.T23*v28;
                            v29 := v26.T23*v35+v32*v34;
                            v37 := v26.R46*v29;
                            v30 := v37;
                            v24[0] := v29-v26.T46*v30;
                            return v26.R46*v24[0];
                        }([v22], [v23]);
                        v18 := v18+[v17]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v26](array<ref<real<8>>,1> v24, array<ref<real<8>>,1> v25){
                            decl ref<real<8>> v27 =  var(0.0);
                            decl ref<real<8>> v28 =  var(0.0);
                            decl ref<real<8>> v29 =  var(0.0);
                            decl ref<real<8>> v30 =  var(0.0);
                            decl ref<real<8>> v31 =  var(0.0);
                            decl ref<real<8>> v32 =  var(0.0);
                            decl ref<real<8>> v33 =  var(0.0);
                            decl ref<real<8>> v34 =  var(0.0);
                            decl ref<real<8>> v35 =  var(0.0);
                            decl ref<int<4>> v36 =  var(0);
                            decl ref<int<4>> v37 =  var(0);
                            if(v26.KS==0) {
                                v26.R23 := 1.0;
                                v26.R46 := 1.0;
                                v26.T23 := 1.0;
                                v26.T46 := 1.0;
                                {
                                    for(decl ref<int<4>> v38 =  var(1) .. 23 : 1) {
                                        v26.R23 := 0.50*v26.R23;
                                        v26.T23 := 2.0*v26.T23;
                                    };
                                    v36 := 23;
                                };
                                {
                                    for(decl ref<int<4>> v39 =  var(1) .. 46 : 1) {
                                        v26.R46 := 0.50*v26.R46;
                                        v26.T46 := 2.0*v26.T46;
                                    };
                                    v36 := 46;
                                };
                                v26.KS := 1;
                            } else { };
                            v27 := v26.R23*v25[0];
                            v37 := v27;
                            v31 := v37;
                            v32 := v25[0]-v26.T23*v31;
                            v27 := v26.R23*v24[0];
                            v37 := v27;
                            v33 := v37;
                            v34 := v24[0]-v26.T23*v33;
                            v27 := v31*v34+v32*v33;
                            v37 := v26.R23*v27;
                            v28 := v37;
                            v35 := v27-v26.T23*v28;
                            v29 := v26.T23*v35+v32*v34;
                            v37 := v26.R46*v29;
                            v30 := v37;
                            v24[0] := v29-v26.T46*v30;
                            return v26.R46*v24[0];
                        }([v22], [v23]);
                        v18 := v18+[v17]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v26](array<ref<real<8>>,1> v24, array<ref<real<8>>,1> v25){
                            decl ref<real<8>> v27 =  var(0.0);
                            decl ref<real<8>> v28 =  var(0.0);
                            decl ref<real<8>> v29 =  var(0.0);
                            decl ref<real<8>> v30 =  var(0.0);
                            decl ref<real<8>> v31 =  var(0.0);
                            decl ref<real<8>> v32 =  var(0.0);
                            decl ref<real<8>> v33 =  var(0.0);
                            decl ref<real<8>> v34 =  var(0.0);
                            decl ref<real<8>> v35 =  var(0.0);
                            decl ref<int<4>> v36 =  var(0);
                            decl ref<int<4>> v37 =  var(0);
                            if(v26.KS==0) {
                                v26.R23 := 1.0;
                                v26.R46 := 1.0;
                                v26.T23 := 1.0;
                                v26.T46 := 1.0;
                                {
                                    for(decl ref<int<4>> v38 =  var(1) .. 23 : 1) {
                                        v26.R23 := 0.50*v26.R23;
                                        v26.T23 := 2.0*v26.T23;
                                    };
                                    v36 := 23;
                                };
                                {
                                    for(decl ref<int<4>> v39 =  var(1) .. 46 : 1) {
                                        v26.R46 := 0.50*v26.R46;
                                        v26.T46 := 2.0*v26.T46;
                                    };
                                    v36 := 46;
                                };
                                v26.KS := 1;
                            } else { };
                            v27 := v26.R23*v25[0];
                            v37 := v27;
                            v31 := v37;
                            v32 := v25[0]-v26.T23*v31;
                            v27 := v26.R23*v24[0];
                            v37 := v27;
                            v33 := v37;
                            v34 := v24[0]-v26.T23*v33;
                            v27 := v31*v34+v32*v33;
                            v37 := v26.R23*v27;
                            v28 := v37;
                            v35 := v27-v26.T23*v28;
                            v29 := v26.T23*v35+v32*v34;
                            v37 := v26.R46*v29;
                            v30 := v37;
                            v24[0] := v29-v26.T46*v30;
                            return v26.R46*v24[0];
                        }([v22], [v23]);
                        v18 := v18+[v17]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v26](array<ref<real<8>>,1> v24, array<ref<real<8>>,1> v25){
                            decl ref<real<8>> v27 =  var(0.0);
                            decl ref<real<8>> v28 =  var(0.0);
                            decl ref<real<8>> v29 =  var(0.0);
                            decl ref<real<8>> v30 =  var(0.0);
                            decl ref<real<8>> v31 =  var(0.0);
                            decl ref<real<8>> v32 =  var(0.0);
                            decl ref<real<8>> v33 =  var(0.0);
                            decl ref<real<8>> v34 =  var(0.0);
                            decl ref<real<8>> v35 =  var(0.0);
                            decl ref<int<4>> v36 =  var(0);
                            decl ref<int<4>> v37 =  var(0);
                            if(v26.KS==0) {
                                v26.R23 := 1.0;
                                v26.R46 := 1.0;
                                v26.T23 := 1.0;
                                v26.T46 := 1.0;
                                {
                                    for(decl ref<int<4>> v38 =  var(1) .. 23 : 1) {
                                        v26.R23 := 0.50*v26.R23;
                                        v26.T23 := 2.0*v26.T23;
                                    };
                                    v36 := 23;
                                };
                                {
                                    for(decl ref<int<4>> v39 =  var(1) .. 46 : 1) {
                                        v26.R46 := 0.50*v26.R46;
                                        v26.T46 := 2.0*v26.T46;
                                    };
                                    v36 := 46;
                                };
                                v26.KS := 1;
                            } else { };
                            v27 := v26.R23*v25[0];
                            v37 := v27;
                            v31 := v37;
                            v32 := v25[0]-v26.T23*v31;
                            v27 := v26.R23*v24[0];
                            v37 := v27;
                            v33 := v37;
                            v34 := v24[0]-v26.T23*v33;
                            v27 := v31*v34+v32*v33;
                            v37 := v26.R23*v27;
                            v28 := v37;
                            v35 := v27-v26.T23*v28;
                            v29 := v26.T23*v35+v32*v34;
                            v37 := v26.R46*v29;
                            v30 := v37;
                            v24[0] := v29-v26.T46*v30;
                            return v26.R46*v24[0];
                        }([v22], [v23]);
                        v17.key_array[v41] := v21*v18;
                    };
                    v19 := int.shl(1, 16);
                };
            };
        }(314159265.00, 1220703125.00);
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v44](int<4> v43){
            decl ref<int<4>> v45 =  var(0);
            decl ref<int<4>> v46 =  var(0);
            decl ref<int<4>> v47 =  var(0);
            decl ref<int<4>> v48 =  var(0);
            decl ref<int<4>> v49 =  var(0);
            decl ref<int<4>> v50 =  var(11-9);
            decl ref<int<4>> v51 =  var(0);
            decl ref<int<4>> v52 =  var(0);
            decl ref<int<4>> v53 =  var(0);
            decl vector<ref<int<4>>,2048> v54 = undefined;
            {
                v44.key_array[v43] := v43;
                v44.key_array[v43+10] := int.shl(1, 11)-v43;
                {
                    for(decl ref<int<4>> v55 =  var(0) .. 5 : 1) 
                        v44.partial_verify_vals[v55] := v44.key_array[v44.test_index_array[v55]]
                    ;
                    v45 := 5;
                };
                {
                    for(decl ref<int<4>> v56 =  var(0) .. int.shl(1, 11) : 1) 
                        v44.key_buff1[v56] := 0
                    ;
                    v45 := int.shl(1, 11);
                };
            };
            {
                for(decl ref<int<4>> v57 =  var(0) .. int.shl(1, 11) : 1) 
                    v54[v57] := 0
                ;
                v45 := int.shl(1, 11);
            };
            {
                for(decl ref<int<4>> v63 =  var(0) .. int.shl(1, 16) : 1) {
                    v44.key_buff2[v63] := v44.key_array[v63];
                    [v44, v63, v54]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v59, ref<int<4>> v60, vector<ref<int<4>>,2048> v61](){
                        decl int<4> v58 = v61[v59.key_buff2[v60]];
                        v61[v59.key_buff2[v60]] := v61[v59.key_buff2[v60]]+1;
                        return v58;
                    }();
                };
                v45 := int.shl(1, 16);
            };
            {
                for(decl ref<int<4>> v64 =  var(0) .. int.shl(1, 11)-1 : 1) 
                    v54[v64+1] := v54[v64+1]+v54[v64]
                ;
                v45 := int.shl(1, 11)-1;
            };
            {
                {
                    for(decl ref<int<4>> v65 =  var(0) .. int.shl(1, 11) : 1) 
                        v44.key_buff1[v65] := v44.key_buff1[v65]+v54[v65]
                    ;
                    v45 := int.shl(1, 11);
                };
            };
            {
                {
                    for(decl ref<int<4>> v97 =  var(0) .. 5 : 1) {
                        v47 := v44.partial_verify_vals[v97];
                        if(int.land(0<=v47, v47<=int.shl(1, 16)-1)) {
                            decl int<4> v66 = 'S';
                            switch(v66) {
                                case 'S': if(v97<=2) {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v68](){
                                        decl int<4> v67 = v68.passed_verification;
                                        v68.passed_verification := v68.passed_verification+1;
                                        return v67;
                                    }();
                                } else {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v71](){
                                        decl int<4> v70 = v71.passed_verification;
                                        v71.passed_verification := v71.passed_verification+1;
                                        return v70;
                                    }();
                                }
                                case 'W': if(v97<2) {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43-2)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v74](){
                                        decl int<4> v73 = v74.passed_verification;
                                        v74.passed_verification := v74.passed_verification+1;
                                        return v73;
                                    }();
                                } else {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v77](){
                                        decl int<4> v76 = v77.passed_verification;
                                        v77.passed_verification := v77.passed_verification+1;
                                        return v76;
                                    }();
                                }
                                case 'A': if(v97<=2) {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43-1)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v80](){
                                        decl int<4> v79 = v80.passed_verification;
                                        v80.passed_verification := v80.passed_verification+1;
                                        return v79;
                                    }();
                                } else {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43-1)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v83](){
                                        decl int<4> v82 = v83.passed_verification;
                                        v83.passed_verification := v83.passed_verification+1;
                                        return v82;
                                    }();
                                }
                                case 'B': if(int.lor(int.lor(v97==1, v97==2), v97==4)) {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v86](){
                                        decl int<4> v85 = v86.passed_verification;
                                        v86.passed_verification := v86.passed_verification+1;
                                        return v85;
                                    }();
                                } else {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v89](){
                                        decl int<4> v88 = v89.passed_verification;
                                        v89.passed_verification := v89.passed_verification+1;
                                        return v88;
                                    }();
                                }
                                case 'C': if(v97<=2) {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v92](){
                                        decl int<4> v91 = v92.passed_verification;
                                        v92.passed_verification := v92.passed_verification+1;
                                        return v91;
                                    }();
                                } else {
                                    if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43)) {
                                        printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v95](){
                                        decl int<4> v94 = v95.passed_verification;
                                        v95.passed_verification := v95.passed_verification+1;
                                        return v94;
                                    }();
                                }
                                default: { }
                            };
                        } else { };
                    };
                    v45 := 5;
                };
                if(v43==10) v44.key_buff_ptr_global := v44.key_buff1 else { };
            };
        }(1);
        v1.passed_verification := 0;
        if(int.ne('S', 'S')) printf("\n   iteration\n", varlist.pack(())) else { };
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v100](int<4> v99){
            v100.start[v99] := [v100]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v101](){
                decl ref<real<8>> v102 =  var(0.0);
                [v101]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v104](array<ref<real<8>>,1> v103){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v105 =  var(undefined);
                    gettimeofday([v105], 0);
                    if(v104.sec<0) v104.sec := v105.tv_sec else { };
                    v103[0] := v105.tv_sec-v104.sec+1.0e-6*v105.tv_usec;
                }([v102]);
                return v102;
            }();
        }(0);
        {
            for(decl ref<int<4>> v109 =  var(1) .. 10 : 1) {
                if(int.ne('S', 'S')) printf("        %d\n", varlist.pack((v109))) else { };
                [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v44](int<4> v43){
                    decl ref<int<4>> v45 =  var(0);
                    decl ref<int<4>> v46 =  var(0);
                    decl ref<int<4>> v47 =  var(0);
                    decl ref<int<4>> v48 =  var(0);
                    decl ref<int<4>> v49 =  var(0);
                    decl ref<int<4>> v50 =  var(11-9);
                    decl ref<int<4>> v51 =  var(0);
                    decl ref<int<4>> v52 =  var(0);
                    decl ref<int<4>> v53 =  var(0);
                    decl vector<ref<int<4>>,2048> v54 = undefined;
                    {
                        v44.key_array[v43] := v43;
                        v44.key_array[v43+10] := int.shl(1, 11)-v43;
                        {
                            for(decl ref<int<4>> v55 =  var(0) .. 5 : 1) 
                                v44.partial_verify_vals[v55] := v44.key_array[v44.test_index_array[v55]]
                            ;
                            v45 := 5;
                        };
                        {
                            for(decl ref<int<4>> v56 =  var(0) .. int.shl(1, 11) : 1) 
                                v44.key_buff1[v56] := 0
                            ;
                            v45 := int.shl(1, 11);
                        };
                    };
                    {
                        for(decl ref<int<4>> v57 =  var(0) .. int.shl(1, 11) : 1) 
                            v54[v57] := 0
                        ;
                        v45 := int.shl(1, 11);
                    };
                    {
                        for(decl ref<int<4>> v63 =  var(0) .. int.shl(1, 16) : 1) {
                            v44.key_buff2[v63] := v44.key_array[v63];
                            [v44, v63, v54]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v59, ref<int<4>> v60, vector<ref<int<4>>,2048> v61](){
                                decl int<4> v58 = v61[v59.key_buff2[v60]];
                                v61[v59.key_buff2[v60]] := v61[v59.key_buff2[v60]]+1;
                                return v58;
                            }();
                        };
                        v45 := int.shl(1, 16);
                    };
                    {
                        for(decl ref<int<4>> v64 =  var(0) .. int.shl(1, 11)-1 : 1) 
                            v54[v64+1] := v54[v64+1]+v54[v64]
                        ;
                        v45 := int.shl(1, 11)-1;
                    };
                    {
                        {
                            for(decl ref<int<4>> v65 =  var(0) .. int.shl(1, 11) : 1) 
                                v44.key_buff1[v65] := v44.key_buff1[v65]+v54[v65]
                            ;
                            v45 := int.shl(1, 11);
                        };
                    };
                    {
                        {
                            for(decl ref<int<4>> v97 =  var(0) .. 5 : 1) {
                                v47 := v44.partial_verify_vals[v97];
                                if(int.land(0<=v47, v47<=int.shl(1, 16)-1)) {
                                    decl int<4> v66 = 'S';
                                    switch(v66) {
                                        case 'S': if(v97<=2) {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v68](){
                                                decl int<4> v67 = v68.passed_verification;
                                                v68.passed_verification := v68.passed_verification+1;
                                                return v67;
                                            }();
                                        } else {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v71](){
                                                decl int<4> v70 = v71.passed_verification;
                                                v71.passed_verification := v71.passed_verification+1;
                                                return v70;
                                            }();
                                        }
                                        case 'W': if(v97<2) {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43-2)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v74](){
                                                decl int<4> v73 = v74.passed_verification;
                                                v74.passed_verification := v74.passed_verification+1;
                                                return v73;
                                            }();
                                        } else {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v77](){
                                                decl int<4> v76 = v77.passed_verification;
                                                v77.passed_verification := v77.passed_verification+1;
                                                return v76;
                                            }();
                                        }
                                        case 'A': if(v97<=2) {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43-1)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v80](){
                                                decl int<4> v79 = v80.passed_verification;
                                                v80.passed_verification := v80.passed_verification+1;
                                                return v79;
                                            }();
                                        } else {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43-1)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v83](){
                                                decl int<4> v82 = v83.passed_verification;
                                                v83.passed_verification := v83.passed_verification+1;
                                                return v82;
                                            }();
                                        }
                                        case 'B': if(int.lor(int.lor(v97==1, v97==2), v97==4)) {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v86](){
                                                decl int<4> v85 = v86.passed_verification;
                                                v86.passed_verification := v86.passed_verification+1;
                                                return v85;
                                            }();
                                        } else {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v89](){
                                                decl int<4> v88 = v89.passed_verification;
                                                v89.passed_verification := v89.passed_verification+1;
                                                return v88;
                                            }();
                                        }
                                        case 'C': if(v97<=2) {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]+v43)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v92](){
                                                decl int<4> v91 = v92.passed_verification;
                                                v92.passed_verification := v92.passed_verification+1;
                                                return v91;
                                            }();
                                        } else {
                                            if(int.ne(v44.key_buff1[v47-1], v44.test_rank_array[v97]-v43)) {
                                                printf("Failed partial verification: ", varlist.pack((v43, v97)));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v95](){
                                                decl int<4> v94 = v95.passed_verification;
                                                v95.passed_verification := v95.passed_verification+1;
                                                return v94;
                                            }();
                                        }
                                        default: { }
                                    };
                                } else { };
                            };
                            v45 := 5;
                        };
                        if(v43==10) v44.key_buff_ptr_global := v44.key_buff1 else { };
                    };
                }(v109);
            };
            v5 := 10;
        };
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v111](int<4> v110){
            decl ref<real<8>> v112 =  var(0.0);
            decl ref<real<8>> v113 =  var(0.0);
            v113 := [v111]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v101](){
                decl ref<real<8>> v102 =  var(0.0);
                [v101]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v104](array<ref<real<8>>,1> v103){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v105 =  var(undefined);
                    gettimeofday([v105], 0);
                    if(v104.sec<0) v104.sec := v105.tv_sec else { };
                    v103[0] := v105.tv_sec-v104.sec+1.0e-6*v105.tv_usec;
                }([v102]);
                return v102;
            }();
            v112 := v113-v111.start[v110];
            v111.elapsed[v110] := v111.elapsed[v110]+v112;
        }(0);
        v8 := [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v116](int<4> v115){
            return v116.elapsed[v115];
        }(0);
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v118](){
            decl ref<int<4>> v119 =  var(0);
            decl ref<int<4>> v120 =  var(0);
            decl ref<int<4>> v121 =  var(0);
            decl ref<int<4>> v122 =  var(0);
            decl ref<int<4>> v123 =  var(0);
            {
                for(decl ref<int<4>> v127 =  var(0) .. int.shl(1, 16) : 1) 
                    v118.key_array[[v118, v127]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v124, ref<int<4>> v125](){
                        v124.key_buff_ptr_global[v124.key_buff2[v125]] := v124.key_buff_ptr_global[v124.key_buff2[v125]]-1;
                        v124.key_buff_ptr_global[v124.key_buff2[v125]];
                    }()] := v118.key_buff2[v127]
                ;
                v119 := int.shl(1, 16);
            };
            v120 := 0;
            {
                for(decl ref<int<4>> v131 =  var(1) .. int.shl(1, 16) : 1) 
                    if(v118.key_array[v131-1]>v118.key_array[v131]) [v120]fun[ref<int<4>> v129](){
                        decl int<4> v128 = v129;
                        v129 := v129+1;
                        return v128;
                    }() else { }
                ;
                v119 := int.shl(1, 16);
            };
            if(int.ne(v120, 0)) {
                printf("Full_verify: number of keys out of sort: %d\n", varlist.pack((v120)));
            } else [v118]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v133](){
                decl int<4> v132 = v133.passed_verification;
                v133.passed_verification := v133.passed_verification+1;
                return v132;
            }();
        }();
        if(int.ne(v1.passed_verification, 5*10+1)) v1.passed_verification := 0 else { };
        fun(array<ref<char>,1> v136, char v137, int<4> v138, int<4> v139, int<4> v140, int<4> v141, int<4> v142, real<8> v143, real<8> v144, array<ref<char>,1> v145, int<4> v146, array<ref<char>,1> v147, array<ref<char>,1> v148, array<ref<char>,1> v149, array<ref<char>,1> v150, array<ref<char>,1> v151, array<ref<char>,1> v152, array<ref<char>,1> v153, array<ref<char>,1> v154, array<ref<char>,1> v155){
            decl ref<array<ref<char>,1>> v156 =  var("1000");
            printf("\n\n %s Benchmark Completed\n", varlist.pack((v136)));
            printf(" Class           =                        %c\n", varlist.pack((v137)));
            if(int.land(v139==0, v140==0)) printf(" Size            =             %12d\n", varlist.pack((v138))) else printf(" Size            =              %3dx%3dx%3d\n", varlist.pack((v138, v139, v140)));
            printf(" Iterations      =             %12d\n", varlist.pack((v141)));
            printf(" Threads         =             %12d\n", varlist.pack((v142)));
            printf(" Time in seconds =             %12.2f\n", varlist.pack((v143)));
            printf(" Mop/s total     =             %12.2f\n", varlist.pack((v144)));
            printf(" Operation type  = %24s\n", varlist.pack((v145)));
            if(v146) printf(" Verification    =               SUCCESSFUL\n", varlist.pack(())) else printf(" Verification    =             UNSUCCESSFUL\n", varlist.pack(()));
            printf(" Version         =             %12s\n", varlist.pack((v147)));
            printf(" Compile date    =             %12s\n", varlist.pack((v148)));
            printf("\n Compile options:\n", varlist.pack(()));
            printf("    CC           = %s\n", varlist.pack((v149)));
            printf("    CLINK        = %s\n", varlist.pack((v150)));
            printf("    C_LIB        = %s\n", varlist.pack((v151)));
            printf("    C_INC        = %s\n", varlist.pack((v152)));
            printf("    CFLAGS       = %s\n", varlist.pack((v153)));
            printf("    CLINKFLAGS   = %s\n", varlist.pack((v154)));
            printf("    RAND         = %s\n", varlist.pack((v155)));
        }("IS", 'S', int.shl(1, 16), 0, 0, 10, v7, v8, 10*int.shl(1, 16)/v8/1000000., "keys ranked", v1.passed_verification, "2.3", "03 Nov 2010", "cc", "cc", "-lm", "-I../common", "-O3 ", "-lm", "randlc");
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, array<ref<array<ref<char>,1>>,1> v3){
        decl ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v1 = ( var(struct{sec:=( var(el)), start:=( var(vector.initUniform(( var(0.0))))), elapsed:=( var(vector.initUniform(( var(0.0))))), key_buff_ptr_global:=( var(null)), passed_verification:=( var(0)), key_array:=( var(vector.initUniform(( var(0))))), key_buff1:=( var(vector.initUniform(( var(0))))), key_buff2:=( var(vector.initUniform(( var(0))))), partial_verify_vals:=( var(vector.initUniform(( var(0))))), test_index_array:=( var(vector.initUniform(( var(0))))), test_rank_array:=( var(vector.initUniform(( var(0))))), S_test_index_array:=( var([( var(48427)), ( var(17148)), ( var(23627)), ( var(62548)), ( var(4431))])), S_test_rank_array:=( var([( var(0)), ( var(18)), ( var(346)), ( var(64917)), ( var(65463))])), W_test_index_array:=( var([( var(357773)), ( var(934767)), ( var(875723)), ( var(898999)), ( var(404505))])), W_test_rank_array:=( var([( var(1249)), ( var(11698)), ( var(1039987)), ( var(1043896)), ( var(1048018))])), A_test_index_array:=( var([( var(2112377)), ( var(662041)), ( var(5336171)), ( var(3642833)), ( var(4250760))])), A_test_rank_array:=( var([( var(104)), ( var(17523)), ( var(123928)), ( var(8288932)), ( var(8388264))])), B_test_index_array:=( var([( var(41869)), ( var(812306)), ( var(5102857)), ( var(18232239)), ( var(26860214))])), B_test_rank_array:=( var([( var(33422937)), ( var(10244)), ( var(59149)), ( var(33135281)), ( var(99))])), C_test_index_array:=( var([( var(44172927)), ( var(72999161)), ( var(74326391)), ( var(129606274)), ( var(21736814))])), C_test_rank_array:=( var([( var(61147)), ( var(882988)), ( var(266290)), ( var(133997595)), ( var(133525895))])), KS:=( var(0)), R23:=( var(0.0)), R46:=( var(0.0)), T23:=( var(0.0)), T46:=( var(0.0))}));
        decl ref<int<4>> v4 = ( var(0));
        decl ref<int<4>> v5 = ( var(0));
        decl ref<int<4>> v6 = ( var(0));
        decl ref<int<4>> v7 = ( var(1));
        decl ref<real<8>> v8 = ( var(0.0));
        decl ref<real<8>> v9 = ( var(0.0));
        {
            for(decl ref<int<4>> v11 = ( var(0)) .. 5 : 1) {
                decl int<4> v10 = CAST<int<4>>('S');
                switch(v10) {
                    case 'S': {
                        ((( *( *v1).test_index_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).S_test_index_array)[CAST<uint<4>>(( *v11))])));
                        ((( *( *v1).test_rank_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).S_test_rank_array)[CAST<uint<4>>(( *v11))])));
                    }
                    case 'A': {
                        ((( *( *v1).test_index_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).A_test_index_array)[CAST<uint<4>>(( *v11))])));
                        ((( *( *v1).test_rank_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).A_test_rank_array)[CAST<uint<4>>(( *v11))])));
                    }
                    case 'W': {
                        ((( *( *v1).test_index_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).W_test_index_array)[CAST<uint<4>>(( *v11))])));
                        ((( *( *v1).test_rank_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).W_test_rank_array)[CAST<uint<4>>(( *v11))])));
                    }
                    case 'B': {
                        ((( *( *v1).test_index_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).B_test_index_array)[CAST<uint<4>>(( *v11))])));
                        ((( *( *v1).test_rank_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).B_test_rank_array)[CAST<uint<4>>(( *v11))])));
                    }
                    case 'C': {
                        ((( *( *v1).test_index_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).C_test_index_array)[CAST<uint<4>>(( *v11))])));
                        ((( *( *v1).test_rank_array)[CAST<uint<4>>(( *v11))]) := ( *(( *( *v1).C_test_rank_array)[CAST<uint<4>>(( *v11))])));
                    }
                    default: { }
                };
            };
            (v4 := 5);
        };
        { };
        printf("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version", varlist.pack(()));
        printf(" Size:  %d  (class %c)\n", varlist.pack((int.shl(1, 16), 'S')));
        printf(" Iterations:   %d\n", varlist.pack((10)));
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v13](int<4> v12){
            ((( *( *v13).elapsed)[CAST<uint<4>>(v12)]) := 0.0);
        }(0);
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v17](real<8> v15, real<8> v16){
            decl ref<real<8>> v22 = ( var(v15));
            decl ref<real<8>> v23 = ( var(v16));
            {
                decl ref<real<8>> v18 = ( var(0.0));
                decl ref<int<4>> v19 = ( var(0));
                decl ref<int<4>> v20 = ( var(0));
                decl ref<int<4>> v21 = ( var(0));
                (v21 := (int.shl(1, 11)/4));
                {
                    for(decl ref<int<4>> v41 = ( var(0)) .. int.shl(1, 16) : 1) {
                        (v18 := [v17]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v26](array<ref<real<8>>,1> v24, array<ref<real<8>>,1> v25){
                            decl ref<real<8>> v27 = ( var(0.0));
                            decl ref<real<8>> v28 = ( var(0.0));
                            decl ref<real<8>> v29 = ( var(0.0));
                            decl ref<real<8>> v30 = ( var(0.0));
                            decl ref<real<8>> v31 = ( var(0.0));
                            decl ref<real<8>> v32 = ( var(0.0));
                            decl ref<real<8>> v33 = ( var(0.0));
                            decl ref<real<8>> v34 = ( var(0.0));
                            decl ref<real<8>> v35 = ( var(0.0));
                            decl ref<int<4>> v36 = ( var(0));
                            decl ref<int<4>> v37 = ( var(0));
                            if((( *( *v26).KS)==0)) {
                                (( *v26).R23 := 1.0);
                                (( *v26).R46 := 1.0);
                                (( *v26).T23 := 1.0);
                                (( *v26).T46 := 1.0);
                                {
                                    for(decl ref<int<4>> v38 = ( var(1)) .. 23 : 1) {
                                        (( *v26).R23 := (0.50*( *( *v26).R23)));
                                        (( *v26).T23 := (2.0*( *( *v26).T23)));
                                    };
                                    (v36 := 23);
                                };
                                {
                                    for(decl ref<int<4>> v39 = ( var(1)) .. 46 : 1) {
                                        (( *v26).R46 := (0.50*( *( *v26).R46)));
                                        (( *v26).T46 := (2.0*( *( *v26).T46)));
                                    };
                                    (v36 := 46);
                                };
                                (( *v26).KS := 1);
                            } else { };
                            (v27 := (( *( *v26).R23)*( *(v25[0]))));
                            (v37 := CAST<int<4>>(( *v27)));
                            (v31 := CAST<real<8>>(( *v37)));
                            (v32 := (( *(v25[0]))-(( *( *v26).T23)*( *v31))));
                            (v27 := (( *( *v26).R23)*( *(v24[0]))));
                            (v37 := CAST<int<4>>(( *v27)));
                            (v33 := CAST<real<8>>(( *v37)));
                            (v34 := (( *(v24[0]))-(( *( *v26).T23)*( *v33))));
                            (v27 := ((( *v31)*( *v34))+(( *v32)*( *v33))));
                            (v37 := CAST<int<4>>((( *( *v26).R23)*( *v27))));
                            (v28 := CAST<real<8>>(( *v37)));
                            (v35 := (( *v27)-(( *( *v26).T23)*( *v28))));
                            (v29 := ((( *( *v26).T23)*( *v35))+(( *v32)*( *v34))));
                            (v37 := CAST<int<4>>((( *( *v26).R46)*( *v29))));
                            (v30 := CAST<real<8>>(( *v37)));
                            ((v24[0]) := (( *v29)-(( *( *v26).T46)*( *v30))));
                            return (( *( *v26).R46)*( *(v24[0])));
                        }([v22], [v23]));
                        (v18 := (( *v18)+[v17]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v26](array<ref<real<8>>,1> v24, array<ref<real<8>>,1> v25){
                            decl ref<real<8>> v27 = ( var(0.0));
                            decl ref<real<8>> v28 = ( var(0.0));
                            decl ref<real<8>> v29 = ( var(0.0));
                            decl ref<real<8>> v30 = ( var(0.0));
                            decl ref<real<8>> v31 = ( var(0.0));
                            decl ref<real<8>> v32 = ( var(0.0));
                            decl ref<real<8>> v33 = ( var(0.0));
                            decl ref<real<8>> v34 = ( var(0.0));
                            decl ref<real<8>> v35 = ( var(0.0));
                            decl ref<int<4>> v36 = ( var(0));
                            decl ref<int<4>> v37 = ( var(0));
                            if((( *( *v26).KS)==0)) {
                                (( *v26).R23 := 1.0);
                                (( *v26).R46 := 1.0);
                                (( *v26).T23 := 1.0);
                                (( *v26).T46 := 1.0);
                                {
                                    for(decl ref<int<4>> v38 = ( var(1)) .. 23 : 1) {
                                        (( *v26).R23 := (0.50*( *( *v26).R23)));
                                        (( *v26).T23 := (2.0*( *( *v26).T23)));
                                    };
                                    (v36 := 23);
                                };
                                {
                                    for(decl ref<int<4>> v39 = ( var(1)) .. 46 : 1) {
                                        (( *v26).R46 := (0.50*( *( *v26).R46)));
                                        (( *v26).T46 := (2.0*( *( *v26).T46)));
                                    };
                                    (v36 := 46);
                                };
                                (( *v26).KS := 1);
                            } else { };
                            (v27 := (( *( *v26).R23)*( *(v25[0]))));
                            (v37 := CAST<int<4>>(( *v27)));
                            (v31 := CAST<real<8>>(( *v37)));
                            (v32 := (( *(v25[0]))-(( *( *v26).T23)*( *v31))));
                            (v27 := (( *( *v26).R23)*( *(v24[0]))));
                            (v37 := CAST<int<4>>(( *v27)));
                            (v33 := CAST<real<8>>(( *v37)));
                            (v34 := (( *(v24[0]))-(( *( *v26).T23)*( *v33))));
                            (v27 := ((( *v31)*( *v34))+(( *v32)*( *v33))));
                            (v37 := CAST<int<4>>((( *( *v26).R23)*( *v27))));
                            (v28 := CAST<real<8>>(( *v37)));
                            (v35 := (( *v27)-(( *( *v26).T23)*( *v28))));
                            (v29 := ((( *( *v26).T23)*( *v35))+(( *v32)*( *v34))));
                            (v37 := CAST<int<4>>((( *( *v26).R46)*( *v29))));
                            (v30 := CAST<real<8>>(( *v37)));
                            ((v24[0]) := (( *v29)-(( *( *v26).T46)*( *v30))));
                            return (( *( *v26).R46)*( *(v24[0])));
                        }([v22], [v23])));
                        (v18 := (( *v18)+[v17]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v26](array<ref<real<8>>,1> v24, array<ref<real<8>>,1> v25){
                            decl ref<real<8>> v27 = ( var(0.0));
                            decl ref<real<8>> v28 = ( var(0.0));
                            decl ref<real<8>> v29 = ( var(0.0));
                            decl ref<real<8>> v30 = ( var(0.0));
                            decl ref<real<8>> v31 = ( var(0.0));
                            decl ref<real<8>> v32 = ( var(0.0));
                            decl ref<real<8>> v33 = ( var(0.0));
                            decl ref<real<8>> v34 = ( var(0.0));
                            decl ref<real<8>> v35 = ( var(0.0));
                            decl ref<int<4>> v36 = ( var(0));
                            decl ref<int<4>> v37 = ( var(0));
                            if((( *( *v26).KS)==0)) {
                                (( *v26).R23 := 1.0);
                                (( *v26).R46 := 1.0);
                                (( *v26).T23 := 1.0);
                                (( *v26).T46 := 1.0);
                                {
                                    for(decl ref<int<4>> v38 = ( var(1)) .. 23 : 1) {
                                        (( *v26).R23 := (0.50*( *( *v26).R23)));
                                        (( *v26).T23 := (2.0*( *( *v26).T23)));
                                    };
                                    (v36 := 23);
                                };
                                {
                                    for(decl ref<int<4>> v39 = ( var(1)) .. 46 : 1) {
                                        (( *v26).R46 := (0.50*( *( *v26).R46)));
                                        (( *v26).T46 := (2.0*( *( *v26).T46)));
                                    };
                                    (v36 := 46);
                                };
                                (( *v26).KS := 1);
                            } else { };
                            (v27 := (( *( *v26).R23)*( *(v25[0]))));
                            (v37 := CAST<int<4>>(( *v27)));
                            (v31 := CAST<real<8>>(( *v37)));
                            (v32 := (( *(v25[0]))-(( *( *v26).T23)*( *v31))));
                            (v27 := (( *( *v26).R23)*( *(v24[0]))));
                            (v37 := CAST<int<4>>(( *v27)));
                            (v33 := CAST<real<8>>(( *v37)));
                            (v34 := (( *(v24[0]))-(( *( *v26).T23)*( *v33))));
                            (v27 := ((( *v31)*( *v34))+(( *v32)*( *v33))));
                            (v37 := CAST<int<4>>((( *( *v26).R23)*( *v27))));
                            (v28 := CAST<real<8>>(( *v37)));
                            (v35 := (( *v27)-(( *( *v26).T23)*( *v28))));
                            (v29 := ((( *( *v26).T23)*( *v35))+(( *v32)*( *v34))));
                            (v37 := CAST<int<4>>((( *( *v26).R46)*( *v29))));
                            (v30 := CAST<real<8>>(( *v37)));
                            ((v24[0]) := (( *v29)-(( *( *v26).T46)*( *v30))));
                            return (( *( *v26).R46)*( *(v24[0])));
                        }([v22], [v23])));
                        (v18 := (( *v18)+[v17]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v26](array<ref<real<8>>,1> v24, array<ref<real<8>>,1> v25){
                            decl ref<real<8>> v27 = ( var(0.0));
                            decl ref<real<8>> v28 = ( var(0.0));
                            decl ref<real<8>> v29 = ( var(0.0));
                            decl ref<real<8>> v30 = ( var(0.0));
                            decl ref<real<8>> v31 = ( var(0.0));
                            decl ref<real<8>> v32 = ( var(0.0));
                            decl ref<real<8>> v33 = ( var(0.0));
                            decl ref<real<8>> v34 = ( var(0.0));
                            decl ref<real<8>> v35 = ( var(0.0));
                            decl ref<int<4>> v36 = ( var(0));
                            decl ref<int<4>> v37 = ( var(0));
                            if((( *( *v26).KS)==0)) {
                                (( *v26).R23 := 1.0);
                                (( *v26).R46 := 1.0);
                                (( *v26).T23 := 1.0);
                                (( *v26).T46 := 1.0);
                                {
                                    for(decl ref<int<4>> v38 = ( var(1)) .. 23 : 1) {
                                        (( *v26).R23 := (0.50*( *( *v26).R23)));
                                        (( *v26).T23 := (2.0*( *( *v26).T23)));
                                    };
                                    (v36 := 23);
                                };
                                {
                                    for(decl ref<int<4>> v39 = ( var(1)) .. 46 : 1) {
                                        (( *v26).R46 := (0.50*( *( *v26).R46)));
                                        (( *v26).T46 := (2.0*( *( *v26).T46)));
                                    };
                                    (v36 := 46);
                                };
                                (( *v26).KS := 1);
                            } else { };
                            (v27 := (( *( *v26).R23)*( *(v25[0]))));
                            (v37 := CAST<int<4>>(( *v27)));
                            (v31 := CAST<real<8>>(( *v37)));
                            (v32 := (( *(v25[0]))-(( *( *v26).T23)*( *v31))));
                            (v27 := (( *( *v26).R23)*( *(v24[0]))));
                            (v37 := CAST<int<4>>(( *v27)));
                            (v33 := CAST<real<8>>(( *v37)));
                            (v34 := (( *(v24[0]))-(( *( *v26).T23)*( *v33))));
                            (v27 := ((( *v31)*( *v34))+(( *v32)*( *v33))));
                            (v37 := CAST<int<4>>((( *( *v26).R23)*( *v27))));
                            (v28 := CAST<real<8>>(( *v37)));
                            (v35 := (( *v27)-(( *( *v26).T23)*( *v28))));
                            (v29 := ((( *( *v26).T23)*( *v35))+(( *v32)*( *v34))));
                            (v37 := CAST<int<4>>((( *( *v26).R46)*( *v29))));
                            (v30 := CAST<real<8>>(( *v37)));
                            ((v24[0]) := (( *v29)-(( *( *v26).T46)*( *v30))));
                            return (( *( *v26).R46)*( *(v24[0])));
                        }([v22], [v23])));
                        ((( *( *v17).key_array)[CAST<uint<4>>(( *v41))]) := CAST<int<4>>((CAST<real<8>>(( *v21))*( *v18))));
                    };
                    (v19 := int.shl(1, 16));
                };
            };
        }(314159265.00, 1220703125.00);
        <m id=1>[v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v44](int<4> v43){
            decl ref<int<4>> v45 = ( var(0));
            decl ref<int<4>> v46 = ( var(0));
            decl ref<int<4>> v47 = ( var(0));
            decl ref<int<4>> v48 = ( var(0));
            decl ref<int<4>> v49 = ( var(0));
            decl ref<int<4>> v50 = ( var((11-9)));
            decl ref<int<4>> v51 = ( var(0));
            decl ref<int<4>> v52 = ( var(0));
            decl ref<int<4>> v53 = ( var(0));
            decl vector<ref<int<4>>,2048> v54 = undefined;
            <m id=1>{
                ((( *( *v44).key_array)[CAST<uint<4>>(v43)]) := v43);
                ((( *( *v44).key_array)[CAST<uint<4>>((v43+10))]) := (int.shl(1, 11)-v43));
                {
                    for(decl ref<int<4>> v55 = ( var(0)) .. 5 : 1) 
                        ((( *( *v44).partial_verify_vals)[CAST<uint<4>>(( *v55))]) := ( *(( *( *v44).key_array)[CAST<uint<4>>(( *(( *( *v44).test_index_array)[CAST<uint<4>>(( *v55))])))])))
                    ;
                    (v45 := 5);
                };
                {
                    for(decl ref<int<4>> v56 = ( var(0)) .. int.shl(1, 11) : 1) 
                        ((( *( *v44).key_buff1)[CAST<uint<4>>(( *v56))]) := 0)
                    ;
                    (v45 := int.shl(1, 11));
                };
            }</m>;
            {
                <m id=2>for(decl ref<int<4>> v57 = ( var(0)) .. int.shl(1, 11) : 1) 
                    ((v54[CAST<uint<4>>(( *v57))]) := 0)
                </m>;
                (v45 := int.shl(1, 11));
            };
            {
                <m id=3>for(decl ref<int<4>> v63 = ( var(0)) .. int.shl(1, 16) : 1) {
                    ((( *( *v44).key_buff2)[CAST<uint<4>>(( *v63))]) := ( *(( *( *v44).key_array)[CAST<uint<4>>(( *v63))])));
                    [v44, v63, v54]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v59, ref<int<4>> v60, vector<ref<int<4>>,2048> v61](){
                        decl int<4> v58 = ( *(v61[CAST<uint<4>>(( *(( *( *v59).key_buff2)[CAST<uint<4>>(( *v60))])))]));
                        ((v61[CAST<uint<4>>(( *(( *( *v59).key_buff2)[CAST<uint<4>>(( *v60))])))]) := (( *(v61[CAST<uint<4>>(( *(( *( *v59).key_buff2)[CAST<uint<4>>(( *v60))])))]))+CAST<int<4>>(1)));
                        return v58;
                    }();
                }</m>;
                (v45 := int.shl(1, 16));
            };
            {
                for(decl ref<int<4>> v64 = ( var(0)) .. (int.shl(1, 11)-1) : 1) 
                    ((v54[CAST<uint<4>>((( *v64)+1))]) := (( *(v54[CAST<uint<4>>((( *v64)+1))]))+( *(v54[CAST<uint<4>>(( *v64))]))))
                ;
                (v45 := (int.shl(1, 11)-1));
            };
            <m id=4>{
                {
                    for(decl ref<int<4>> v65 = ( var(0)) .. int.shl(1, 11) : 1) 
                        ((( *( *v44).key_buff1)[CAST<uint<4>>(( *v65))]) := (( *(( *( *v44).key_buff1)[CAST<uint<4>>(( *v65))]))+( *(v54[CAST<uint<4>>(( *v65))]))))
                    ;
                    (v45 := int.shl(1, 11));
                };
            }</m>;
            <m id=5>{
                {
                    for(decl ref<int<4>> v97 = ( var(0)) .. 5 : 1) {
                        (v47 := ( *(( *( *v44).partial_verify_vals)[CAST<uint<4>>(( *v97))])));
                        if(int.land((0<=( *v47)), (( *v47)<=(int.shl(1, 16)-1)))) {
                            decl int<4> v66 = CAST<int<4>>('S');
                            switch(v66) {
                                case 'S': if((( *v97)<=2)) {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+v43))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v68](){
                                        decl int<4> v67 = ( *( *v68).passed_verification);
                                        (( *v68).passed_verification := (( *( *v68).passed_verification)+CAST<int<4>>(1)));
                                        return v67;
                                    }();
                                } else {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-v43))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v71](){
                                        decl int<4> v70 = ( *( *v71).passed_verification);
                                        (( *v71).passed_verification := (( *( *v71).passed_verification)+CAST<int<4>>(1)));
                                        return v70;
                                    }();
                                }
                                case 'W': if((( *v97)<2)) {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+(v43-2)))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v74](){
                                        decl int<4> v73 = ( *( *v74).passed_verification);
                                        (( *v74).passed_verification := (( *( *v74).passed_verification)+CAST<int<4>>(1)));
                                        return v73;
                                    }();
                                } else {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-v43))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v77](){
                                        decl int<4> v76 = ( *( *v77).passed_verification);
                                        (( *v77).passed_verification := (( *( *v77).passed_verification)+CAST<int<4>>(1)));
                                        return v76;
                                    }();
                                }
                                case 'A': if((( *v97)<=2)) {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+(v43-1)))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v80](){
                                        decl int<4> v79 = ( *( *v80).passed_verification);
                                        (( *v80).passed_verification := (( *( *v80).passed_verification)+CAST<int<4>>(1)));
                                        return v79;
                                    }();
                                } else {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-(v43-1)))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v83](){
                                        decl int<4> v82 = ( *( *v83).passed_verification);
                                        (( *v83).passed_verification := (( *( *v83).passed_verification)+CAST<int<4>>(1)));
                                        return v82;
                                    }();
                                }
                                case 'B': if(int.lor(int.lor((( *v97)==1), (( *v97)==2)), (( *v97)==4))) {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+v43))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v86](){
                                        decl int<4> v85 = ( *( *v86).passed_verification);
                                        (( *v86).passed_verification := (( *( *v86).passed_verification)+CAST<int<4>>(1)));
                                        return v85;
                                    }();
                                } else {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-v43))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v89](){
                                        decl int<4> v88 = ( *( *v89).passed_verification);
                                        (( *v89).passed_verification := (( *( *v89).passed_verification)+CAST<int<4>>(1)));
                                        return v88;
                                    }();
                                }
                                case 'C': if((( *v97)<=2)) {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+v43))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v92](){
                                        decl int<4> v91 = ( *( *v92).passed_verification);
                                        (( *v92).passed_verification := (( *( *v92).passed_verification)+CAST<int<4>>(1)));
                                        return v91;
                                    }();
                                } else {
                                    if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-v43))) {
                                        printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                    } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v95](){
                                        decl int<4> v94 = ( *( *v95).passed_verification);
                                        (( *v95).passed_verification := (( *( *v95).passed_verification)+CAST<int<4>>(1)));
                                        return v94;
                                    }();
                                }
                                default: { }
                            };
                        } else { };
                    };
                    (v45 := 5);
                };
                if((v43==10)) (( *v44).key_buff_ptr_global := ( *( *v44).key_buff1)) else { };
            }</m>;
        }(1)</m>;
        (( *v1).passed_verification := 0);
        if(int.ne('S', 'S')) printf("\n   iteration\n", varlist.pack(())) else { };
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v100](int<4> v99){
            ((( *( *v100).start)[CAST<uint<4>>(v99)]) := [v100]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v101](){
                decl ref<real<8>> v102 = ( var(0.0));
                [v101]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v104](array<ref<real<8>>,1> v103){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v105 = ( var(undefined));
                    gettimeofday([v105], CAST<array<ref<struct<tz_minuteswest:ref<int<4>>,tz_dsttime:ref<int<4>>>>,1>>(( *CAST<ref<'a>>(0))));
                    if((( *( *v104).sec)<0)) (( *v104).sec := CAST<int<4>>(( *( *v105).tv_sec))) else { };
                    ((v103[0]) := (CAST<real<8>>((( *( *v105).tv_sec)-CAST<int<8>>(( *( *v104).sec))))+(1.0e-6*CAST<real<8>>(( *( *v105).tv_usec)))));
                }([v102]);
                return v102;
            }());
        }(0);
        {
            <m id=7>for(decl ref<int<4>> v109 = ( var(1)) .. 10 : 1) {
                <m id=6>if(int.ne('S', 'S')) printf("        %d\n", varlist.pack((( *v109)))) else { }</m>;
                [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v44](int<4> v43){
                    decl ref<int<4>> v45 = ( var(0));
                    decl ref<int<4>> v46 = ( var(0));
                    decl ref<int<4>> v47 = ( var(0));
                    decl ref<int<4>> v48 = ( var(0));
                    decl ref<int<4>> v49 = ( var(0));
                    decl ref<int<4>> v50 = ( var((11-9)));
                    decl ref<int<4>> v51 = ( var(0));
                    decl ref<int<4>> v52 = ( var(0));
                    decl ref<int<4>> v53 = ( var(0));
                    decl vector<ref<int<4>>,2048> v54 = undefined;
                    <m id=1>{
                        ((( *( *v44).key_array)[CAST<uint<4>>(v43)]) := v43);
                        ((( *( *v44).key_array)[CAST<uint<4>>((v43+10))]) := (int.shl(1, 11)-v43));
                        {
                            for(decl ref<int<4>> v55 = ( var(0)) .. 5 : 1) 
                                ((( *( *v44).partial_verify_vals)[CAST<uint<4>>(( *v55))]) := ( *(( *( *v44).key_array)[CAST<uint<4>>(( *(( *( *v44).test_index_array)[CAST<uint<4>>(( *v55))])))])))
                            ;
                            (v45 := 5);
                        };
                        {
                            for(decl ref<int<4>> v56 = ( var(0)) .. int.shl(1, 11) : 1) 
                                ((( *( *v44).key_buff1)[CAST<uint<4>>(( *v56))]) := 0)
                            ;
                            (v45 := int.shl(1, 11));
                        };
                    }</m>;
                    {
                        <m id=2>for(decl ref<int<4>> v57 = ( var(0)) .. int.shl(1, 11) : 1) 
                            ((v54[CAST<uint<4>>(( *v57))]) := 0)
                        </m>;
                        (v45 := int.shl(1, 11));
                    };
                    {
                        <m id=3>for(decl ref<int<4>> v63 = ( var(0)) .. int.shl(1, 16) : 1) {
                            ((( *( *v44).key_buff2)[CAST<uint<4>>(( *v63))]) := ( *(( *( *v44).key_array)[CAST<uint<4>>(( *v63))])));
                            [v44, v63, v54]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v59, ref<int<4>> v60, vector<ref<int<4>>,2048> v61](){
                                decl int<4> v58 = ( *(v61[CAST<uint<4>>(( *(( *( *v59).key_buff2)[CAST<uint<4>>(( *v60))])))]));
                                ((v61[CAST<uint<4>>(( *(( *( *v59).key_buff2)[CAST<uint<4>>(( *v60))])))]) := (( *(v61[CAST<uint<4>>(( *(( *( *v59).key_buff2)[CAST<uint<4>>(( *v60))])))]))+CAST<int<4>>(1)));
                                return v58;
                            }();
                        }</m>;
                        (v45 := int.shl(1, 16));
                    };
                    {
                        for(decl ref<int<4>> v64 = ( var(0)) .. (int.shl(1, 11)-1) : 1) 
                            ((v54[CAST<uint<4>>((( *v64)+1))]) := (( *(v54[CAST<uint<4>>((( *v64)+1))]))+( *(v54[CAST<uint<4>>(( *v64))]))))
                        ;
                        (v45 := (int.shl(1, 11)-1));
                    };
                    <m id=4>{
                        {
                            for(decl ref<int<4>> v65 = ( var(0)) .. int.shl(1, 11) : 1) 
                                ((( *( *v44).key_buff1)[CAST<uint<4>>(( *v65))]) := (( *(( *( *v44).key_buff1)[CAST<uint<4>>(( *v65))]))+( *(v54[CAST<uint<4>>(( *v65))]))))
                            ;
                            (v45 := int.shl(1, 11));
                        };
                    }</m>;
                    <m id=5>{
                        {
                            for(decl ref<int<4>> v97 = ( var(0)) .. 5 : 1) {
                                (v47 := ( *(( *( *v44).partial_verify_vals)[CAST<uint<4>>(( *v97))])));
                                if(int.land((0<=( *v47)), (( *v47)<=(int.shl(1, 16)-1)))) {
                                    decl int<4> v66 = CAST<int<4>>('S');
                                    switch(v66) {
                                        case 'S': if((( *v97)<=2)) {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+v43))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v68](){
                                                decl int<4> v67 = ( *( *v68).passed_verification);
                                                (( *v68).passed_verification := (( *( *v68).passed_verification)+CAST<int<4>>(1)));
                                                return v67;
                                            }();
                                        } else {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-v43))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v71](){
                                                decl int<4> v70 = ( *( *v71).passed_verification);
                                                (( *v71).passed_verification := (( *( *v71).passed_verification)+CAST<int<4>>(1)));
                                                return v70;
                                            }();
                                        }
                                        case 'W': if((( *v97)<2)) {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+(v43-2)))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v74](){
                                                decl int<4> v73 = ( *( *v74).passed_verification);
                                                (( *v74).passed_verification := (( *( *v74).passed_verification)+CAST<int<4>>(1)));
                                                return v73;
                                            }();
                                        } else {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-v43))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v77](){
                                                decl int<4> v76 = ( *( *v77).passed_verification);
                                                (( *v77).passed_verification := (( *( *v77).passed_verification)+CAST<int<4>>(1)));
                                                return v76;
                                            }();
                                        }
                                        case 'A': if((( *v97)<=2)) {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+(v43-1)))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v80](){
                                                decl int<4> v79 = ( *( *v80).passed_verification);
                                                (( *v80).passed_verification := (( *( *v80).passed_verification)+CAST<int<4>>(1)));
                                                return v79;
                                            }();
                                        } else {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-(v43-1)))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v83](){
                                                decl int<4> v82 = ( *( *v83).passed_verification);
                                                (( *v83).passed_verification := (( *( *v83).passed_verification)+CAST<int<4>>(1)));
                                                return v82;
                                            }();
                                        }
                                        case 'B': if(int.lor(int.lor((( *v97)==1), (( *v97)==2)), (( *v97)==4))) {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+v43))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v86](){
                                                decl int<4> v85 = ( *( *v86).passed_verification);
                                                (( *v86).passed_verification := (( *( *v86).passed_verification)+CAST<int<4>>(1)));
                                                return v85;
                                            }();
                                        } else {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-v43))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v89](){
                                                decl int<4> v88 = ( *( *v89).passed_verification);
                                                (( *v89).passed_verification := (( *( *v89).passed_verification)+CAST<int<4>>(1)));
                                                return v88;
                                            }();
                                        }
                                        case 'C': if((( *v97)<=2)) {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))+v43))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v92](){
                                                decl int<4> v91 = ( *( *v92).passed_verification);
                                                (( *v92).passed_verification := (( *( *v92).passed_verification)+CAST<int<4>>(1)));
                                                return v91;
                                            }();
                                        } else {
                                            if(int.ne(( *(( *( *v44).key_buff1)[CAST<uint<4>>((( *v47)-1))])), (( *(( *( *v44).test_rank_array)[CAST<uint<4>>(( *v97))]))-v43))) {
                                                printf("Failed partial verification: ", varlist.pack((v43, ( *v97))));
                                            } else [v44]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v95](){
                                                decl int<4> v94 = ( *( *v95).passed_verification);
                                                (( *v95).passed_verification := (( *( *v95).passed_verification)+CAST<int<4>>(1)));
                                                return v94;
                                            }();
                                        }
                                        default: { }
                                    };
                                } else { };
                            };
                            (v45 := 5);
                        };
                        if((v43==10)) (( *v44).key_buff_ptr_global := ( *( *v44).key_buff1)) else { };
                    }</m>;
                }(( *v109));
            }</m>;
            (v5 := 10);
        };
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v111](int<4> v110){
            decl ref<real<8>> v112 = ( var(0.0));
            decl ref<real<8>> v113 = ( var(0.0));
            (v113 := [v111]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v101](){
                decl ref<real<8>> v102 = ( var(0.0));
                [v101]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v104](array<ref<real<8>>,1> v103){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v105 = ( var(undefined));
                    gettimeofday([v105], CAST<array<ref<struct<tz_minuteswest:ref<int<4>>,tz_dsttime:ref<int<4>>>>,1>>(( *CAST<ref<'a>>(0))));
                    if((( *( *v104).sec)<0)) (( *v104).sec := CAST<int<4>>(( *( *v105).tv_sec))) else { };
                    ((v103[0]) := (CAST<real<8>>((( *( *v105).tv_sec)-CAST<int<8>>(( *( *v104).sec))))+(1.0e-6*CAST<real<8>>(( *( *v105).tv_usec)))));
                }([v102]);
                return v102;
            }());
            (v112 := (( *v113)-( *(( *( *v111).start)[CAST<uint<4>>(v110)]))));
            ((( *( *v111).elapsed)[CAST<uint<4>>(v110)]) := (( *(( *( *v111).elapsed)[CAST<uint<4>>(v110)]))+( *v112)));
        }(0);
        (v8 := [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v116](int<4> v115){
            return (( *( *v116).elapsed)[CAST<uint<4>>(v115)]);
        }(0));
        [v1]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v118](){
            decl ref<int<4>> v119 = ( var(0));
            decl ref<int<4>> v120 = ( var(0));
            decl ref<int<4>> v121 = ( var(0));
            decl ref<int<4>> v122 = ( var(0));
            decl ref<int<4>> v123 = ( var(0));
            {
                for(decl ref<int<4>> v127 = ( var(0)) .. int.shl(1, 16) : 1) 
                    ((( *( *v118).key_array)[CAST<uint<4>>([v118, v127]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v124, ref<int<4>> v125](){
                        ((( *( *v124).key_buff_ptr_global)[CAST<uint<4>>(( *(( *( *v124).key_buff2)[CAST<uint<4>>(( *v125))])))]) := (( *(( *( *v124).key_buff_ptr_global)[CAST<uint<4>>(( *(( *( *v124).key_buff2)[CAST<uint<4>>(( *v125))])))]))-CAST<int<4>>(1)));
                        ( *(( *( *v124).key_buff_ptr_global)[CAST<uint<4>>(( *(( *( *v124).key_buff2)[CAST<uint<4>>(( *v125))])))]));
                    }())]) := ( *(( *( *v118).key_buff2)[CAST<uint<4>>(( *v127))])))
                ;
                (v119 := int.shl(1, 16));
            };
            (v120 := 0);
            {
                for(decl ref<int<4>> v131 = ( var(1)) .. int.shl(1, 16) : 1) 
                    if((( *(( *( *v118).key_array)[CAST<uint<4>>((( *v131)-1))]))>( *(( *( *v118).key_array)[CAST<uint<4>>(( *v131))])))) [v120]fun[ref<int<4>> v129](){
                        decl int<4> v128 = ( *v129);
                        (v129 := (( *v129)+CAST<int<4>>(1)));
                        return v128;
                    }() else { }
                ;
                (v119 := int.shl(1, 16));
            };
            if(int.ne(( *v120), 0)) {
                printf("Full_verify: number of keys out of sort: %d\n", varlist.pack((( *v120))));
            } else [v118]fun[ref<struct<sec:ref<int<4>>,start:ref<vector<ref<real<8>>,64>>,elapsed:ref<vector<ref<real<8>>,64>>,key_buff_ptr_global:ref<array<ref<int<4>>,1>>,passed_verification:ref<int<4>>,key_array:ref<vector<ref<int<4>>,65536>>,key_buff1:ref<vector<ref<int<4>>,65536>>,key_buff2:ref<vector<ref<int<4>>,65536>>,partial_verify_vals:ref<vector<ref<int<4>>,5>>,test_index_array:ref<vector<ref<int<4>>,5>>,test_rank_array:ref<vector<ref<int<4>>,5>>,S_test_index_array:ref<vector<ref<int<4>>,5>>,S_test_rank_array:ref<vector<ref<int<4>>,5>>,W_test_index_array:ref<vector<ref<int<4>>,5>>,W_test_rank_array:ref<vector<ref<int<4>>,5>>,A_test_index_array:ref<vector<ref<int<4>>,5>>,A_test_rank_array:ref<vector<ref<int<4>>,5>>,B_test_index_array:ref<vector<ref<int<4>>,5>>,B_test_rank_array:ref<vector<ref<int<4>>,5>>,C_test_index_array:ref<vector<ref<int<4>>,5>>,C_test_rank_array:ref<vector<ref<int<4>>,5>>,KS:ref<int<4>>,R23:ref<real<8>>,R46:ref<real<8>>,T23:ref<real<8>>,T46:ref<real<8>>>> v133](){
                decl int<4> v132 = ( *( *v133).passed_verification);
                (( *v133).passed_verification := (( *( *v133).passed_verification)+CAST<int<4>>(1)));
                return v132;
            }();
        }();
        if(int.ne(( *( *v1).passed_verification), ((5*10)+1))) (( *v1).passed_verification := 0) else { };
        fun(array<ref<char>,1> v136, char v137, int<4> v138, int<4> v139, int<4> v140, int<4> v141, int<4> v142, real<8> v143, real<8> v144, array<ref<char>,1> v145, int<4> v146, array<ref<char>,1> v147, array<ref<char>,1> v148, array<ref<char>,1> v149, array<ref<char>,1> v150, array<ref<char>,1> v151, array<ref<char>,1> v152, array<ref<char>,1> v153, array<ref<char>,1> v154, array<ref<char>,1> v155){
            decl ref<array<ref<char>,1>> v156 = ( var("1000"));
            printf("\n\n %s Benchmark Completed\n", varlist.pack((v136)));
            printf(" Class           =                        %c\n", varlist.pack((CAST<int<4>>(v137))));
            if(int.land((v139==0), (v140==0))) printf(" Size            =             %12d\n", varlist.pack((v138))) else printf(" Size            =              %3dx%3dx%3d\n", varlist.pack((v138, v139, v140)));
            printf(" Iterations      =             %12d\n", varlist.pack((v141)));
            printf(" Threads         =             %12d\n", varlist.pack((v142)));
            printf(" Time in seconds =             %12.2f\n", varlist.pack((v143)));
            printf(" Mop/s total     =             %12.2f\n", varlist.pack((v144)));
            printf(" Operation type  = %24s\n", varlist.pack((v145)));
            if(CAST<bool>(v146)) printf(" Verification    =               SUCCESSFUL\n", varlist.pack(())) else printf(" Verification    =             UNSUCCESSFUL\n", varlist.pack(()));
            printf(" Version         =             %12s\n", varlist.pack((v147)));
            printf(" Compile date    =             %12s\n", varlist.pack((v148)));
            printf("\n Compile options:\n", varlist.pack(()));
            printf("    CC           = %s\n", varlist.pack((v149)));
            printf("    CLINK        = %s\n", varlist.pack((v150)));
            printf("    C_LIB        = %s\n", varlist.pack((v151)));
            printf("    C_INC        = %s\n", varlist.pack((v152)));
            printf("    CFLAGS       = %s\n", varlist.pack((v153)));
            printf("    CLINKFLAGS   = %s\n", varlist.pack((v154)));
            printf("    RAND         = %s\n", varlist.pack((v155)));
        }("IS", CAST<char>('S'), int.shl(1, 16), 0, 0, 10, ( *v7), ( *v8), ((CAST<real<8>>((10*int.shl(1, 16)))/( *v8))/1000000.), "keys ranked", ( *( *v1).passed_verification), "2.3", "03 Nov 2010", "cc", "cc", "-lm", "-I../common", "-O3 ", "-lm", "randlc");
    }


digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: printf(..., ...)\l"];
3[shape=box,label="[B3]\l"];
4[shape=box,label="[B4]\l0: string.as.char.pointer(\"Done.\n\")\l"];
5[shape=box,label="[B5]\l0: varlist.pack(())\l"];
6[shape=diamond,label="ENTRY"];
7[shape=diamond,label="EXIT"];
8[shape=box,label="[B8]\l0: fclose(v2)\l"];
10[shape=box,label="[B10]\l0: printf(..., ...)\l"];
11[shape=box,label="[B11]\l"];
12[shape=box,label="[B12]\l0: string.as.char.pointer(\"Closing file ...\n\")\l"];
13[shape=box,label="[B13]\l0: varlist.pack(())\l"];
14[shape=box,label="[B14]\l0: int.ne(( *v3), (CAST<int<4>>(0)-1))\lT: WHILE(...)\l"];
15[shape=box,label="[B15]\l0: ref.assign(v3, ...)\l"];
17[shape=box,label="[B17]\l0: fgetc(v2)\l"];
18[shape=box,label="[B18]\l0: printf(..., ...)\l"];
19[shape=box,label="[B19]\l"];
20[shape=box,label="[B20]\l0: string.as.char.pointer(\"%c\")\l"];
21[shape=box,label="[B21]\l0: varlist.pack((( *v3)))\l"];
22[shape=box,label="[B22]\l0: decl v3 = ...\l"];
23[shape=box,label="[B23]\l0: ref.deref(v3)\l"];
24[shape=box,label="[B24]\l0: int.sub(..., 1)\l"];
25[shape=box,label="[B25]\l0: CAST<int<4>>\l"];
26[shape=box,label="[B26]\l0: ref.var(...)\l"];
28[shape=box,label="[B28]\l0: fgetc(v2)\l"];
29[shape=box,label="[B29]\l0: printf(..., ...)\l"];
30[shape=box,label="[B30]\l"];
31[shape=box,label="[B31]\l0: string.as.char.pointer(\"Reading file ...\n\")\l"];
32[shape=box,label="[B32]\l0: varlist.pack(())\l"];
33[shape=box,label="[B33]\l0: ptr.eq(..., ...)\lT: IF(...)\l"];
34[shape=box,label="[B34]\l0: unit\lT: RETURN\l"];
35[shape=box,label="[B35]\l0: printf(..., ...)\l"];
36[shape=box,label="[B36]\l"];
37[shape=box,label="[B37]\l0: string.as.char.pointer(\"File not found!\n\")\l"];
38[shape=box,label="[B38]\l0: varlist.pack(())\l"];
39[shape=box,label="[B39]\l0: ref.assign(v2, ...)\l"];
40[shape=box,label="[B40]\l0: ref.deref(v2)\l"];
41[shape=box,label="[B41]\l0: get.null(type<rec '_IO_FILE{'_IO_FILE=struct<_flags:int<4>,_IO_read_ptr:array<char,1>,_IO_read_end:array<char,1>,_IO_read_base:array<char,1>,_IO_write_base:array<char,1>,_IO_write_ptr:array<char,1>,_IO_write_end:array<char,1>,_IO_buf_base:array<char,1>,_IO_buf_end:array<char,1>,_IO_save_base:array<char,1>,_IO_backup_base:array<char,1>,_IO_save_end:array<char,1>,_markers:array<'_IO_marker,1>,_chain:array<'_IO_FILE,1>,_fileno:int<4>,_flags2:int<4>,_old_offset:int<8>,_cur_column:uint<2>,_vtable_offset:char,_shortbuf:vector<char,1>,_lock:anyRef,_offset:int<8>,__pad1:anyRef,__pad2:anyRef,__pad3:anyRef,__pad4:anyRef,__pad5:uint<8>,_mode:int<4>,_unused2:vector<char,20>>, '_IO_marker=struct<_next:array<'_IO_marker,1>,_sbuf:array<'_IO_FILE,1>,_pos:int<4>>}>)\l"];
43[shape=box,label="[B43]\l0: ref.deref(...)\l"];
44[shape=box,label="[B44]\l0: fopen(v1, ...)\l"];
45[shape=box,label="[B45]\l0: string.as.char.pointer(\"r\")\l"];
46[shape=box,label="[B46]\l0: printf(..., ...)\l"];
47[shape=box,label="[B47]\l0: decl v2 = ...\l"];
48[shape=box,label="[B48]\l0: string.as.char.pointer(\"Opening file %s ...\n\")\l"];
49[shape=box,label="[B49]\l0: varlist.pack((v1))\l"];
50[shape=box,label="[B50]\l0: ref.var(...)\l"];
52[shape=box,label="[B52]\l0: undefined(type<array<rec '_IO_FILE{'_IO_FILE=struct<_flags:int<4>,_IO_read_ptr:array<char,1>,_IO_read_end:array<char,1>,_IO_read_base:array<char,1>,_IO_write_base:array<char,1>,_IO_write_ptr:array<char,1>,_IO_write_end:array<char,1>,_IO_buf_base:array<char,1>,_IO_buf_end:array<char,1>,_IO_save_base:array<char,1>,_IO_backup_base:array<char,1>,_IO_save_end:array<char,1>,_markers:array<'_IO_marker,1>,_chain:array<'_IO_FILE,1>,_fileno:int<4>,_flags2:int<4>,_old_offset:int<8>,_cur_column:uint<2>,_vtable_offset:char,_shortbuf:vector<char,1>,_lock:anyRef,_offset:int<8>,__pad1:anyRef,__pad2:anyRef,__pad3:anyRef,__pad4:anyRef,__pad5:uint<8>,_mode:int<4>,_unused2:vector<char,20>>, '_IO_marker=struct<_next:array<'_IO_marker,1>,_sbuf:array<'_IO_FILE,1>,_pos:int<4>>},1>>)\l"];
53[shape=box,label="CALL"];
54[shape=box,label="RET"];
56[shape=box,label="[B56]\l0: string.as.char.pointer(\"file2.txt\")\l"];
57[shape=box,label="CALL"];
58[shape=box,label="RET"];
60[shape=box,label="[B60]\l0: string.as.char.pointer(\"file.txt\")\l"];
2->1 [label=""];
4->2 [label="0"];
3->4 [label=""];
5->2 [label="1"];
3->5 [label=""];
8->7 [label=""];
10->8 [label=""];
12->10 [label="0"];
11->12 [label=""];
13->10 [label="1"];
11->13 [label=""];
15->14 [label=""];
17->15 [label="1"];
18->17 [label=""];
20->18 [label="0"];
19->20 [label=""];
21->18 [label="1"];
19->21 [label=""];
14->19 [label="true"];
14->11 [label="false"];
23->14 [label="0"];
22->23 [label=""];
24->14 [label="1"];
25->24 [label="0"];
22->25 [label=""];
26->22 [label=""];
28->26 [label="0"];
29->28 [label=""];
31->29 [label="0"];
30->31 [label=""];
32->29 [label="1"];
30->32 [label=""];
34->7 [label=""];
35->34 [label=""];
37->35 [label="0"];
36->37 [label=""];
38->35 [label="1"];
36->38 [label=""];
33->36 [label="true"];
33->30 [label="false"];
40->33 [label="0"];
39->40 [label=""];
41->33 [label="1"];
39->41 [label=""];
43->39 [label="1"];
44->43 [label="0"];
45->44 [label="1"];
46->45 [label=""];
48->46 [label="0"];
47->48 [label=""];
49->46 [label="1"];
47->49 [label=""];
50->47 [label=""];
52->50 [label="0"];
6->52 [label=""];
53->6 [label=""];
7->54 [label=""];
54->3 [label=""];
56->53 [label="0"];
57->6 [label=""];
7->58 [label=""];
58->56 [label=""];
60->57 [label="0"];
0->60 [label=""];
}

digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=diamond,label="ENTRY"];
3[shape=diamond,label="EXIT"];
4[shape=box,label="[B4]\l0: CAST<int<4>>\lT: RETURN\l"];
5[shape=box,label="[B5]\l0: bool.to.int(...)\l"];
7[shape=box,label="[B7]\l0: bool.and(..., bind(){fun{...}(v6)})\l"];
8[shape=box,label="[B8]\l0: uint.ge(v6.AP(age), ...)\l"];
9[shape=box,label="[B9]\l0: CAST<uint<4>>\l"];
10[shape=box,label="[B10]\lT: RETURN\l"];
11[shape=box,label="CALL"];
12[shape=box,label="RET"];
14[shape=box,label="[B14]\l0: ref.deref(v3)\l"];
15[shape=box,label="[B15]\l0: decl v3 = ...\l"];
16[shape=box,label="[B16]\l0: ref.var(...)\l"];
18[shape=diamond,label="ENTRY"];
19[shape=diamond,label="EXIT"];
20[shape=box,label="[B20]\l0: ref.assign(..., ...)\l"];
21[shape=box,label="[B21]\l0: strcpy(..., ...)\l"];
22[shape=box,label="[B22]\l0: composite.ref.elem(v4, age, type<uint<4>>)\l"];
23[shape=box,label="[B23]\l0: CAST<uint<4>>\l"];
24[shape=box,label="[B24]\l0: decl v4 = ...\l"];
25[shape=box,label="[B25]\l0: ref.vector.to.ref.array(...)\l"];
26[shape=box,label="[B26]\l0: composite.ref.elem(v4, name, type<vector<char,30>>)\l"];
27[shape=box,label="[B27]\l0: string.as.char.pointer(\"John Doe\")\l"];
28[shape=box,label="[B28]\l0: ref.var(...)\l"];
30[shape=box,label="[B30]\l0: undefined(type<struct<name:vector<char,30>,age:uint<4>>>)\l"];
31[shape=box,label="CALL"];
32[shape=box,label="RET"];
4->3 [label=""];
5->4 [label=""];
7->5 [label="0"];
8->7 [label="0"];
9->8 [label="1"];
2->9 [label=""];
10->1 [label=""];
11->2 [label=""];
3->12 [label=""];
12->10 [label=""];
14->11 [label="0"];
15->14 [label=""];
16->15 [label=""];
20->19 [label=""];
22->20 [label="0"];
21->22 [label=""];
23->20 [label="1"];
21->23 [label=""];
25->21 [label="0"];
26->25 [label="0"];
24->26 [label=""];
27->21 [label="1"];
24->27 [label=""];
28->24 [label=""];
30->28 [label="0"];
18->30 [label=""];
31->18 [label=""];
19->32 [label=""];
32->16 [label="0"];
0->31 [label=""];
}

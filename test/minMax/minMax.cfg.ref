digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: printf(..., ...)\l"];
3[shape=box,label="[B3]\l0: printf(..., ...)\l"];
4[shape=box,label="[B4]\l0: string.as.char.pointer(\"Max: %d\n\")\l"];
5[shape=box,label="[B5]\l0: varlist.pack((ite((( *composite.ref.elem(v1, a, type<int<4>>))>( *composite.ref.elem(v1, b, type<int<4>>))), bind(){fun{...}(v1)}, bind(){fun{...}(v1)})))\l"];
6[shape=box,label="[B6]\l0: ref.assign(..., 2)\l"];
7[shape=box,label="[B7]\l0: string.as.char.pointer(\"Min: %d\n\")\l"];
8[shape=box,label="[B8]\l0: varlist.pack((ite((( *composite.ref.elem(v1, a, type<int<4>>))<( *composite.ref.elem(v1, b, type<int<4>>))), bind(){fun{...}(v1)}, bind(){fun{...}(v1)})))\l"];
10[shape=box,label="[B10]\l0: composite.ref.elem(v1, b, type<int<4>>)\l"];
11[shape=box,label="[B11]\l0: ref.assign(..., 1)\l"];
13[shape=box,label="[B13]\l0: composite.ref.elem(v1, a, type<int<4>>)\l"];
14[shape=box,label="[B14]\l0: decl v1 = ...\l"];
15[shape=box,label="[B15]\l0: ref.new(struct{a:=0, b:=0})\l"];
2->1 [label=""];
4->2 [label="0"];
3->4 [label=""];
5->2 [label="1"];
3->5 [label=""];
7->3 [label="0"];
6->7 [label=""];
8->3 [label="1"];
6->8 [label=""];
10->6 [label="0"];
11->10 [label=""];
13->11 [label="0"];
14->13 [label=""];
15->14 [label=""];
0->15 [label=""];
}

// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(){
        decl ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v1 =  var(struct{a:= var(0), b:= var(0)});
        v1.a := 1;
        v1.b := 2;
        printf("Min: %d\n", varlist.pack((ite(v1.a<v1.b, [v1]fun[ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v4]()return v4.a, [v1]fun[ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v2]()return v2.b))));
        printf("Max: %d\n", varlist.pack((ite(v1.a>v1.b, [v1]fun[ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v8]()return v8.a, [v1]fun[ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v6]()return v6.b))));
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(){
        decl ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v1 = ( var(struct{a:=( var(0)), b:=( var(0))}));
        (( *v1).a := 1);
        (( *v1).b := 2);
        printf("Min: %d\n", varlist.pack((ite((( *( *v1).a)<( *( *v1).b)), [v1]fun[ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v4]()return ( *( *v4).a), [v1]fun[ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v2]()return ( *( *v2).b)))));
        printf("Max: %d\n", varlist.pack((ite((( *( *v1).a)>( *( *v1).b)), [v1]fun[ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v8]()return ( *( *v8).a), [v1]fun[ref<struct<a:ref<int<4>>,b:ref<int<4>>>> v6]()return ( *( *v6).b)))));
    }


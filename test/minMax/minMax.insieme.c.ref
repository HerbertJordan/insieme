// --- Generated Inspire Code ---
#include <alloca.h>
#include <stddef.h>
#include <stdlib.h>
#include <runtime.h>
#define bool int
#define true 1
#define false 0
#define null 0

// start code fragment :: type_declaration___insieme_globals //
struct __insieme_globals { 
    int a;
    int b;
};

// start code fragment :: global data //
struct __insieme_globals __GLOBAL__;

// start code fragment :: array type definition of __insieme_type_0 <=> array<char,1> //
typedef struct ___insieme_type_0 { 
    char* data;
} __insieme_type_0;

// start code fragment :: Prototype for external function: printf ... type: ((ref<array<char,1>>,var_list)->int<4>) //
int printf(char*, ...);

// start code fragment :: main function //
int main() {
	{
		;
		((*(&((__GLOBAL__).a))) = 0);
		((*(&((__GLOBAL__).b))) = 0);
		((*(&((__GLOBAL__).a))) = 1);
		((*(&((__GLOBAL__).b))) = 2);
		printf(((char*)((*(&((__insieme_type_0){"Min: %d\n"}))).data)), ((((*(&((__GLOBAL__).a)))<(*(&((__GLOBAL__).b)))))?((*(&((__GLOBAL__).a)))):((*(&((__GLOBAL__).b))))));
		printf(((char*)((*(&((__insieme_type_0){"Max: %d\n"}))).data)), ((((*(&((__GLOBAL__).a)))>(*(&((__GLOBAL__).b)))))?((*(&((__GLOBAL__).a)))):((*(&((__GLOBAL__).b))))));
	};
}

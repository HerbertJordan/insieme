// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, array<ref<array<ref<char>,1>>,1> v3){
        decl ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v1 =  var(struct{_x:= var(array.create.1D( new(vector.initUniform( var(0.0), 131073)), 1)), x:= var(null), q:= var(array.create.1D( new(vector.initUniform( var(0.0), 10)), 1)), start:= var(array.create.1D( new(vector.initUniform( var(0.0), 64)), 1)), elapsed:= var(array.create.1D( new(vector.initUniform( var(0.0), 64)), 1)), sec:= var(0-1)});
        decl ref<real<8>> v4 =  var(0.0);
        decl ref<real<8>> v5 =  var(0.0);
        decl ref<real<8>> v6 =  var(0.0);
        decl ref<real<8>> v7 =  var(0.0);
        decl ref<real<8>> v8 =  var(0.0);
        decl ref<real<8>> v9 =  var(0.0);
        decl ref<real<8>> v10 =  var(0.0);
        decl ref<real<8>> v11 =  var(0.0);
        decl ref<real<8>> v12 =  var(0.0);
        decl ref<real<8>> v13 =  var(0.0);
        decl ref<real<8>> v14 =  var(0.0);
        decl ref<real<8>> v15 =  var(0.0);
        decl ref<real<8>> v16 =  var(0.0);
        decl vector<ref<real<8>>,3> v17 = [ var(1.0),  var(1.0),  var(1.0)];
        decl ref<int<4>> v18 =  var(0);
        decl ref<int<4>> v19 =  var(0);
        decl ref<int<4>> v20 =  var(0);
        decl ref<int<4>> v21 =  var(0);
        decl ref<int<4>> v22 =  var(0);
        decl ref<int<4>> v23 =  var(0);
        decl ref<int<4>> v24 =  var(0);
        decl ref<int<4>> v25 =  var(0);
        decl ref<int<4>> v26 =  var(0);
        decl ref<int<4>> v27 =  var(0);
        decl ref<int<4>> v28 =  var(0);
        decl ref<int<4>> v29 =  var(0);
        decl ref<int<4>> v30 =  var(0);
        decl ref<int<4>> v31 =  var(0);
        decl ref<int<4>> v32 =  var(0);
        decl ref<int<4>> v33 =  var(1);
        decl ref<int<4>> v34 =  var(0);
        decl vector<ref<char>,14> v35 = undefined(vector<ref<char>,14>);
        v1.x := [v1._x[0][1]];
        printf("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - EP Benchmark\n", varlist.pack(()));
        sprintf(v35, "%12.0f", varlist.pack((pow(2.0, 25+1))));
        {
            for(decl ref<int<4>> v149 =  var(0-13) .. 0-1+1 : 1) {
                if(v35[0-v149]=='.') v35[0-v149] := ' ' else { };
            };
            v32 := 13+ceil(0-1+1-13/1)*1;
        };
        printf(" Number of random numbers generated: %13s\n", varlist.pack((v35)));
        v34 := 0;
        v18 := int.lshift(1, 25-16);
        fun(int<4> v37, array<ref<real<8>>,1> v38, real<8> v39, array<ref<real<8>>,1> v40){
            decl ref<int<4>> v41 =  var(0);
            decl ref<real<8>> v42 =  var(0.0);
            decl ref<real<8>> v43 =  var(0.0);
            decl ref<real<8>> v44 =  var(0.0);
            decl ref<real<8>> v45 =  var(0.0);
            decl ref<real<8>> v46 =  var(0.0);
            decl ref<real<8>> v47 =  var(0.0);
            decl ref<real<8>> v48 =  var(0.0);
            decl ref<real<8>> v49 =  var(0.0);
            decl ref<real<8>> v50 =  var(0.0);
            decl ref<real<8>> v51 =  var(0.0);
            v43 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v39;
            v47 := v43;
            v48 := v39-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v47;
            v42 := v38[0];
            {
                for(decl ref<int<4>> v52 =  var(1) .. v37+1 : 1) {
                    v43 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v42;
                    v49 := v43;
                    v50 := v42-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v49;
                    v43 := v47*v50+v48*v49;
                    v44 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v43;
                    v51 := v43-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v44;
                    v45 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v51+v48*v50;
                    v46 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v45;
                    v42 := v45-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v46;
                    v40[v52] := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v42;
                };
                v41 := 1+ceil(v37+1-1/1)*1;
            };
            v38[0] := v42;
        }(0, [v17[0]], v17[1], [v17[2]]);
        v17[0] := fun(array<ref<real<8>>,1> v54, real<8> v55){
            decl ref<real<8>> v56 =  var(0.0);
            decl ref<real<8>> v57 =  var(0.0);
            decl ref<real<8>> v58 =  var(0.0);
            decl ref<real<8>> v59 =  var(0.0);
            decl ref<real<8>> v60 =  var(0.0);
            decl ref<real<8>> v61 =  var(0.0);
            decl ref<real<8>> v62 =  var(0.0);
            decl ref<real<8>> v63 =  var(0.0);
            decl ref<real<8>> v64 =  var(0.0);
            v56 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v55;
            v60 := v56;
            v61 := v55-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v60;
            v56 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v54[0];
            v62 := v56;
            v63 := v54[0]-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v62;
            v56 := v60*v63+v61*v62;
            v57 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v56;
            v64 := v56-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v57;
            v58 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v64+v61*v63;
            v59 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v58;
            v54[0] := v58-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v59;
            return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v54[0];
        }([v17[1]], v17[2]);
        {
            for(decl ref<int<4>> v150 =  var(0) .. 2*int.lshift(1, 16) : 1) 
                v1.x[v150] := 0-1.0e99
            ;
            v22 := 0+ceil(2*int.lshift(1, 16)-0/1)*1;
        };
        v4 := log(sqrt(fabs(ite(1.0>1.0, fun()return 1.0, fun()return 1.0))));
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v70](int<4> v69){
            v70.elapsed[0][v69] := 0.0;
        }(1);
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v70](int<4> v69){
            v70.elapsed[0][v69] := 0.0;
        }(2);
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v70](int<4> v69){
            v70.elapsed[0][v69] := 0.0;
        }(3);
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v73](int<4> v72){
            v73.start[0][v72] := [v73]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                decl ref<real<8>> v75 =  var(0.0);
                [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 =  var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>));
                    gettimeofday([v78], null);
                    if(v77.sec<0) v77.sec := v78.tv_sec else { };
                    v76[0] := v78.tv_sec-v77.sec+1.0e-6*v78.tv_usec;
                }([v75]);
                return v75;
            }();
        }(1);
        fun(int<4> v37, array<ref<real<8>>,1> v38, real<8> v39, array<ref<real<8>>,1> v40){
            decl ref<int<4>> v41 =  var(0);
            decl ref<real<8>> v42 =  var(0.0);
            decl ref<real<8>> v43 =  var(0.0);
            decl ref<real<8>> v44 =  var(0.0);
            decl ref<real<8>> v45 =  var(0.0);
            decl ref<real<8>> v46 =  var(0.0);
            decl ref<real<8>> v47 =  var(0.0);
            decl ref<real<8>> v48 =  var(0.0);
            decl ref<real<8>> v49 =  var(0.0);
            decl ref<real<8>> v50 =  var(0.0);
            decl ref<real<8>> v51 =  var(0.0);
            v43 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v39;
            v47 := v43;
            v48 := v39-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v47;
            v42 := v38[0];
            {
                for(decl ref<int<4>> v52 =  var(1) .. v37+1 : 1) {
                    v43 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v42;
                    v49 := v43;
                    v50 := v42-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v49;
                    v43 := v47*v50+v48*v49;
                    v44 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v43;
                    v51 := v43-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v44;
                    v45 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v51+v48*v50;
                    v46 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v45;
                    v42 := v45-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v46;
                    v40[v52] := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v42;
                };
                v41 := 1+ceil(v37+1-1/1)*1;
            };
            v38[0] := v42;
        }(0, [v5], 1220703125.0, v1.x);
        v5 := 1220703125.0;
        {
            for(decl ref<int<4>> v153 =  var(1) .. 16+1+1 : 1) {
                v6 := fun(array<ref<real<8>>,1> v54, real<8> v55){
                    decl ref<real<8>> v56 =  var(0.0);
                    decl ref<real<8>> v57 =  var(0.0);
                    decl ref<real<8>> v58 =  var(0.0);
                    decl ref<real<8>> v59 =  var(0.0);
                    decl ref<real<8>> v60 =  var(0.0);
                    decl ref<real<8>> v61 =  var(0.0);
                    decl ref<real<8>> v62 =  var(0.0);
                    decl ref<real<8>> v63 =  var(0.0);
                    decl ref<real<8>> v64 =  var(0.0);
                    v56 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v55;
                    v60 := v56;
                    v61 := v55-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v60;
                    v56 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v54[0];
                    v62 := v56;
                    v63 := v54[0]-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v62;
                    v56 := v60*v63+v61*v62;
                    v57 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v56;
                    v64 := v56-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v57;
                    v58 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v64+v61*v63;
                    v59 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v58;
                    v54[0] := v58-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v59;
                    return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v54[0];
                }([v5], v5);
            };
            v22 := 1+ceil(16+1+1-1/1)*1;
        };
        v14 := v5;
        v15 := 271828183.0;
        v16 := 0.0;
        v11 := 0.0;
        v12 := 0.0;
        {
            for(decl ref<int<4>> v154 =  var(0) .. 10-1+1 : 1) {
                v1.q[0][v154] := 0.0;
            };
            v22 := 0+ceil(10-1+1-0/1)*1;
        };
        v31 := 0-1;
        {
            decl ref<real<8>> v84 =  var(0.0);
            decl ref<real<8>> v85 =  var(0.0);
            decl ref<real<8>> v86 =  var(0.0);
            decl ref<real<8>> v87 =  var(0.0);
            decl ref<real<8>> v88 =  var(0.0);
            decl ref<real<8>> v89 =  var(0.0);
            decl ref<int<4>> v90 =  var(0);
            decl ref<int<4>> v91 =  var(0);
            decl ref<int<4>> v92 =  var(0);
            decl ref<int<4>> v93 =  var(0);
            decl vector<ref<real<8>>,10> v94 = undefined(vector<ref<real<8>>,10>);
            {
                for(decl ref<int<4>> v155 =  var(0) .. 10 : 1) 
                    v94[v155] := 0.0
                ;
                v91 := 0+ceil(10-0/1)*1;
            };
            {
                for(decl ref<int<4>> v162 =  var(1) .. v18+1 : 1) {
                    v90 := v31+v162;
                    v84 := 271828183.0;
                    v85 := v14;
                    {
                        for(decl ref<int<4>> v156 =  var(1) .. 100+1 : 1) {
                            v92 := v90/2;
                            if(int.ne(2*v92, v90)) v86 := fun(array<ref<real<8>>,1> v54, real<8> v55){
                                decl ref<real<8>> v56 =  var(0.0);
                                decl ref<real<8>> v57 =  var(0.0);
                                decl ref<real<8>> v58 =  var(0.0);
                                decl ref<real<8>> v59 =  var(0.0);
                                decl ref<real<8>> v60 =  var(0.0);
                                decl ref<real<8>> v61 =  var(0.0);
                                decl ref<real<8>> v62 =  var(0.0);
                                decl ref<real<8>> v63 =  var(0.0);
                                decl ref<real<8>> v64 =  var(0.0);
                                v56 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v55;
                                v60 := v56;
                                v61 := v55-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v60;
                                v56 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v54[0];
                                v62 := v56;
                                v63 := v54[0]-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v62;
                                v56 := v60*v63+v61*v62;
                                v57 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v56;
                                v64 := v56-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v57;
                                v58 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v64+v61*v63;
                                v59 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v58;
                                v54[0] := v58-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v59;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v54[0];
                            }([v84], v85) else { };
                            if(v92==0) break else { };
                            v86 := fun(array<ref<real<8>>,1> v54, real<8> v55){
                                decl ref<real<8>> v56 =  var(0.0);
                                decl ref<real<8>> v57 =  var(0.0);
                                decl ref<real<8>> v58 =  var(0.0);
                                decl ref<real<8>> v59 =  var(0.0);
                                decl ref<real<8>> v60 =  var(0.0);
                                decl ref<real<8>> v61 =  var(0.0);
                                decl ref<real<8>> v62 =  var(0.0);
                                decl ref<real<8>> v63 =  var(0.0);
                                decl ref<real<8>> v64 =  var(0.0);
                                v56 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v55;
                                v60 := v56;
                                v61 := v55-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v60;
                                v56 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v54[0];
                                v62 := v56;
                                v63 := v54[0]-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v62;
                                v56 := v60*v63+v61*v62;
                                v57 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v56;
                                v64 := v56-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v57;
                                v58 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v64+v61*v63;
                                v59 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v58;
                                v54[0] := v58-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v59;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v54[0];
                            }([v85], v85);
                            v90 := v92;
                        };
                        v91 := 1+ceil(100+1-1/1)*1;
                    };
                    if(0==1) [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v73](int<4> v72){
                        v73.start[0][v72] := [v73]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                            decl ref<real<8>> v75 =  var(0.0);
                            [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                                decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 =  var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>));
                                gettimeofday([v78], null);
                                if(v77.sec<0) v77.sec := v78.tv_sec else { };
                                v76[0] := v78.tv_sec-v77.sec+1.0e-6*v78.tv_usec;
                            }([v75]);
                            return v75;
                        }();
                    }(3) else { };
                    fun(int<4> v37, array<ref<real<8>>,1> v38, real<8> v39, array<ref<real<8>>,1> v40){
                        decl ref<int<4>> v41 =  var(0);
                        decl ref<real<8>> v42 =  var(0.0);
                        decl ref<real<8>> v43 =  var(0.0);
                        decl ref<real<8>> v44 =  var(0.0);
                        decl ref<real<8>> v45 =  var(0.0);
                        decl ref<real<8>> v46 =  var(0.0);
                        decl ref<real<8>> v47 =  var(0.0);
                        decl ref<real<8>> v48 =  var(0.0);
                        decl ref<real<8>> v49 =  var(0.0);
                        decl ref<real<8>> v50 =  var(0.0);
                        decl ref<real<8>> v51 =  var(0.0);
                        v43 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v39;
                        v47 := v43;
                        v48 := v39-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v47;
                        v42 := v38[0];
                        {
                            for(decl ref<int<4>> v52 =  var(1) .. v37+1 : 1) {
                                v43 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v42;
                                v49 := v43;
                                v50 := v42-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v49;
                                v43 := v47*v50+v48*v49;
                                v44 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v43;
                                v51 := v43-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v44;
                                v45 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v51+v48*v50;
                                v46 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v45;
                                v42 := v45-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v46;
                                v40[v52] := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v42;
                            };
                            v41 := 1+ceil(v37+1-1/1)*1;
                        };
                        v38[0] := v42;
                    }(2*int.lshift(1, 16), [v84], 1220703125.0, v1._x[0]);
                    if(0==1) [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v98](int<4> v97){
                        decl ref<real<8>> v99 =  var(0.0);
                        decl ref<real<8>> v100 =  var(0.0);
                        v100 := [v98]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                            decl ref<real<8>> v75 =  var(0.0);
                            [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                                decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 =  var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>));
                                gettimeofday([v78], null);
                                if(v77.sec<0) v77.sec := v78.tv_sec else { };
                                v76[0] := v78.tv_sec-v77.sec+1.0e-6*v78.tv_usec;
                            }([v75]);
                            return v75;
                        }();
                        v99 := v100-v98.start[0][v97];
                        v98.elapsed[0][v97] := v98.elapsed[0][v97]+v99;
                    }(3) else { };
                    if(0==1) [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v73](int<4> v72){
                        v73.start[0][v72] := [v73]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                            decl ref<real<8>> v75 =  var(0.0);
                            [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                                decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 =  var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>));
                                gettimeofday([v78], null);
                                if(v77.sec<0) v77.sec := v78.tv_sec else { };
                                v76[0] := v78.tv_sec-v77.sec+1.0e-6*v78.tv_usec;
                            }([v75]);
                            return v75;
                        }();
                    }(2) else { };
                    {
                        for(decl ref<int<4>> v161 =  var(0) .. int.lshift(1, 16) : 1) {
                            v88 := 2.0*v1.x[2*v161]-1.0;
                            v89 := 2.0*v1.x[2*v161+1]-1.0;
                            v84 := v88*v88+v89*v89;
                            if(v84<=1.0) {
                                v85 := sqrt(0-2.0*log(v84)/v84);
                                v86 := v88*v85;
                                v87 := v89*v85;
                                v93 := ite(fabs(v86)>fabs(v87), [v86]fun[ref<real<8>> v159]()return fabs(v159), [v87]fun[ref<real<8>> v157]()return fabs(v157));
                                v94[v93] := v94[v93]+1.0;
                                v11 := v11+v86;
                                v12 := v12+v87;
                            } else { };
                        };
                        v91 := 0+ceil(int.lshift(1, 16)-0/1)*1;
                    };
                    if(0==1) [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v98](int<4> v97){
                        decl ref<real<8>> v99 =  var(0.0);
                        decl ref<real<8>> v100 =  var(0.0);
                        v100 := [v98]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                            decl ref<real<8>> v75 =  var(0.0);
                            [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                                decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 =  var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>));
                                gettimeofday([v78], null);
                                if(v77.sec<0) v77.sec := v78.tv_sec else { };
                                v76[0] := v78.tv_sec-v77.sec+1.0e-6*v78.tv_usec;
                            }([v75]);
                            return v75;
                        }();
                        v99 := v100-v98.start[0][v97];
                        v98.elapsed[0][v97] := v98.elapsed[0][v97]+v99;
                    }(2) else { };
                };
                v26 := 1+ceil(v18+1-1/1)*1;
            };
            {
                {
                    for(decl ref<int<4>> v163 =  var(0) .. 10-1+1 : 1) 
                        v1.q[0][v163] := v1.q[0][v163]+v94[v163]
                    ;
                    v91 := 0+ceil(10-1+1-0/1)*1;
                };
            };
        };
        {
            for(decl ref<int<4>> v164 =  var(0) .. 10-1+1 : 1) {
                v16 := v16+v1.q[0][v164];
            };
            v22 := 0+ceil(10-1+1-0/1)*1;
        };
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v98](int<4> v97){
            decl ref<real<8>> v99 =  var(0.0);
            decl ref<real<8>> v100 =  var(0.0);
            v100 := [v98]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                decl ref<real<8>> v75 =  var(0.0);
                [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 =  var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>));
                    gettimeofday([v78], null);
                    if(v77.sec<0) v77.sec := v78.tv_sec else { };
                    v76[0] := v78.tv_sec-v77.sec+1.0e-6*v78.tv_usec;
                }([v75]);
                return v75;
            }();
            v99 := v100-v98.start[0][v97];
            v98.elapsed[0][v97] := v98.elapsed[0][v97]+v99;
        }(1);
        v13 := [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v111](int<4> v110){
            return v111.elapsed[0][v110];
        }(1);
        v27 := 0;
        if(25==24) {
            if(fabs(v11-0-3.247834652034740e3/v11)<=1.0e-8&&[v12]fun[ref<real<8>> v165]()return fabs(v165-0-6.958407078382297e3/v165)<=1.0e-8) {
                v34 := 1;
            } else { };
        } else if(25==25) {
            if(fabs(v11-0-2.863319731645753e3/v11)<=1.0e-8&&[v12]fun[ref<real<8>> v167]()return fabs(v167-0-6.320053679109499e3/v167)<=1.0e-8) {
                v34 := 1;
            } else { };
        } else if(25==28) {
            if(fabs(v11-0-4.295875165629892e3/v11)<=1.0e-8&&[v12]fun[ref<real<8>> v169]()return fabs(v169-0-1.580732573678431e4/v169)<=1.0e-8) {
                v34 := 1;
            } else { };
        } else if(25==30) {
            if(fabs(v11-4.033815542441498e4/v11)<=1.0e-8&&[v12]fun[ref<real<8>> v171]()return fabs(v171-0-2.660669192809235e4/v171)<=1.0e-8) {
                v34 := 1;
            } else { };
        } else if(25==32) {
            if(fabs(v11-4.764367927995374e4/v11)<=1.0e-8&&[v12]fun[ref<real<8>> v173]()return fabs(v173-0-8.084072988043731e4/v173)<=1.0e-8) {
                v34 := 1;
            } else { };
        } else { };
        v4 := pow(2.0, 25+1)/v13/1000000.0;
        printf("EP Benchmark Results: \nCPU Time = %10.4f\nN = 2^%5d\nNo. Gaussian Pairs = %15.0f\nSums = %25.15e %25.15e\nCounts:\n", varlist.pack((0.0, 25, v16, v11, v12)));
        {
            for(decl ref<int<4>> v175 =  var(0) .. 10-1+1 : 1) {
                printf("%3d %15.0f\n", varlist.pack((v175, v1.q[0][v175])));
            };
            v22 := 0+ceil(10-1+1-0/1)*1;
        };
        fun(array<ref<char>,1> v124, char v125, int<4> v126, int<4> v127, int<4> v128, int<4> v129, int<4> v130, real<8> v131, real<8> v132, array<ref<char>,1> v133, int<4> v134, array<ref<char>,1> v135, array<ref<char>,1> v136, array<ref<char>,1> v137, array<ref<char>,1> v138, array<ref<char>,1> v139, array<ref<char>,1> v140, array<ref<char>,1> v141, array<ref<char>,1> v142, array<ref<char>,1> v143){
            decl ref<array<ref<char>,1>> v144 =  var("1000");
            printf("\n\n %s Benchmark Completed\n", varlist.pack((v124)));
            printf(" Class           =                        %c\n", varlist.pack((v125)));
            if(v127==0&&[v128]fun[int<4> v145]()return v145==0) printf(" Size            =             %12d\n", varlist.pack((v126))) else printf(" Size            =              %3dx%3dx%3d\n", varlist.pack((v126, v127, v128)));
            printf(" Iterations      =             %12d\n", varlist.pack((v129)));
            printf(" Threads         =             %12d\n", varlist.pack((v130)));
            printf(" Time in seconds =             %12.2f\n", varlist.pack((0.0)));
            printf(" Mop/s total     =             %12.2f\n", varlist.pack((0.0)));
            printf(" Operation type  = %24s\n", varlist.pack((v133)));
            if(v134) printf(" Verification    =               SUCCESSFUL\n", varlist.pack(())) else printf(" Verification    =             UNSUCCESSFUL\n", varlist.pack(()));
            printf(" Version         =             %12s\n", varlist.pack((v135)));
            printf(" Compile date    =             %12s\n", varlist.pack((v136)));
            printf("\n Compile options:\n", varlist.pack(()));
            printf("    CC           = %s\n", varlist.pack((v137)));
            printf("    CLINK        = %s\n", varlist.pack((v138)));
            printf("    C_LIB        = %s\n", varlist.pack((v139)));
            printf("    C_INC        = %s\n", varlist.pack((v140)));
            printf("    CFLAGS       = %s\n", varlist.pack((v141)));
            printf("    CLINKFLAGS   = %s\n", varlist.pack((v142)));
            printf("    RAND         = %s\n", varlist.pack((v143)));
        }("EP", 'W', 25+1, 0, 0, v27, v33, v13, v4, "Random numbers generated", v34, "2.3", "03 Dec 2010", "cc", "cc", "-lm", "-I../common", "-O3 ", "-lm", "randdp");
        if(0==1) {
            printf("Total time:     %f", varlist.pack(([v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v111](int<4> v110){
                return v111.elapsed[0][v110];
            }(1))));
            printf("Gaussian pairs: %f", varlist.pack(([v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v111](int<4> v110){
                return v111.elapsed[0][v110];
            }(2))));
            printf("Random numbers: %f", varlist.pack(([v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v111](int<4> v110){
                return v111.elapsed[0][v110];
            }(3))));
        } else { };
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, array<ref<array<ref<char>,1>>,1> v3){
        decl ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v1 = ( var(struct{_x:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 131073))), 1))), x:=( var(null)), q:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 10))), 1))), start:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 64))), 1))), elapsed:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 64))), 1))), sec:=( var((CAST<int<4>>(0)-1)))}));
        decl ref<real<8>> v4 = ( var(0.0));
        decl ref<real<8>> v5 = ( var(0.0));
        decl ref<real<8>> v6 = ( var(0.0));
        decl ref<real<8>> v7 = ( var(0.0));
        decl ref<real<8>> v8 = ( var(0.0));
        decl ref<real<8>> v9 = ( var(0.0));
        decl ref<real<8>> v10 = ( var(0.0));
        decl ref<real<8>> v11 = ( var(0.0));
        decl ref<real<8>> v12 = ( var(0.0));
        decl ref<real<8>> v13 = ( var(0.0));
        decl ref<real<8>> v14 = ( var(0.0));
        decl ref<real<8>> v15 = ( var(0.0));
        decl ref<real<8>> v16 = ( var(0.0));
        decl vector<ref<real<8>>,3> v17 = [( var(1.0)), ( var(1.0)), ( var(1.0))];
        decl ref<int<4>> v18 = ( var(0));
        decl ref<int<4>> v19 = ( var(0));
        decl ref<int<4>> v20 = ( var(0));
        decl ref<int<4>> v21 = ( var(0));
        decl ref<int<4>> v22 = ( var(0));
        decl ref<int<4>> v23 = ( var(0));
        decl ref<int<4>> v24 = ( var(0));
        decl ref<int<4>> v25 = ( var(0));
        decl ref<int<4>> v26 = ( var(0));
        decl ref<int<4>> v27 = ( var(0));
        decl ref<int<4>> v28 = ( var(0));
        decl ref<int<4>> v29 = ( var(0));
        decl ref<int<4>> v30 = ( var(0));
        decl ref<int<4>> v31 = ( var(0));
        decl ref<int<4>> v32 = ( var(0));
        decl ref<int<4>> v33 = ( var(1));
        decl ref<int<4>> v34 = ( var(0));
        decl vector<ref<char>,14> v35 = undefined(vector<ref<char>,14>);
        (( *v1).x := [(( *(( *( *v1)._x)[0]))[CAST<uint<4>>(1)])]);
        printf("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - EP Benchmark\n", varlist.pack(()));
        sprintf(v35, "%12.0f", varlist.pack((pow(2.0, CAST<real<8>>((25+1))))));
        {
            for(decl ref<int<4>> v149 = ( var((CAST<int<4>>(0)-13))) .. ((CAST<int<4>>(0)-1)+1) : 1) {
                if((CAST<int<4>>(( *(v35[CAST<uint<4>>((CAST<int<4>>(0)-( *v149)))])))=='.')) ((v35[CAST<uint<4>>((CAST<int<4>>(0)-( *v149)))]) := CAST<char>(' ')) else { };
            };
            (v32 := (13+(CAST<int<4>>(ceil((CAST<real<8>>((((CAST<int<4>>(0)-1)+1)-13))/CAST<real<8>>(1))))*1)));
        };
        printf(" Number of random numbers generated: %13s\n", varlist.pack((v35)));
        (v34 := 0);
        (v18 := int.lshift(1, (25-16)));
        fun(int<4> v37, array<ref<real<8>>,1> v38, real<8> v39, array<ref<real<8>>,1> v40){
            decl ref<int<4>> v41 = ( var(0));
            decl ref<real<8>> v42 = ( var(0.0));
            decl ref<real<8>> v43 = ( var(0.0));
            decl ref<real<8>> v44 = ( var(0.0));
            decl ref<real<8>> v45 = ( var(0.0));
            decl ref<real<8>> v46 = ( var(0.0));
            decl ref<real<8>> v47 = ( var(0.0));
            decl ref<real<8>> v48 = ( var(0.0));
            decl ref<real<8>> v49 = ( var(0.0));
            decl ref<real<8>> v50 = ( var(0.0));
            decl ref<real<8>> v51 = ( var(0.0));
            (v43 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v39));
            (v47 := CAST<real<8>>(CAST<int<4>>(( *v43))));
            (v48 := (v39-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v47))));
            (v42 := ( *(v38[0])));
            {
                for(decl ref<int<4>> v52 = ( var(1)) .. (v37+1) : 1) {
                    (v43 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v42)));
                    (v49 := CAST<real<8>>(CAST<int<4>>(( *v43))));
                    (v50 := (( *v42)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v49))));
                    (v43 := ((( *v47)*( *v50))+(( *v48)*( *v49))));
                    (v44 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v43)))));
                    (v51 := (( *v43)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v44))));
                    (v45 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v51))+(( *v48)*( *v50))));
                    (v46 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v45)))));
                    (v42 := (( *v45)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v46))));
                    ((v40[CAST<uint<4>>(( *v52))]) := ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v42)));
                };
                (v41 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v37+1)-1))/CAST<real<8>>(1))))*1)));
            };
            ((v38[0]) := ( *v42));
        }(0, [(v17[CAST<uint<4>>(0)])], ( *(v17[CAST<uint<4>>(1)])), [(v17[CAST<uint<4>>(2)])]);
        ((v17[CAST<uint<4>>(0)]) := fun(array<ref<real<8>>,1> v54, real<8> v55){
            decl ref<real<8>> v56 = ( var(0.0));
            decl ref<real<8>> v57 = ( var(0.0));
            decl ref<real<8>> v58 = ( var(0.0));
            decl ref<real<8>> v59 = ( var(0.0));
            decl ref<real<8>> v60 = ( var(0.0));
            decl ref<real<8>> v61 = ( var(0.0));
            decl ref<real<8>> v62 = ( var(0.0));
            decl ref<real<8>> v63 = ( var(0.0));
            decl ref<real<8>> v64 = ( var(0.0));
            (v56 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v55));
            (v60 := CAST<real<8>>(CAST<int<4>>(( *v56))));
            (v61 := (v55-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v60))));
            (v56 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *(v54[0]))));
            (v62 := CAST<real<8>>(CAST<int<4>>(( *v56))));
            (v63 := (( *(v54[0]))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v62))));
            (v56 := ((( *v60)*( *v63))+(( *v61)*( *v62))));
            (v57 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v56)))));
            (v64 := (( *v56)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v57))));
            (v58 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v64))+(( *v61)*( *v63))));
            (v59 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v58)))));
            ((v54[0]) := (( *v58)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v59))));
            return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *(v54[0])));
        }([(v17[CAST<uint<4>>(1)])], ( *(v17[CAST<uint<4>>(2)]))));
        {
            for(decl ref<int<4>> v150 = ( var(0)) .. (2*int.lshift(1, 16)) : 1) 
                ((( *( *v1).x)[CAST<uint<4>>(( *v150))]) := (CAST<real<8>>(0)-1.0e99))
            ;
            (v22 := (0+(CAST<int<4>>(ceil((CAST<real<8>>(((2*int.lshift(1, 16))-0))/CAST<real<8>>(1))))*1)));
        };
        (v4 := log(sqrt(fabs(ite((1.0>1.0), fun()return 1.0, fun()return 1.0)))));
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v70](int<4> v69){
            ((( *(( *( *v70).elapsed)[0]))[CAST<uint<4>>(v69)]) := 0.0);
        }(1);
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v70](int<4> v69){
            ((( *(( *( *v70).elapsed)[0]))[CAST<uint<4>>(v69)]) := 0.0);
        }(2);
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v70](int<4> v69){
            ((( *(( *( *v70).elapsed)[0]))[CAST<uint<4>>(v69)]) := 0.0);
        }(3);
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v73](int<4> v72){
            ((( *(( *( *v73).start)[0]))[CAST<uint<4>>(v72)]) := [v73]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                decl ref<real<8>> v75 = ( var(0.0));
                [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 = ( var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>)));
                    gettimeofday([v78], null);
                    if((( *( *v77).sec)<0)) (( *v77).sec := CAST<int<4>>(( *( *v78).tv_sec))) else { };
                    ((v76[0]) := (CAST<real<8>>((( *( *v78).tv_sec)-CAST<int<8>>(( *( *v77).sec))))+(1.0e-6*CAST<real<8>>(( *( *v78).tv_usec)))));
                }([v75]);
                return ( *v75);
            }());
        }(1);
        fun(int<4> v37, array<ref<real<8>>,1> v38, real<8> v39, array<ref<real<8>>,1> v40){
            decl ref<int<4>> v41 = ( var(0));
            decl ref<real<8>> v42 = ( var(0.0));
            decl ref<real<8>> v43 = ( var(0.0));
            decl ref<real<8>> v44 = ( var(0.0));
            decl ref<real<8>> v45 = ( var(0.0));
            decl ref<real<8>> v46 = ( var(0.0));
            decl ref<real<8>> v47 = ( var(0.0));
            decl ref<real<8>> v48 = ( var(0.0));
            decl ref<real<8>> v49 = ( var(0.0));
            decl ref<real<8>> v50 = ( var(0.0));
            decl ref<real<8>> v51 = ( var(0.0));
            (v43 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v39));
            (v47 := CAST<real<8>>(CAST<int<4>>(( *v43))));
            (v48 := (v39-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v47))));
            (v42 := ( *(v38[0])));
            {
                for(decl ref<int<4>> v52 = ( var(1)) .. (v37+1) : 1) {
                    (v43 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v42)));
                    (v49 := CAST<real<8>>(CAST<int<4>>(( *v43))));
                    (v50 := (( *v42)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v49))));
                    (v43 := ((( *v47)*( *v50))+(( *v48)*( *v49))));
                    (v44 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v43)))));
                    (v51 := (( *v43)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v44))));
                    (v45 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v51))+(( *v48)*( *v50))));
                    (v46 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v45)))));
                    (v42 := (( *v45)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v46))));
                    ((v40[CAST<uint<4>>(( *v52))]) := ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v42)));
                };
                (v41 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v37+1)-1))/CAST<real<8>>(1))))*1)));
            };
            ((v38[0]) := ( *v42));
        }(0, [v5], 1220703125.0, ( *( *v1).x));
        (v5 := 1220703125.0);
        {
            for(decl ref<int<4>> v153 = ( var(1)) .. ((16+1)+1) : 1) {
                (v6 := fun(array<ref<real<8>>,1> v54, real<8> v55){
                    decl ref<real<8>> v56 = ( var(0.0));
                    decl ref<real<8>> v57 = ( var(0.0));
                    decl ref<real<8>> v58 = ( var(0.0));
                    decl ref<real<8>> v59 = ( var(0.0));
                    decl ref<real<8>> v60 = ( var(0.0));
                    decl ref<real<8>> v61 = ( var(0.0));
                    decl ref<real<8>> v62 = ( var(0.0));
                    decl ref<real<8>> v63 = ( var(0.0));
                    decl ref<real<8>> v64 = ( var(0.0));
                    (v56 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v55));
                    (v60 := CAST<real<8>>(CAST<int<4>>(( *v56))));
                    (v61 := (v55-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v60))));
                    (v56 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *(v54[0]))));
                    (v62 := CAST<real<8>>(CAST<int<4>>(( *v56))));
                    (v63 := (( *(v54[0]))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v62))));
                    (v56 := ((( *v60)*( *v63))+(( *v61)*( *v62))));
                    (v57 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v56)))));
                    (v64 := (( *v56)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v57))));
                    (v58 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v64))+(( *v61)*( *v63))));
                    (v59 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v58)))));
                    ((v54[0]) := (( *v58)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v59))));
                    return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *(v54[0])));
                }([v5], ( *v5)));
            };
            (v22 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((16+1)+1)-1))/CAST<real<8>>(1))))*1)));
        };
        (v14 := ( *v5));
        (v15 := 271828183.0);
        (v16 := 0.0);
        (v11 := 0.0);
        (v12 := 0.0);
        {
            for(decl ref<int<4>> v154 = ( var(0)) .. ((10-1)+1) : 1) {
                ((( *(( *( *v1).q)[0]))[CAST<uint<4>>(( *v154))]) := 0.0);
            };
            (v22 := (0+(CAST<int<4>>(ceil((CAST<real<8>>((((10-1)+1)-0))/CAST<real<8>>(1))))*1)));
        };
        (v31 := (CAST<int<4>>(0)-1));
        <m id=6>{
            decl ref<real<8>> v84 = ( var(0.0));
            decl ref<real<8>> v85 = ( var(0.0));
            decl ref<real<8>> v86 = ( var(0.0));
            decl ref<real<8>> v87 = ( var(0.0));
            decl ref<real<8>> v88 = ( var(0.0));
            decl ref<real<8>> v89 = ( var(0.0));
            decl ref<int<4>> v90 = ( var(0));
            decl ref<int<4>> v91 = ( var(0));
            decl ref<int<4>> v92 = ( var(0));
            decl ref<int<4>> v93 = ( var(0));
            decl vector<ref<real<8>>,10> v94 = undefined(vector<ref<real<8>>,10>);
            {
                for(decl ref<int<4>> v155 = ( var(0)) .. 10 : 1) 
                    ((v94[CAST<uint<4>>(( *v155))]) := 0.0)
                ;
                (v91 := (0+(CAST<int<4>>(ceil((CAST<real<8>>((10-0))/CAST<real<8>>(1))))*1)));
            };
            {
                <m id=4>for(decl ref<int<4>> v162 = ( var(1)) .. (( *v18)+1) : 1) {
                    (v90 := (( *v31)+( *v162)));
                    (v84 := 271828183.0);
                    (v85 := ( *v14));
                    {
                        for(decl ref<int<4>> v156 = ( var(1)) .. (100+1) : 1) {
                            (v92 := (( *v90)/2));
                            if(int.ne((2*( *v92)), ( *v90))) (v86 := fun(array<ref<real<8>>,1> v54, real<8> v55){
                                decl ref<real<8>> v56 = ( var(0.0));
                                decl ref<real<8>> v57 = ( var(0.0));
                                decl ref<real<8>> v58 = ( var(0.0));
                                decl ref<real<8>> v59 = ( var(0.0));
                                decl ref<real<8>> v60 = ( var(0.0));
                                decl ref<real<8>> v61 = ( var(0.0));
                                decl ref<real<8>> v62 = ( var(0.0));
                                decl ref<real<8>> v63 = ( var(0.0));
                                decl ref<real<8>> v64 = ( var(0.0));
                                (v56 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v55));
                                (v60 := CAST<real<8>>(CAST<int<4>>(( *v56))));
                                (v61 := (v55-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v60))));
                                (v56 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *(v54[0]))));
                                (v62 := CAST<real<8>>(CAST<int<4>>(( *v56))));
                                (v63 := (( *(v54[0]))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v62))));
                                (v56 := ((( *v60)*( *v63))+(( *v61)*( *v62))));
                                (v57 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v56)))));
                                (v64 := (( *v56)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v57))));
                                (v58 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v64))+(( *v61)*( *v63))));
                                (v59 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v58)))));
                                ((v54[0]) := (( *v58)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v59))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *(v54[0])));
                            }([v84], ( *v85))) else { };
                            if((( *v92)==0)) break else { };
                            (v86 := fun(array<ref<real<8>>,1> v54, real<8> v55){
                                decl ref<real<8>> v56 = ( var(0.0));
                                decl ref<real<8>> v57 = ( var(0.0));
                                decl ref<real<8>> v58 = ( var(0.0));
                                decl ref<real<8>> v59 = ( var(0.0));
                                decl ref<real<8>> v60 = ( var(0.0));
                                decl ref<real<8>> v61 = ( var(0.0));
                                decl ref<real<8>> v62 = ( var(0.0));
                                decl ref<real<8>> v63 = ( var(0.0));
                                decl ref<real<8>> v64 = ( var(0.0));
                                (v56 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v55));
                                (v60 := CAST<real<8>>(CAST<int<4>>(( *v56))));
                                (v61 := (v55-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v60))));
                                (v56 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *(v54[0]))));
                                (v62 := CAST<real<8>>(CAST<int<4>>(( *v56))));
                                (v63 := (( *(v54[0]))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v62))));
                                (v56 := ((( *v60)*( *v63))+(( *v61)*( *v62))));
                                (v57 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v56)))));
                                (v64 := (( *v56)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v57))));
                                (v58 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v64))+(( *v61)*( *v63))));
                                (v59 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v58)))));
                                ((v54[0]) := (( *v58)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v59))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *(v54[0])));
                            }([v85], ( *v85)));
                            (v90 := ( *v92));
                        };
                        (v91 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((100+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    if((0==1)) [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v73](int<4> v72){
                        ((( *(( *( *v73).start)[0]))[CAST<uint<4>>(v72)]) := [v73]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                            decl ref<real<8>> v75 = ( var(0.0));
                            [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                                decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 = ( var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>)));
                                gettimeofday([v78], null);
                                if((( *( *v77).sec)<0)) (( *v77).sec := CAST<int<4>>(( *( *v78).tv_sec))) else { };
                                ((v76[0]) := (CAST<real<8>>((( *( *v78).tv_sec)-CAST<int<8>>(( *( *v77).sec))))+(1.0e-6*CAST<real<8>>(( *( *v78).tv_usec)))));
                            }([v75]);
                            return ( *v75);
                        }());
                    }(3) else { };
                    fun(int<4> v37, array<ref<real<8>>,1> v38, real<8> v39, array<ref<real<8>>,1> v40){
                        decl ref<int<4>> v41 = ( var(0));
                        decl ref<real<8>> v42 = ( var(0.0));
                        decl ref<real<8>> v43 = ( var(0.0));
                        decl ref<real<8>> v44 = ( var(0.0));
                        decl ref<real<8>> v45 = ( var(0.0));
                        decl ref<real<8>> v46 = ( var(0.0));
                        decl ref<real<8>> v47 = ( var(0.0));
                        decl ref<real<8>> v48 = ( var(0.0));
                        decl ref<real<8>> v49 = ( var(0.0));
                        decl ref<real<8>> v50 = ( var(0.0));
                        decl ref<real<8>> v51 = ( var(0.0));
                        (v43 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v39));
                        (v47 := CAST<real<8>>(CAST<int<4>>(( *v43))));
                        (v48 := (v39-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v47))));
                        (v42 := ( *(v38[0])));
                        {
                            for(decl ref<int<4>> v52 = ( var(1)) .. (v37+1) : 1) {
                                (v43 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v42)));
                                (v49 := CAST<real<8>>(CAST<int<4>>(( *v43))));
                                (v50 := (( *v42)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v49))));
                                (v43 := ((( *v47)*( *v50))+(( *v48)*( *v49))));
                                (v44 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v43)))));
                                (v51 := (( *v43)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v44))));
                                (v45 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v51))+(( *v48)*( *v50))));
                                (v46 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v45)))));
                                (v42 := (( *v45)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v46))));
                                ((v40[CAST<uint<4>>(( *v52))]) := ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v42)));
                            };
                            (v41 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v37+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        ((v38[0]) := ( *v42));
                    }((2*int.lshift(1, 16)), [v84], 1220703125.0, ( *(( *( *v1)._x)[0])));
                    if((0==1)) [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v98](int<4> v97){
                        decl ref<real<8>> v99 = ( var(0.0));
                        decl ref<real<8>> v100 = ( var(0.0));
                        (v100 := [v98]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                            decl ref<real<8>> v75 = ( var(0.0));
                            [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                                decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 = ( var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>)));
                                gettimeofday([v78], null);
                                if((( *( *v77).sec)<0)) (( *v77).sec := CAST<int<4>>(( *( *v78).tv_sec))) else { };
                                ((v76[0]) := (CAST<real<8>>((( *( *v78).tv_sec)-CAST<int<8>>(( *( *v77).sec))))+(1.0e-6*CAST<real<8>>(( *( *v78).tv_usec)))));
                            }([v75]);
                            return ( *v75);
                        }());
                        (v99 := (( *v100)-( *(( *(( *( *v98).start)[0]))[CAST<uint<4>>(v97)]))));
                        ((( *(( *( *v98).elapsed)[0]))[CAST<uint<4>>(v97)]) := (( *(( *(( *( *v98).elapsed)[0]))[CAST<uint<4>>(v97)]))+( *v99)));
                    }(3) else { };
                    if((0==1)) [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v73](int<4> v72){
                        ((( *(( *( *v73).start)[0]))[CAST<uint<4>>(v72)]) := [v73]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                            decl ref<real<8>> v75 = ( var(0.0));
                            [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                                decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 = ( var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>)));
                                gettimeofday([v78], null);
                                if((( *( *v77).sec)<0)) (( *v77).sec := CAST<int<4>>(( *( *v78).tv_sec))) else { };
                                ((v76[0]) := (CAST<real<8>>((( *( *v78).tv_sec)-CAST<int<8>>(( *( *v77).sec))))+(1.0e-6*CAST<real<8>>(( *( *v78).tv_usec)))));
                            }([v75]);
                            return ( *v75);
                        }());
                    }(2) else { };
                    {
                        for(decl ref<int<4>> v161 = ( var(0)) .. int.lshift(1, 16) : 1) {
                            (v88 := ((2.0*( *(( *( *v1).x)[CAST<uint<4>>((2*( *v161)))])))-1.0));
                            (v89 := ((2.0*( *(( *( *v1).x)[CAST<uint<4>>(((2*( *v161))+1))])))-1.0));
                            (v84 := ((( *v88)*( *v88))+(( *v89)*( *v89))));
                            if((( *v84)<=1.0)) {
                                (v85 := sqrt((((CAST<real<8>>(0)-2.0)*log(( *v84)))/( *v84))));
                                (v86 := (( *v88)*( *v85)));
                                (v87 := (( *v89)*( *v85)));
                                (v93 := CAST<int<4>>(ite((fabs(( *v86))>fabs(( *v87))), [v86]fun[ref<real<8>> v159]()return fabs(( *v159)), [v87]fun[ref<real<8>> v157]()return fabs(( *v157)))));
                                ((v94[CAST<uint<4>>(( *v93))]) := (( *(v94[CAST<uint<4>>(( *v93))]))+1.0));
                                (v11 := (( *v11)+( *v86)));
                                (v12 := (( *v12)+( *v87)));
                            } else { };
                        };
                        (v91 := (0+(CAST<int<4>>(ceil((CAST<real<8>>((int.lshift(1, 16)-0))/CAST<real<8>>(1))))*1)));
                    };
                    if((0==1)) [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v98](int<4> v97){
                        decl ref<real<8>> v99 = ( var(0.0));
                        decl ref<real<8>> v100 = ( var(0.0));
                        (v100 := [v98]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                            decl ref<real<8>> v75 = ( var(0.0));
                            [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                                decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 = ( var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>)));
                                gettimeofday([v78], null);
                                if((( *( *v77).sec)<0)) (( *v77).sec := CAST<int<4>>(( *( *v78).tv_sec))) else { };
                                ((v76[0]) := (CAST<real<8>>((( *( *v78).tv_sec)-CAST<int<8>>(( *( *v77).sec))))+(1.0e-6*CAST<real<8>>(( *( *v78).tv_usec)))));
                            }([v75]);
                            return ( *v75);
                        }());
                        (v99 := (( *v100)-( *(( *(( *( *v98).start)[0]))[CAST<uint<4>>(v97)]))));
                        ((( *(( *( *v98).elapsed)[0]))[CAST<uint<4>>(v97)]) := (( *(( *(( *( *v98).elapsed)[0]))[CAST<uint<4>>(v97)]))+( *v99)));
                    }(2) else { };
                }</m>;
                (v26 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v18)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            <m id=5>{
                {
                    for(decl ref<int<4>> v163 = ( var(0)) .. ((10-1)+1) : 1) 
                        ((( *(( *( *v1).q)[0]))[CAST<uint<4>>(( *v163))]) := (( *(( *(( *( *v1).q)[0]))[CAST<uint<4>>(( *v163))]))+( *(v94[CAST<uint<4>>(( *v163))]))))
                    ;
                    (v91 := (0+(CAST<int<4>>(ceil((CAST<real<8>>((((10-1)+1)-0))/CAST<real<8>>(1))))*1)));
                };
            }</m>;
        }</m>;
        {
            for(decl ref<int<4>> v164 = ( var(0)) .. ((10-1)+1) : 1) {
                (v16 := (( *v16)+( *(( *(( *( *v1).q)[0]))[CAST<uint<4>>(( *v164))]))));
            };
            (v22 := (0+(CAST<int<4>>(ceil((CAST<real<8>>((((10-1)+1)-0))/CAST<real<8>>(1))))*1)));
        };
        [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v98](int<4> v97){
            decl ref<real<8>> v99 = ( var(0.0));
            decl ref<real<8>> v100 = ( var(0.0));
            (v100 := [v98]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v74](){
                decl ref<real<8>> v75 = ( var(0.0));
                [v74]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v77](array<ref<real<8>>,1> v76){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v78 = ( var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>)));
                    gettimeofday([v78], null);
                    if((( *( *v77).sec)<0)) (( *v77).sec := CAST<int<4>>(( *( *v78).tv_sec))) else { };
                    ((v76[0]) := (CAST<real<8>>((( *( *v78).tv_sec)-CAST<int<8>>(( *( *v77).sec))))+(1.0e-6*CAST<real<8>>(( *( *v78).tv_usec)))));
                }([v75]);
                return ( *v75);
            }());
            (v99 := (( *v100)-( *(( *(( *( *v98).start)[0]))[CAST<uint<4>>(v97)]))));
            ((( *(( *( *v98).elapsed)[0]))[CAST<uint<4>>(v97)]) := (( *(( *(( *( *v98).elapsed)[0]))[CAST<uint<4>>(v97)]))+( *v99)));
        }(1);
        (v13 := [v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v111](int<4> v110){
            return ( *(( *(( *( *v111).elapsed)[0]))[CAST<uint<4>>(v110)]));
        }(1));
        (v27 := 0);
        if((25==24)) {
            if(((fabs(((( *v11)-(CAST<real<8>>(0)-3.247834652034740e3))/( *v11)))<=1.0e-8)&&[v12]fun[ref<real<8>> v165]()return (fabs(((( *v165)-(CAST<real<8>>(0)-6.958407078382297e3))/( *v165)))<=1.0e-8))) {
                (v34 := 1);
            } else { };
        } else if((25==25)) {
            if(((fabs(((( *v11)-(CAST<real<8>>(0)-2.863319731645753e3))/( *v11)))<=1.0e-8)&&[v12]fun[ref<real<8>> v167]()return (fabs(((( *v167)-(CAST<real<8>>(0)-6.320053679109499e3))/( *v167)))<=1.0e-8))) {
                (v34 := 1);
            } else { };
        } else if((25==28)) {
            if(((fabs(((( *v11)-(CAST<real<8>>(0)-4.295875165629892e3))/( *v11)))<=1.0e-8)&&[v12]fun[ref<real<8>> v169]()return (fabs(((( *v169)-(CAST<real<8>>(0)-1.580732573678431e4))/( *v169)))<=1.0e-8))) {
                (v34 := 1);
            } else { };
        } else if((25==30)) {
            if(((fabs(((( *v11)-4.033815542441498e4)/( *v11)))<=1.0e-8)&&[v12]fun[ref<real<8>> v171]()return (fabs(((( *v171)-(CAST<real<8>>(0)-2.660669192809235e4))/( *v171)))<=1.0e-8))) {
                (v34 := 1);
            } else { };
        } else if((25==32)) {
            if(((fabs(((( *v11)-4.764367927995374e4)/( *v11)))<=1.0e-8)&&[v12]fun[ref<real<8>> v173]()return (fabs(((( *v173)-(CAST<real<8>>(0)-8.084072988043731e4))/( *v173)))<=1.0e-8))) {
                (v34 := 1);
            } else { };
        } else { };
        (v4 := ((pow(2.0, CAST<real<8>>((25+1)))/( *v13))/1000000.0));
        printf("EP Benchmark Results: \nCPU Time = %10.4f\nN = 2^%5d\nNo. Gaussian Pairs = %15.0f\nSums = %25.15e %25.15e\nCounts:\n", varlist.pack((0.0, 25, ( *v16), ( *v11), ( *v12))));
        {
            for(decl ref<int<4>> v175 = ( var(0)) .. ((10-1)+1) : 1) {
                printf("%3d %15.0f\n", varlist.pack((( *v175), ( *(( *(( *( *v1).q)[0]))[CAST<uint<4>>(( *v175))])))));
            };
            (v22 := (0+(CAST<int<4>>(ceil((CAST<real<8>>((((10-1)+1)-0))/CAST<real<8>>(1))))*1)));
        };
        fun(array<ref<char>,1> v124, char v125, int<4> v126, int<4> v127, int<4> v128, int<4> v129, int<4> v130, real<8> v131, real<8> v132, array<ref<char>,1> v133, int<4> v134, array<ref<char>,1> v135, array<ref<char>,1> v136, array<ref<char>,1> v137, array<ref<char>,1> v138, array<ref<char>,1> v139, array<ref<char>,1> v140, array<ref<char>,1> v141, array<ref<char>,1> v142, array<ref<char>,1> v143){
            decl ref<array<ref<char>,1>> v144 = ( var("1000"));
            printf("\n\n %s Benchmark Completed\n", varlist.pack((v124)));
            printf(" Class           =                        %c\n", varlist.pack((CAST<int<4>>(v125))));
            if(((v127==0)&&[v128]fun[int<4> v145]()return (v145==0))) printf(" Size            =             %12d\n", varlist.pack((v126))) else printf(" Size            =              %3dx%3dx%3d\n", varlist.pack((v126, v127, v128)));
            printf(" Iterations      =             %12d\n", varlist.pack((v129)));
            printf(" Threads         =             %12d\n", varlist.pack((v130)));
            printf(" Time in seconds =             %12.2f\n", varlist.pack((0.0)));
            printf(" Mop/s total     =             %12.2f\n", varlist.pack((0.0)));
            printf(" Operation type  = %24s\n", varlist.pack((v133)));
            if(CAST<bool>(v134)) printf(" Verification    =               SUCCESSFUL\n", varlist.pack(())) else printf(" Verification    =             UNSUCCESSFUL\n", varlist.pack(()));
            printf(" Version         =             %12s\n", varlist.pack((v135)));
            printf(" Compile date    =             %12s\n", varlist.pack((v136)));
            printf("\n Compile options:\n", varlist.pack(()));
            printf("    CC           = %s\n", varlist.pack((v137)));
            printf("    CLINK        = %s\n", varlist.pack((v138)));
            printf("    C_LIB        = %s\n", varlist.pack((v139)));
            printf("    C_INC        = %s\n", varlist.pack((v140)));
            printf("    CFLAGS       = %s\n", varlist.pack((v141)));
            printf("    CLINKFLAGS   = %s\n", varlist.pack((v142)));
            printf("    RAND         = %s\n", varlist.pack((v143)));
        }("EP", CAST<char>('W'), (25+1), 0, 0, ( *v27), ( *v33), ( *v13), ( *v4), "Random numbers generated", ( *v34), "2.3", "03 Dec 2010", "cc", "cc", "-lm", "-I../common", "-O3 ", "-lm", "randdp");
        if((0==1)) {
            printf("Total time:     %f", varlist.pack(([v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v111](int<4> v110){
                return ( *(( *(( *( *v111).elapsed)[0]))[CAST<uint<4>>(v110)]));
            }(1))));
            printf("Gaussian pairs: %f", varlist.pack(([v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v111](int<4> v110){
                return ( *(( *(( *( *v111).elapsed)[0]))[CAST<uint<4>>(v110)]));
            }(2))));
            printf("Random numbers: %f", varlist.pack(([v1]fun[ref<struct<_x:ref<array<ref<vector<ref<real<8>>,131073>>,1>>,x:ref<array<ref<real<8>>,1>>,q:ref<array<ref<vector<ref<real<8>>,10>>,1>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v111](int<4> v110){
                return ( *(( *(( *( *v111).elapsed)[0]))[CAST<uint<4>>(v110)]));
            }(3))));
        } else { };
    }


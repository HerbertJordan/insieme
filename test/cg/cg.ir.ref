// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, ref<array<array<char,1>,1>> v3){
        decl ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v1 =  new(struct{naa:=0, nzz:=0, firstrow:=0, lastrow:=0, firstcol:=0, lastcol:=0, colidx:=vector.init.uniform(0, 637001), rowstr:=vector.init.uniform(0, 7002), iv:=vector.init.uniform(0, 14002), arow:=vector.init.uniform(0, 637001), acol:=vector.init.uniform(0, 637001), v:=vector.init.uniform(0.0, 7002), aelt:=vector.init.uniform(0.0, 637001), a:=vector.init.uniform(0.0, 637001), x:=vector.init.uniform(0.0, 7003), z:=vector.init.uniform(0.0, 7003), p:=vector.init.uniform(0.0, 7003), q:=vector.init.uniform(0.0, 7003), r:=vector.init.uniform(0.0, 7003), w:=vector.init.uniform(0.0, 7003), amult:=0.0, tran:=0.0, d:=0.0, sum:=0.0, rho:=0.0, rho0:=0.0, alpha:=0.0, beta:=0.0, start:=vector.init.uniform(0.0, 64), elapsed:=vector.init.uniform(0.0, 64), sec:=0-1});
        decl ref<int<4>> v4 =  var(0);
        decl ref<int<4>> v5 =  var(0);
        decl ref<int<4>> v6 =  var(0);
        decl ref<int<4>> v7 =  var(0);
        decl ref<int<4>> v8 =  var(1);
        decl ref<real<8>> v9 =  var(0.0);
        decl ref<real<8>> v10 =  var(0.0);
        decl ref<real<8>> v11 =  var(0.0);
        decl ref<real<8>> v12 =  var(0.0);
        decl ref<real<8>> v13 =  var(0.0);
        decl ref<real<8>> v14 =  var(0.0);
        decl ref<char> v15 =  var('\0');
        decl ref<int<4>> v16 =  var(0);
        decl ref<real<8>> v17 =  var(0.0);
        decl ref<real<8>> v18 =  var(0.0);
        composite.ref.elem(v1, firstrow, type<int<4>>) := 1;
        composite.ref.elem(v1, lastrow, type<int<4>>) := 7000;
        composite.ref.elem(v1, firstcol, type<int<4>>) := 1;
        composite.ref.elem(v1, lastcol, type<int<4>>) := 7000;
        if(7000==1400&&bind(){fun()return 8==7()}&&bind(){fun()return 15==15()}&&bind(){fun()return 12.0==10.0()}) {
            v15 := 'S';
            v17 := 8.5971775078648;
        } else if(7000==7000&&bind(){fun()return 8==8()}&&bind(){fun()return 15==15()}&&bind(){fun()return 12.0==12.0()}) {
            v15 := 'W';
            v17 := 10.362595087124;
        } else if(7000==14000&&bind(){fun()return 8==11()}&&bind(){fun()return 15==15()}&&bind(){fun()return 12.0==20.0()}) {
            v15 := 'A';
            v17 := 17.130235054029;
        } else if(7000==75000&&bind(){fun()return 8==13()}&&bind(){fun()return 15==75()}&&bind(){fun()return 12.0==60.0()}) {
            v15 := 'B';
            v17 := 22.712745482631;
        } else if(7000==150000&&bind(){fun()return 8==15()}&&bind(){fun()return 15==75()}&&bind(){fun()return 12.0==110.0()}) {
            v15 := 'C';
            v17 := 28.973605592845;
        } else {
            v15 := 'U';
        };
        printf(string.as.char.pointer("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - CG Benchmark\n"), varlist.pack(()));
        printf(string.as.char.pointer(" Size: %10d\n"), varlist.pack((7000)));
        printf(string.as.char.pointer(" Iterations: %5d\n"), varlist.pack((15)));
        composite.ref.elem(v1, naa, type<int<4>>) := 7000;
        composite.ref.elem(v1, nzz, type<int<4>>) := 7000*8+1*8+1+7000*8+2;
        composite.ref.elem(v1, tran, type<real<8>>) := 314159265.0;
        composite.ref.elem(v1, amult, type<real<8>>) := 1220703125.0;
        v9 := fun(ref<array<real<8>,1>> v34, real<8> v35){
            decl ref<real<8>> v36 =  var(0.0);
            decl ref<real<8>> v37 =  var(0.0);
            decl ref<real<8>> v38 =  var(0.0);
            decl ref<real<8>> v39 =  var(0.0);
            decl ref<real<8>> v40 =  var(0.0);
            decl ref<real<8>> v41 =  var(0.0);
            decl ref<real<8>> v42 =  var(0.0);
            decl ref<real<8>> v43 =  var(0.0);
            decl ref<real<8>> v44 =  var(0.0);
            v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v35;
            v40 := real.to.int(v36, 4);
            v41 := v35-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v40;
            v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v34, 0);
            v42 := real.to.int(v36, 4);
            v43 := array.ref.elem.1D(v34, 0)-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v42;
            v36 := v40*v43+v41*v42;
            v37 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v36;
            v44 := v36-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v37;
            v38 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v44+v41*v43;
            v39 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v38;
            array.ref.elem.1D(v34, 0) := v38-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v39;
            return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v34, 0);
        }(scalar.to.array(composite.ref.elem(v1, tran, type<real<8>>)), composite.ref.elem(v1, amult, type<real<8>>));
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v46, int<4> v47, int<4> v48, ref<array<real<8>,1>> v49, ref<array<int<4>,1>> v50, ref<array<int<4>,1>> v51, int<4> v52, int<4> v53, int<4> v54, int<4> v55, int<4> v56, real<8> v57, ref<array<int<4>,1>> v58, ref<array<int<4>,1>> v59, ref<array<real<8>,1>> v60, ref<array<real<8>,1>> v61, ref<array<int<4>,1>> v62, real<8> v63){
            decl ref<int<4>> v64 =  var(0);
            decl ref<int<4>> v65 =  var(0);
            decl ref<int<4>> v66 =  var(0);
            decl ref<int<4>> v67 =  var(0);
            decl ref<int<4>> v68 =  var(0);
            decl ref<int<4>> v69 =  var(0);
            decl ref<int<4>> v70 =  var(0);
            decl ref<real<8>> v71 =  var(0.0);
            decl ref<real<8>> v72 =  var(0.0);
            decl ref<real<8>> v73 =  var(0.0);
            decl ref<int<4>> v74 =  var(0);
            v71 := 1.0;
            v72 := pow(v57, 1.0/v47);
            v65 := 0;
            {
                for(decl int<4> v76 = 1 .. v47+1 : 1) {
                    array.ref.elem.1D(v50, v47+v76) := 0;
                };
                v64 := 1+ceil(v47+1-1/1)*1;
            };
            {
                for(decl int<4> v119 = 1 .. v47+1 : 1) {
                    v70 := v52;
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v77, int<4> v78, int<4> v79, ref<array<real<8>,1>> v80, ref<array<int<4>,1>> v81, ref<array<int<4>,1>> v82, ref<array<int<4>,1>> v83){
                        decl ref<int<4>> v84 =  var(0);
                        decl ref<int<4>> v85 =  var(0);
                        decl ref<int<4>> v86 =  var(0);
                        decl ref<int<4>> v87 =  var(0);
                        decl ref<int<4>> v88 =  var(0);
                        decl ref<real<8>> v89 =  var(0.0);
                        decl ref<real<8>> v90 =  var(0.0);
                        v86 := 0;
                        v85 := 0;
                        v84 := 1;
                        {
                            v84 := 2*v84;
                            while(v84<v78) {
                                v84 := 2*v84;
                            };
                        };
                        while(v86<v79) {
                            v89 := fun(ref<array<real<8>,1>> v34, real<8> v35){
                                decl ref<real<8>> v36 =  var(0.0);
                                decl ref<real<8>> v37 =  var(0.0);
                                decl ref<real<8>> v38 =  var(0.0);
                                decl ref<real<8>> v39 =  var(0.0);
                                decl ref<real<8>> v40 =  var(0.0);
                                decl ref<real<8>> v41 =  var(0.0);
                                decl ref<real<8>> v42 =  var(0.0);
                                decl ref<real<8>> v43 =  var(0.0);
                                decl ref<real<8>> v44 =  var(0.0);
                                v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v35;
                                v40 := real.to.int(v36, 4);
                                v41 := v35-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v40;
                                v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v34, 0);
                                v42 := real.to.int(v36, 4);
                                v43 := array.ref.elem.1D(v34, 0)-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v42;
                                v36 := v40*v43+v41*v42;
                                v37 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v36;
                                v44 := v36-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v37;
                                v38 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v44+v41*v43;
                                v39 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v38;
                                array.ref.elem.1D(v34, 0) := v38-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v39;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v34, 0);
                            }(scalar.to.array(composite.ref.elem(v77, tran, type<real<8>>)), composite.ref.elem(v77, amult, type<real<8>>));
                            v90 := fun(ref<array<real<8>,1>> v34, real<8> v35){
                                decl ref<real<8>> v36 =  var(0.0);
                                decl ref<real<8>> v37 =  var(0.0);
                                decl ref<real<8>> v38 =  var(0.0);
                                decl ref<real<8>> v39 =  var(0.0);
                                decl ref<real<8>> v40 =  var(0.0);
                                decl ref<real<8>> v41 =  var(0.0);
                                decl ref<real<8>> v42 =  var(0.0);
                                decl ref<real<8>> v43 =  var(0.0);
                                decl ref<real<8>> v44 =  var(0.0);
                                v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v35;
                                v40 := real.to.int(v36, 4);
                                v41 := v35-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v40;
                                v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v34, 0);
                                v42 := real.to.int(v36, 4);
                                v43 := array.ref.elem.1D(v34, 0)-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v42;
                                v36 := v40*v43+v41*v42;
                                v37 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v36;
                                v44 := v36-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v37;
                                v38 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v44+v41*v43;
                                v39 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v38;
                                array.ref.elem.1D(v34, 0) := v38-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v39;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v34, 0);
                            }(scalar.to.array(composite.ref.elem(v77, tran, type<real<8>>)), composite.ref.elem(v77, amult, type<real<8>>));
                            v88 := fun(real<8> v91, int<4> v92){
                                return v92*v91;
                            }(v90, v84)+1;
                            if(v88>v78) continue else { };
                            if(array.ref.elem.1D(v83, v88)==0) {
                                array.ref.elem.1D(v83, v88) := 1;
                                v85 := v85+1;
                                array.ref.elem.1D(v82, v85) := v88;
                                v86 := v86+1;
                                array.ref.elem.1D(v80, v86) := v89;
                                array.ref.elem.1D(v81, v86) := v88;
                            } else { };
                        };
                        {
                            for(decl int<4> v95 = 1 .. v85+1 : 1) {
                                v88 := array.ref.elem.1D(v82, v95);
                                array.ref.elem.1D(v83, v88) := 0;
                            };
                            v87 := 1+ceil(v85+1-1/1)*1;
                        };
                    }(v46, v47, v70, v61, v62, scalar.to.array(array.ref.elem.1D(v50, 0)), scalar.to.array(array.ref.elem.1D(v50, v47)));
                    fun(int<4> v97, ref<array<real<8>,1>> v98, ref<array<int<4>,1>> v99, ref<array<int<4>,1>> v100, int<4> v101, real<8> v102){
                        decl ref<int<4>> v103 =  var(0);
                        decl ref<int<4>> v104 =  var(0);
                        v104 := 0;
                        {
                            for(decl int<4> v106 = 1 .. array.ref.elem.1D(v100, 0)+1 : 1) {
                                if(array.ref.elem.1D(v99, v106)==v101) {
                                    array.ref.elem.1D(v98, v106) := v102;
                                    v104 := 1;
                                } else { };
                            };
                            v103 := 1+ceil(array.ref.elem.1D(v100, 0)+1-1/1)*1;
                        };
                        if(v104==0) {
                            array.ref.elem.1D(v100, 0) := array.ref.elem.1D(v100, 0)+1;
                            array.ref.elem.1D(v98, array.ref.elem.1D(v100, 0)) := v102;
                            array.ref.elem.1D(v99, array.ref.elem.1D(v100, 0)) := v101;
                        } else { };
                    }(v47, v61, v62, scalar.to.array(v70), v119, 0.5);
                    {
                        for(decl int<4> v117 = 1 .. v70+1 : 1) {
                            v74 := array.ref.elem.1D(v62, v117);
                            if(v74>=v55&&bind(){fun(int<4> v113, ref<int<4>> v114)return v114<=v113(v56, v74)}) {
                                v73 := v71*array.ref.elem.1D(v61, v117);
                                {
                                    for(decl int<4> v112 = 1 .. v70+1 : 1) {
                                        v69 := array.ref.elem.1D(v62, v112);
                                        if(v69>=v53&&bind(){fun(int<4> v108, ref<int<4>> v109)return v109<=v108(v54, v69)}) {
                                            v65 := v65+1;
                                            if(v65>v48) {
                                                printf(string.as.char.pointer("Space for matrix elements exceeded in"), varlist.pack(()));
                                                printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((v65, v48)));
                                                printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((v119)));
                                                exit(1);
                                            } else { };
                                            array.ref.elem.1D(v59, v65) := v74;
                                            array.ref.elem.1D(v58, v65) := v69;
                                            array.ref.elem.1D(v60, v65) := array.ref.elem.1D(v61, v112)*v73;
                                        } else { };
                                    };
                                    v68 := 1+ceil(v70+1-1/1)*1;
                                };
                            } else { };
                        };
                        v67 := 1+ceil(v70+1-1/1)*1;
                    };
                    v71 := v71*v72;
                };
                v66 := 1+ceil(v47+1-1/1)*1;
            };
            {
                for(decl int<4> v124 = v53 .. v54+1 : 1) {
                    if(v124>=v55&&bind(){fun(int<4> v120, ref<int<4>> v121)return v121<=v120(v56,  var(v124))}) {
                        v66 := v47+v124;
                        v65 := v65+1;
                        if(v65>v48) {
                            printf(string.as.char.pointer("Space for matrix elements exceeded in makea\n"), varlist.pack(()));
                            printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((v65, v48)));
                            printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((v66)));
                            exit(1);
                        } else { };
                        array.ref.elem.1D(v59, v65) := v124;
                        array.ref.elem.1D(v58, v65) := v124;
                        array.ref.elem.1D(v60, v65) := v57-v63;
                    } else { };
                };
                v64 := v53+ceil(v54+1-v53/1)*1;
            };
            fun(ref<array<real<8>,1>> v125, ref<array<int<4>,1>> v126, ref<array<int<4>,1>> v127, int<4> v128, ref<array<int<4>,1>> v129, ref<array<int<4>,1>> v130, ref<array<real<8>,1>> v131, int<4> v132, int<4> v133, ref<array<real<8>,1>> v134, ref<array<int<4>,1>> v135, ref<array<int<4>,1>> v136, int<4> v137){
                decl ref<int<4>> v138 =  var(0);
                decl ref<int<4>> v139 =  var(0);
                decl ref<int<4>> v140 =  var(0);
                decl ref<int<4>> v141 =  var(0);
                decl ref<int<4>> v142 =  var(0);
                decl ref<int<4>> v143 =  var(0);
                decl ref<int<4>> v144 =  var(0);
                decl ref<real<8>> v145 =  var(0.0);
                v138 := v133-v132+1;
                {
                    for(decl int<4> v147 = 1 .. v128+1 : 1) {
                        array.ref.elem.1D(v127, v147) := 0;
                        array.ref.elem.1D(v135, v147) := 0;
                    };
                    v140 := 1+ceil(v128+1-1/1)*1;
                };
                array.ref.elem.1D(v127, v128+1) := 0;
                {
                    for(decl int<4> v149 = 1 .. v137+1 : 1) {
                        v140 := array.ref.elem.1D(v129, v149)-v132+1+1;
                        array.ref.elem.1D(v127, v140) := array.ref.elem.1D(v127, v140)+1;
                    };
                    v142 := 1+ceil(v137+1-1/1)*1;
                };
                array.ref.elem.1D(v127, 1) := 1;
                {
                    for(decl int<4> v151 = 2 .. v138+1+1 : 1) {
                        array.ref.elem.1D(v127, v151) := array.ref.elem.1D(v127, v151)+array.ref.elem.1D(v127, v151-1);
                    };
                    v140 := 2+ceil(v138+1+1-2/1)*1;
                };
                {
                    for(decl int<4> v153 = 1 .. v137+1 : 1) {
                        v140 := array.ref.elem.1D(v129, v153)-v132+1;
                        v143 := array.ref.elem.1D(v127, v140);
                        array.ref.elem.1D(v125, v143) := array.ref.elem.1D(v131, v153);
                        array.ref.elem.1D(v126, v143) := array.ref.elem.1D(v130, v153);
                        array.ref.elem.1D(v127, v140) := array.ref.elem.1D(v127, v140)+1;
                    };
                    v142 := 1+ceil(v137+1-1/1)*1;
                };
                {
                    for(decl int<4> v155 = 0-v138 .. 0-1+1 : 1) {
                        array.ref.elem.1D(v127, 0-v155+1) := array.ref.elem.1D(v127, 0-v155);
                    };
                    v140 := v138+ceil(0-1+1-v138/1)*1;
                };
                array.ref.elem.1D(v127, 1) := 1;
                v142 := 0;
                {
                    for(decl int<4> v157 = 1 .. v128+1 : 1) {
                        array.ref.elem.1D(v134, v157) := 0.0;
                        array.ref.elem.1D(v135, v157) := 0;
                    };
                    v139 := 1+ceil(v128+1-1/1)*1;
                };
                v141 := array.ref.elem.1D(v127, 1);
                {
                    for(decl int<4> v166 = 1 .. v138+1 : 1) {
                        v144 := 0;
                        {
                            for(decl int<4> v162 = v141 .. array.ref.elem.1D(v127, v166+1) : 1) {
                                v139 := array.ref.elem.1D(v126, v162);
                                array.ref.elem.1D(v134, v139) := array.ref.elem.1D(v134, v139)+array.ref.elem.1D(v125, v162);
                                if(array.ref.elem.1D(v135, v139)==0&&bind(){fun(ref<array<real<8>,1>> v158, ref<int<4>> v159)return real.ne(array.ref.elem.1D(v158, v159), 0.0)(v134, v139)}) {
                                    array.ref.elem.1D(v135, v139) := 1;
                                    v144 := v144+1;
                                    array.ref.elem.1D(v136, v144) := v139;
                                } else { };
                            };
                            v143 := v141+ceil(array.ref.elem.1D(v127, v166+1)-v141/1)*1;
                        };
                        {
                            for(decl int<4> v164 = 1 .. v144+1 : 1) {
                                v139 := array.ref.elem.1D(v136, v164);
                                array.ref.elem.1D(v135, v139) := 0;
                                v145 := array.ref.elem.1D(v134, v139);
                                array.ref.elem.1D(v134, v139) := 0.0;
                                if(real.ne(v145, 0.0)) {
                                    v142 := v142+1;
                                    array.ref.elem.1D(v125, v142) := v145;
                                    array.ref.elem.1D(v126, v142) := v139;
                                } else { };
                            };
                            v143 := 1+ceil(v144+1-1/1)*1;
                        };
                        v141 := array.ref.elem.1D(v127, v166+1);
                        array.ref.elem.1D(v127, v166+1) := v142+array.ref.elem.1D(v127, 1);
                    };
                    v140 := 1+ceil(v138+1-1/1)*1;
                };
            }(v49, v50, v51, v47, v58, v59, v60, v53, v54, v61, scalar.to.array(array.ref.elem.1D(v62, 0)), scalar.to.array(array.ref.elem.1D(v62, v47)), v65);
        }(v1, composite.ref.elem(v1, naa, type<int<4>>), composite.ref.elem(v1, nzz, type<int<4>>), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), 8, composite.ref.elem(v1, firstrow, type<int<4>>), composite.ref.elem(v1, lastrow, type<int<4>>), composite.ref.elem(v1, firstcol, type<int<4>>), composite.ref.elem(v1, lastcol, type<int<4>>), 1.0e-1, ref.vector.to.ref.array(composite.ref.elem(v1, arow, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, acol, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, aelt, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, v, type<vector<real<8>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, iv, type<vector<int<4>,14002>>)), 12.0);
        {
            {
                for(decl int<4> v172 = 1 .. composite.ref.elem(v1, lastrow, type<int<4>>)-composite.ref.elem(v1, firstrow, type<int<4>>)+1+1 : 1) {
                    {
                        for(decl int<4> v170 = vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v172) .. vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v172+1) : 1) {
                            vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), v170) := vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), v170)-composite.ref.elem(v1, firstcol, type<int<4>>)+1;
                        };
                        v6 := vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v172)+ceil(vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v172+1)-vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v172)/1)*1;
                    };
                };
                v5 := 1+ceil(composite.ref.elem(v1, lastrow, type<int<4>>)-composite.ref.elem(v1, firstrow, type<int<4>>)+1+1-1/1)*1;
            };
            {
                for(decl int<4> v174 = 1 .. 7000+1+1 : 1) {
                    vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v174) := 1.0;
                };
                v4 := 1+ceil(7000+1+1-1/1)*1;
            };
            v9 := 0.0;
            {
                for(decl int<4> v227 = 1 .. 1+1 : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v175, ref<array<int<4>,1>> v176, ref<array<int<4>,1>> v177, ref<array<real<8>,1>> v178, ref<array<real<8>,1>> v179, ref<array<real<8>,1>> v180, ref<array<real<8>,1>> v181, ref<array<real<8>,1>> v182, ref<array<real<8>,1>> v183, ref<array<real<8>,1>> v184, ref<array<real<8>,1>> v185){
                        decl ref<int<4>> v186 =  var(0);
                        decl ref<int<4>> v187 =  var(0);
                        decl ref<int<4>> v188 =  var(0);
                        decl ref<int<4>> v189 =  var(0);
                        decl ref<int<4>> v190 =  var(25);
                        composite.ref.elem(v175, rho, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v192 = 1 .. composite.ref.elem(v175, naa, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v182, v192) := 0.0;
                                array.ref.elem.1D(v179, v192) := 0.0;
                                array.ref.elem.1D(v183, v192) := array.ref.elem.1D(v178, v192);
                                array.ref.elem.1D(v181, v192) := array.ref.elem.1D(v183, v192);
                                array.ref.elem.1D(v184, v192) := 0.0;
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, naa, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v194 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v175, rho, type<real<8>>) := composite.ref.elem(v175, rho, type<real<8>>)+array.ref.elem.1D(v178, v194)*array.ref.elem.1D(v178, v194);
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v212 = 1 .. v190+1 : 1) {
                                {
                                    composite.ref.elem(v175, rho0, type<real<8>>) := composite.ref.elem(v175, rho, type<real<8>>);
                                    composite.ref.elem(v175, d, type<real<8>>) := 0.0;
                                    composite.ref.elem(v175, rho, type<real<8>>) := 0.0;
                                };
                                {
                                    for(decl int<4> v198 = 1 .. composite.ref.elem(v175, lastrow, type<int<4>>)-composite.ref.elem(v175, firstrow, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v175, sum, type<real<8>>) := 0.0;
                                        {
                                            for(decl int<4> v196 = array.ref.elem.1D(v177, v198) .. array.ref.elem.1D(v177, v198+1) : 1) {
                                                composite.ref.elem(v175, sum, type<real<8>>) := composite.ref.elem(v175, sum, type<real<8>>)+array.ref.elem.1D(v180, v196)*array.ref.elem.1D(v181, array.ref.elem.1D(v176, v196));
                                            };
                                            v188 := array.ref.elem.1D(v177, v198)+ceil(array.ref.elem.1D(v177, v198+1)-array.ref.elem.1D(v177, v198)/1)*1;
                                        };
                                        array.ref.elem.1D(v184, v198) := composite.ref.elem(v175, sum, type<real<8>>);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastrow, type<int<4>>)-composite.ref.elem(v175, firstrow, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v200 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v182, v200) := array.ref.elem.1D(v184, v200);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v202 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v184, v202) := 0.0;
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v204 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v175, d, type<real<8>>) := composite.ref.elem(v175, d, type<real<8>>)+array.ref.elem.1D(v181, v204)*array.ref.elem.1D(v182, v204);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v175, alpha, type<real<8>>) := composite.ref.elem(v175, rho0, type<real<8>>)/composite.ref.elem(v175, d, type<real<8>>);
                                {
                                    for(decl int<4> v206 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v179, v206) := array.ref.elem.1D(v179, v206)+composite.ref.elem(v175, alpha, type<real<8>>)*array.ref.elem.1D(v181, v206);
                                        array.ref.elem.1D(v183, v206) := array.ref.elem.1D(v183, v206)-composite.ref.elem(v175, alpha, type<real<8>>)*array.ref.elem.1D(v182, v206);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v208 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v175, rho, type<real<8>>) := composite.ref.elem(v175, rho, type<real<8>>)+array.ref.elem.1D(v183, v208)*array.ref.elem.1D(v183, v208);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v175, beta, type<real<8>>) := composite.ref.elem(v175, rho, type<real<8>>)/composite.ref.elem(v175, rho0, type<real<8>>);
                                {
                                    for(decl int<4> v210 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v181, v210) := array.ref.elem.1D(v183, v210)+composite.ref.elem(v175, beta, type<real<8>>)*array.ref.elem.1D(v181, v210);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                            };
                            v189 := 1+ceil(v190+1-1/1)*1;
                        };
                        composite.ref.elem(v175, sum, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v216 = 1 .. composite.ref.elem(v175, lastrow, type<int<4>>)-composite.ref.elem(v175, firstrow, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v175, d, type<real<8>>) := 0.0;
                                {
                                    for(decl int<4> v214 = array.ref.elem.1D(v177, v216) .. array.ref.elem.1D(v177, v216+1)-1+1 : 1) {
                                        composite.ref.elem(v175, d, type<real<8>>) := composite.ref.elem(v175, d, type<real<8>>)+array.ref.elem.1D(v180, v214)*array.ref.elem.1D(v179, array.ref.elem.1D(v176, v214));
                                    };
                                    v188 := array.ref.elem.1D(v177, v216)+ceil(array.ref.elem.1D(v177, v216+1)-1+1-array.ref.elem.1D(v177, v216)/1)*1;
                                };
                                array.ref.elem.1D(v184, v216) := composite.ref.elem(v175, d, type<real<8>>);
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, lastrow, type<int<4>>)-composite.ref.elem(v175, firstrow, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v218 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v183, v218) := array.ref.elem.1D(v184, v218);
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v220 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v175, d, type<real<8>>) := array.ref.elem.1D(v178, v220)-array.ref.elem.1D(v183, v220);
                                composite.ref.elem(v175, sum, type<real<8>>) := composite.ref.elem(v175, sum, type<real<8>>)+composite.ref.elem(v175, d, type<real<8>>)*composite.ref.elem(v175, d, type<real<8>>);
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            array.ref.elem.1D(v185, 0) := sqrt(composite.ref.elem(v175, sum, type<real<8>>));
                        };
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v10));
                    {
                        v11 := 0.0;
                        v12 := 0.0;
                    };
                    {
                        for(decl int<4> v223 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            v11 := v11+vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v223)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v223);
                            v12 := v12+vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v223)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v223);
                        };
                        v5 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                    v12 := 1.0/sqrt(v12);
                    {
                        for(decl int<4> v225 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v225) := v12*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v225);
                        };
                        v5 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                };
                v7 := 1+ceil(1+1-1/1)*1;
            };
            {
                for(decl int<4> v229 = 1 .. 7000+1+1 : 1) {
                    vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v229) := 1.0;
                };
                v4 := 1+ceil(7000+1+1-1/1)*1;
            };
            v9 := 0.0;
        };
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v230, int<4> v231){
            vector.ref.elem(composite.ref.elem(v230, elapsed, type<vector<real<8>,64>>), v231) := 0.0;
        }(v1, 1);
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v233, int<4> v234){
            vector.ref.elem(composite.ref.elem(v233, start, type<vector<real<8>,64>>), v234) := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v235){
                decl ref<real<8>> v236 =  var(0.0);
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v237, ref<array<real<8>,1>> v238){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v239 =  var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>));
                    gettimeofday(scalar.to.array(v239),  var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>)));
                    if(composite.ref.elem(v237, sec, type<int<4>>)<0) composite.ref.elem(v237, sec, type<int<4>>) := composite.ref.elem(v239, tv_sec, type<int<8>>) else { };
                    array.ref.elem.1D(v238, 0) := composite.ref.elem(v239, tv_sec, type<int<8>>)-composite.ref.elem(v237, sec, type<int<4>>)+1.0e-6*composite.ref.elem(v239, tv_usec, type<int<8>>);
                }(v235, scalar.to.array(v236));
                return v236;
            }(v233);
        }(v1, 1);
        {
            {
                for(decl int<4> v248 = 1 .. 15+1 : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v175, ref<array<int<4>,1>> v176, ref<array<int<4>,1>> v177, ref<array<real<8>,1>> v178, ref<array<real<8>,1>> v179, ref<array<real<8>,1>> v180, ref<array<real<8>,1>> v181, ref<array<real<8>,1>> v182, ref<array<real<8>,1>> v183, ref<array<real<8>,1>> v184, ref<array<real<8>,1>> v185){
                        decl ref<int<4>> v186 =  var(0);
                        decl ref<int<4>> v187 =  var(0);
                        decl ref<int<4>> v188 =  var(0);
                        decl ref<int<4>> v189 =  var(0);
                        decl ref<int<4>> v190 =  var(25);
                        composite.ref.elem(v175, rho, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v192 = 1 .. composite.ref.elem(v175, naa, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v182, v192) := 0.0;
                                array.ref.elem.1D(v179, v192) := 0.0;
                                array.ref.elem.1D(v183, v192) := array.ref.elem.1D(v178, v192);
                                array.ref.elem.1D(v181, v192) := array.ref.elem.1D(v183, v192);
                                array.ref.elem.1D(v184, v192) := 0.0;
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, naa, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v194 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v175, rho, type<real<8>>) := composite.ref.elem(v175, rho, type<real<8>>)+array.ref.elem.1D(v178, v194)*array.ref.elem.1D(v178, v194);
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v212 = 1 .. v190+1 : 1) {
                                {
                                    composite.ref.elem(v175, rho0, type<real<8>>) := composite.ref.elem(v175, rho, type<real<8>>);
                                    composite.ref.elem(v175, d, type<real<8>>) := 0.0;
                                    composite.ref.elem(v175, rho, type<real<8>>) := 0.0;
                                };
                                {
                                    for(decl int<4> v198 = 1 .. composite.ref.elem(v175, lastrow, type<int<4>>)-composite.ref.elem(v175, firstrow, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v175, sum, type<real<8>>) := 0.0;
                                        {
                                            for(decl int<4> v196 = array.ref.elem.1D(v177, v198) .. array.ref.elem.1D(v177, v198+1) : 1) {
                                                composite.ref.elem(v175, sum, type<real<8>>) := composite.ref.elem(v175, sum, type<real<8>>)+array.ref.elem.1D(v180, v196)*array.ref.elem.1D(v181, array.ref.elem.1D(v176, v196));
                                            };
                                            v188 := array.ref.elem.1D(v177, v198)+ceil(array.ref.elem.1D(v177, v198+1)-array.ref.elem.1D(v177, v198)/1)*1;
                                        };
                                        array.ref.elem.1D(v184, v198) := composite.ref.elem(v175, sum, type<real<8>>);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastrow, type<int<4>>)-composite.ref.elem(v175, firstrow, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v200 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v182, v200) := array.ref.elem.1D(v184, v200);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v202 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v184, v202) := 0.0;
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v204 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v175, d, type<real<8>>) := composite.ref.elem(v175, d, type<real<8>>)+array.ref.elem.1D(v181, v204)*array.ref.elem.1D(v182, v204);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v175, alpha, type<real<8>>) := composite.ref.elem(v175, rho0, type<real<8>>)/composite.ref.elem(v175, d, type<real<8>>);
                                {
                                    for(decl int<4> v206 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v179, v206) := array.ref.elem.1D(v179, v206)+composite.ref.elem(v175, alpha, type<real<8>>)*array.ref.elem.1D(v181, v206);
                                        array.ref.elem.1D(v183, v206) := array.ref.elem.1D(v183, v206)-composite.ref.elem(v175, alpha, type<real<8>>)*array.ref.elem.1D(v182, v206);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v208 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v175, rho, type<real<8>>) := composite.ref.elem(v175, rho, type<real<8>>)+array.ref.elem.1D(v183, v208)*array.ref.elem.1D(v183, v208);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v175, beta, type<real<8>>) := composite.ref.elem(v175, rho, type<real<8>>)/composite.ref.elem(v175, rho0, type<real<8>>);
                                {
                                    for(decl int<4> v210 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v181, v210) := array.ref.elem.1D(v183, v210)+composite.ref.elem(v175, beta, type<real<8>>)*array.ref.elem.1D(v181, v210);
                                    };
                                    v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                            };
                            v189 := 1+ceil(v190+1-1/1)*1;
                        };
                        composite.ref.elem(v175, sum, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v216 = 1 .. composite.ref.elem(v175, lastrow, type<int<4>>)-composite.ref.elem(v175, firstrow, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v175, d, type<real<8>>) := 0.0;
                                {
                                    for(decl int<4> v214 = array.ref.elem.1D(v177, v216) .. array.ref.elem.1D(v177, v216+1)-1+1 : 1) {
                                        composite.ref.elem(v175, d, type<real<8>>) := composite.ref.elem(v175, d, type<real<8>>)+array.ref.elem.1D(v180, v214)*array.ref.elem.1D(v179, array.ref.elem.1D(v176, v214));
                                    };
                                    v188 := array.ref.elem.1D(v177, v216)+ceil(array.ref.elem.1D(v177, v216+1)-1+1-array.ref.elem.1D(v177, v216)/1)*1;
                                };
                                array.ref.elem.1D(v184, v216) := composite.ref.elem(v175, d, type<real<8>>);
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, lastrow, type<int<4>>)-composite.ref.elem(v175, firstrow, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v218 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v183, v218) := array.ref.elem.1D(v184, v218);
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v220 = 1 .. composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v175, d, type<real<8>>) := array.ref.elem.1D(v178, v220)-array.ref.elem.1D(v183, v220);
                                composite.ref.elem(v175, sum, type<real<8>>) := composite.ref.elem(v175, sum, type<real<8>>)+composite.ref.elem(v175, d, type<real<8>>)*composite.ref.elem(v175, d, type<real<8>>);
                            };
                            v187 := 1+ceil(composite.ref.elem(v175, lastcol, type<int<4>>)-composite.ref.elem(v175, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            array.ref.elem.1D(v185, 0) := sqrt(composite.ref.elem(v175, sum, type<real<8>>));
                        };
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v10));
                    {
                        v11 := 0.0;
                        v12 := 0.0;
                    };
                    {
                        for(decl int<4> v244 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            v11 := v11+vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v244)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v244);
                            v12 := v12+vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v244)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v244);
                        };
                        v5 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                    {
                        v12 := 1.0/sqrt(v12);
                        v9 := 12.0+1.0/v11;
                    };
                    {
                        if(v248==1) {
                            printf(string.as.char.pointer("   iteration           ||r||                 zeta\n"), varlist.pack(()));
                        } else { };
                        printf(string.as.char.pointer("    %5d       %20.14e%20.13e\n"), varlist.pack((v248, v10, v9)));
                    };
                    {
                        for(decl int<4> v246 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v246) := v12*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v246);
                        };
                        v5 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                };
                v7 := 1+ceil(15+1-1/1)*1;
            };
        };
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v249, int<4> v250){
            decl ref<real<8>> v251 =  var(0.0);
            decl ref<real<8>> v252 =  var(0.0);
            v252 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v235){
                decl ref<real<8>> v236 =  var(0.0);
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v237, ref<array<real<8>,1>> v238){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v239 =  var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>));
                    gettimeofday(scalar.to.array(v239),  var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>)));
                    if(composite.ref.elem(v237, sec, type<int<4>>)<0) composite.ref.elem(v237, sec, type<int<4>>) := composite.ref.elem(v239, tv_sec, type<int<8>>) else { };
                    array.ref.elem.1D(v238, 0) := composite.ref.elem(v239, tv_sec, type<int<8>>)-composite.ref.elem(v237, sec, type<int<4>>)+1.0e-6*composite.ref.elem(v239, tv_usec, type<int<8>>);
                }(v235, scalar.to.array(v236));
                return v236;
            }(v249);
            v251 := v252-vector.ref.elem(composite.ref.elem(v249, start, type<vector<real<8>,64>>), v250);
            vector.ref.elem(composite.ref.elem(v249, elapsed, type<vector<real<8>,64>>), v250) := vector.ref.elem(composite.ref.elem(v249, elapsed, type<vector<real<8>,64>>), v250)+v251;
        }(v1, 1);
        v13 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v254, int<4> v255){
            return vector.ref.elem(composite.ref.elem(v254, elapsed, type<vector<real<8>,64>>), v255);
        }(v1, 1);
        printf(string.as.char.pointer(" Benchmark completed\n"), varlist.pack(()));
        v18 := 1.0e-10;
        if(v15!='U') {
            if(fabs(v9-v17)<=v18) {
                v16 := 1;
                printf(string.as.char.pointer(" VERIFICATION SUCCESSFUL\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta is    %20.12e\n"), varlist.pack((v9)));
                printf(string.as.char.pointer(" Error is   %20.12e\n"), varlist.pack((v9-v17)));
            } else {
                v16 := 0;
                printf(string.as.char.pointer(" VERIFICATION FAILED\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta                %20.12e\n"), varlist.pack((v9)));
                printf(string.as.char.pointer(" The correct zeta is %20.12e\n"), varlist.pack((v17)));
            };
        } else {
            v16 := 0;
            printf(string.as.char.pointer(" Problem size unknown\n"), varlist.pack(()));
            printf(string.as.char.pointer(" NO VERIFICATION PERFORMED\n"), varlist.pack(()));
        };
        if(real.ne(v13, 0.0)) {
            v14 := 2.0*15*7000*3.0+8*8+1+25.0*5.0+8*8+1+3.0/v13/1000000.0;
        } else {
            v14 := 0.0;
        };
        fun(ref<array<char,1>> v257, char v258, int<4> v259, int<4> v260, int<4> v261, int<4> v262, int<4> v263, real<8> v264, real<8> v265, ref<array<char,1>> v266, int<4> v267, ref<array<char,1>> v268, ref<array<char,1>> v269, ref<array<char,1>> v270, ref<array<char,1>> v271, ref<array<char,1>> v272, ref<array<char,1>> v273, ref<array<char,1>> v274, ref<array<char,1>> v275, ref<array<char,1>> v276){
            decl ref<array<char,1>> v277 = string.as.char.pointer("1000");
            printf(string.as.char.pointer("\n\n %s Benchmark Completed\n"), varlist.pack((v257)));
            printf(string.as.char.pointer(" Class           =                        %c\n"), varlist.pack((v258)));
            if(v260==0&&bind(){fun(int<4> v278)return v278==0(v261)}) printf(string.as.char.pointer(" Size            =             %12d\n"), varlist.pack((v259))) else printf(string.as.char.pointer(" Size            =              %3dx%3dx%3d\n"), varlist.pack((v259, v260, v261)));
            printf(string.as.char.pointer(" Iterations      =             %12d\n"), varlist.pack((v262)));
            printf(string.as.char.pointer(" Threads         =             %12d\n"), varlist.pack((v263)));
            printf(string.as.char.pointer(" Time in seconds =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Mop/s total     =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Operation type  = %24s\n"), varlist.pack((v266)));
            if(int.ne(v267, 0)) printf(string.as.char.pointer(" Verification    =               SUCCESSFUL\n"), varlist.pack(())) else printf(string.as.char.pointer(" Verification    =             UNSUCCESSFUL\n"), varlist.pack(()));
            printf(string.as.char.pointer(" Version         =             %12s\n"), varlist.pack((v268)));
            printf(string.as.char.pointer(" Compile date    =             %12s\n"), varlist.pack((v269)));
            printf(string.as.char.pointer("\n Compile options:\n"), varlist.pack(()));
            printf(string.as.char.pointer("    CC           = %s\n"), varlist.pack((v270)));
            printf(string.as.char.pointer("    CLINK        = %s\n"), varlist.pack((v271)));
            printf(string.as.char.pointer("    C_LIB        = %s\n"), varlist.pack((v272)));
            printf(string.as.char.pointer("    C_INC        = %s\n"), varlist.pack((v273)));
            printf(string.as.char.pointer("    CFLAGS       = %s\n"), varlist.pack((v274)));
            printf(string.as.char.pointer("    CLINKFLAGS   = %s\n"), varlist.pack((v275)));
            printf(string.as.char.pointer("    RAND         = %s\n"), varlist.pack((v276)));
        }(string.as.char.pointer("CG"), v15, 7000, 0, 0, 15, v8, v13, v14, string.as.char.pointer("          floating point"), v16, string.as.char.pointer("2.3"), string.as.char.pointer("02 Dec 2010"), string.as.char.pointer("cc"), string.as.char.pointer("cc"), string.as.char.pointer("-lm"), string.as.char.pointer("-I../common"), string.as.char.pointer("-O3 "), string.as.char.pointer("-lm"), string.as.char.pointer("randdp"));
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, ref<array<array<char,1>,1>> v3){
        decl ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v1 = ( new(struct{naa:=0, nzz:=0, firstrow:=0, lastrow:=0, firstcol:=0, lastcol:=0, colidx:=vector.init.uniform(0, 637001), rowstr:=vector.init.uniform(0, 7002), iv:=vector.init.uniform(0, 14002), arow:=vector.init.uniform(0, 637001), acol:=vector.init.uniform(0, 637001), v:=vector.init.uniform(0.0, 7002), aelt:=vector.init.uniform(0.0, 637001), a:=vector.init.uniform(0.0, 637001), x:=vector.init.uniform(0.0, 7003), z:=vector.init.uniform(0.0, 7003), p:=vector.init.uniform(0.0, 7003), q:=vector.init.uniform(0.0, 7003), r:=vector.init.uniform(0.0, 7003), w:=vector.init.uniform(0.0, 7003), amult:=0.0, tran:=0.0, d:=0.0, sum:=0.0, rho:=0.0, rho0:=0.0, alpha:=0.0, beta:=0.0, start:=vector.init.uniform(0.0, 64), elapsed:=vector.init.uniform(0.0, 64), sec:=(CAST<int<4>>(0)-1)}));
        decl ref<int<4>> v4 = ( var(0));
        decl ref<int<4>> v5 = ( var(0));
        decl ref<int<4>> v6 = ( var(0));
        decl ref<int<4>> v7 = ( var(0));
        decl ref<int<4>> v8 = ( var(1));
        decl ref<real<8>> v9 = ( var(0.0));
        decl ref<real<8>> v10 = ( var(0.0));
        decl ref<real<8>> v11 = ( var(0.0));
        decl ref<real<8>> v12 = ( var(0.0));
        decl ref<real<8>> v13 = ( var(0.0));
        decl ref<real<8>> v14 = ( var(0.0));
        decl ref<char> v15 = ( var('\0'));
        decl ref<int<4>> v16 = ( var(0));
        decl ref<real<8>> v17 = ( var(0.0));
        decl ref<real<8>> v18 = ( var(0.0));
        (composite.ref.elem(v1, firstrow, type<int<4>>) := 1);
        (composite.ref.elem(v1, lastrow, type<int<4>>) := 7000);
        (composite.ref.elem(v1, firstcol, type<int<4>>) := 1);
        (composite.ref.elem(v1, lastcol, type<int<4>>) := 7000);
        if(((((7000==1400)&&bind(){fun()return (8==7)()})&&bind(){fun()return (15==15)()})&&bind(){fun()return (12.0==10.0)()})) {
            (v15 := 'S');
            (v17 := 8.5971775078648);
        } else if(((((7000==7000)&&bind(){fun()return (8==8)()})&&bind(){fun()return (15==15)()})&&bind(){fun()return (12.0==12.0)()})) {
            (v15 := 'W');
            (v17 := 10.362595087124);
        } else if(((((7000==14000)&&bind(){fun()return (8==11)()})&&bind(){fun()return (15==15)()})&&bind(){fun()return (12.0==20.0)()})) {
            (v15 := 'A');
            (v17 := 17.130235054029);
        } else if(((((7000==75000)&&bind(){fun()return (8==13)()})&&bind(){fun()return (15==75)()})&&bind(){fun()return (12.0==60.0)()})) {
            (v15 := 'B');
            (v17 := 22.712745482631);
        } else if(((((7000==150000)&&bind(){fun()return (8==15)()})&&bind(){fun()return (15==75)()})&&bind(){fun()return (12.0==110.0)()})) {
            (v15 := 'C');
            (v17 := 28.973605592845);
        } else {
            (v15 := 'U');
        };
        printf(string.as.char.pointer("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - CG Benchmark\n"), varlist.pack(()));
        printf(string.as.char.pointer(" Size: %10d\n"), varlist.pack((7000)));
        printf(string.as.char.pointer(" Iterations: %5d\n"), varlist.pack((15)));
        (composite.ref.elem(v1, naa, type<int<4>>) := 7000);
        (composite.ref.elem(v1, nzz, type<int<4>>) := (((7000*(8+1))*(8+1))+(7000*(8+2))));
        (composite.ref.elem(v1, tran, type<real<8>>) := 314159265.0);
        (composite.ref.elem(v1, amult, type<real<8>>) := 1220703125.0);
        (v9 := fun(ref<array<real<8>,1>> v34, real<8> v35){
            decl ref<real<8>> v36 = ( var(0.0));
            decl ref<real<8>> v37 = ( var(0.0));
            decl ref<real<8>> v38 = ( var(0.0));
            decl ref<real<8>> v39 = ( var(0.0));
            decl ref<real<8>> v40 = ( var(0.0));
            decl ref<real<8>> v41 = ( var(0.0));
            decl ref<real<8>> v42 = ( var(0.0));
            decl ref<real<8>> v43 = ( var(0.0));
            decl ref<real<8>> v44 = ( var(0.0));
            (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v35));
            (v40 := CAST<real<8>>(real.to.int(( *v36), 4)));
            (v41 := (v35-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v40))));
            (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *array.ref.elem.1D(v34, 0))));
            (v42 := CAST<real<8>>(real.to.int(( *v36), 4)));
            (v43 := (( *array.ref.elem.1D(v34, 0))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v42))));
            (v36 := ((( *v40)*( *v43))+(( *v41)*( *v42))));
            (v37 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v36)))));
            (v44 := (( *v36)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v37))));
            (v38 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v44))+(( *v41)*( *v43))));
            (v39 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v38)))));
            (array.ref.elem.1D(v34, 0) := (( *v38)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v39))));
            return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *array.ref.elem.1D(v34, 0)));
        }(scalar.to.array(composite.ref.elem(v1, tran, type<real<8>>)), ( *composite.ref.elem(v1, amult, type<real<8>>))));
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v46, int<4> v47, int<4> v48, ref<array<real<8>,1>> v49, ref<array<int<4>,1>> v50, ref<array<int<4>,1>> v51, int<4> v52, int<4> v53, int<4> v54, int<4> v55, int<4> v56, real<8> v57, ref<array<int<4>,1>> v58, ref<array<int<4>,1>> v59, ref<array<real<8>,1>> v60, ref<array<real<8>,1>> v61, ref<array<int<4>,1>> v62, real<8> v63){
            decl ref<int<4>> v64 = ( var(0));
            decl ref<int<4>> v65 = ( var(0));
            decl ref<int<4>> v66 = ( var(0));
            decl ref<int<4>> v67 = ( var(0));
            decl ref<int<4>> v68 = ( var(0));
            decl ref<int<4>> v69 = ( var(0));
            decl ref<int<4>> v70 = ( var(0));
            decl ref<real<8>> v71 = ( var(0.0));
            decl ref<real<8>> v72 = ( var(0.0));
            decl ref<real<8>> v73 = ( var(0.0));
            decl ref<int<4>> v74 = ( var(0));
            (v71 := 1.0);
            (v72 := pow(v57, (1.0/CAST<real<8>>(v47))));
            (v65 := 0);
            {
                <m id=1>for(decl int<4> v76 = 1 .. (v47+1) : 1) {
                    (array.ref.elem.1D(v50, CAST<uint<4>>((v47+v76))) := 0);
                }</m>;
                (v64 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v47+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                for(decl int<4> v119 = 1 .. (v47+1) : 1) {
                    (v70 := v52);
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v77, int<4> v78, int<4> v79, ref<array<real<8>,1>> v80, ref<array<int<4>,1>> v81, ref<array<int<4>,1>> v82, ref<array<int<4>,1>> v83){
                        decl ref<int<4>> v84 = ( var(0));
                        decl ref<int<4>> v85 = ( var(0));
                        decl ref<int<4>> v86 = ( var(0));
                        decl ref<int<4>> v87 = ( var(0));
                        decl ref<int<4>> v88 = ( var(0));
                        decl ref<real<8>> v89 = ( var(0.0));
                        decl ref<real<8>> v90 = ( var(0.0));
                        (v86 := 0);
                        (v85 := 0);
                        (v84 := 1);
                        {
                            (v84 := (2*( *v84)));
                            while((( *v84)<v78)) {
                                (v84 := (2*( *v84)));
                            };
                        };
                        while((( *v86)<v79)) {
                            (v89 := fun(ref<array<real<8>,1>> v34, real<8> v35){
                                decl ref<real<8>> v36 = ( var(0.0));
                                decl ref<real<8>> v37 = ( var(0.0));
                                decl ref<real<8>> v38 = ( var(0.0));
                                decl ref<real<8>> v39 = ( var(0.0));
                                decl ref<real<8>> v40 = ( var(0.0));
                                decl ref<real<8>> v41 = ( var(0.0));
                                decl ref<real<8>> v42 = ( var(0.0));
                                decl ref<real<8>> v43 = ( var(0.0));
                                decl ref<real<8>> v44 = ( var(0.0));
                                (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v35));
                                (v40 := CAST<real<8>>(real.to.int(( *v36), 4)));
                                (v41 := (v35-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v40))));
                                (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *array.ref.elem.1D(v34, 0))));
                                (v42 := CAST<real<8>>(real.to.int(( *v36), 4)));
                                (v43 := (( *array.ref.elem.1D(v34, 0))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v42))));
                                (v36 := ((( *v40)*( *v43))+(( *v41)*( *v42))));
                                (v37 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v36)))));
                                (v44 := (( *v36)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v37))));
                                (v38 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v44))+(( *v41)*( *v43))));
                                (v39 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v38)))));
                                (array.ref.elem.1D(v34, 0) := (( *v38)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v39))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *array.ref.elem.1D(v34, 0)));
                            }(scalar.to.array(composite.ref.elem(v77, tran, type<real<8>>)), ( *composite.ref.elem(v77, amult, type<real<8>>))));
                            (v90 := fun(ref<array<real<8>,1>> v34, real<8> v35){
                                decl ref<real<8>> v36 = ( var(0.0));
                                decl ref<real<8>> v37 = ( var(0.0));
                                decl ref<real<8>> v38 = ( var(0.0));
                                decl ref<real<8>> v39 = ( var(0.0));
                                decl ref<real<8>> v40 = ( var(0.0));
                                decl ref<real<8>> v41 = ( var(0.0));
                                decl ref<real<8>> v42 = ( var(0.0));
                                decl ref<real<8>> v43 = ( var(0.0));
                                decl ref<real<8>> v44 = ( var(0.0));
                                (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v35));
                                (v40 := CAST<real<8>>(real.to.int(( *v36), 4)));
                                (v41 := (v35-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v40))));
                                (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *array.ref.elem.1D(v34, 0))));
                                (v42 := CAST<real<8>>(real.to.int(( *v36), 4)));
                                (v43 := (( *array.ref.elem.1D(v34, 0))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v42))));
                                (v36 := ((( *v40)*( *v43))+(( *v41)*( *v42))));
                                (v37 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v36)))));
                                (v44 := (( *v36)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v37))));
                                (v38 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v44))+(( *v41)*( *v43))));
                                (v39 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v38)))));
                                (array.ref.elem.1D(v34, 0) := (( *v38)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v39))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *array.ref.elem.1D(v34, 0)));
                            }(scalar.to.array(composite.ref.elem(v77, tran, type<real<8>>)), ( *composite.ref.elem(v77, amult, type<real<8>>))));
                            (v88 := (fun(real<8> v91, int<4> v92){
                                return CAST<int<4>>((CAST<real<8>>(v92)*v91));
                            }(( *v90), ( *v84))+1));
                            if((( *v88)>v78)) continue else { };
                            if((( *array.ref.elem.1D(v83, CAST<uint<4>>(( *v88))))==0)) {
                                (array.ref.elem.1D(v83, CAST<uint<4>>(( *v88))) := 1);
                                (v85 := (( *v85)+1));
                                (array.ref.elem.1D(v82, CAST<uint<4>>(( *v85))) := ( *v88));
                                (v86 := (( *v86)+1));
                                (array.ref.elem.1D(v80, CAST<uint<4>>(( *v86))) := ( *v89));
                                (array.ref.elem.1D(v81, CAST<uint<4>>(( *v86))) := ( *v88));
                            } else { };
                        };
                        {
                            for(decl int<4> v95 = 1 .. (( *v85)+1) : 1) {
                                (v88 := ( *array.ref.elem.1D(v82, CAST<uint<4>>(v95))));
                                (array.ref.elem.1D(v83, CAST<uint<4>>(( *v88))) := 0);
                            };
                            (v87 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v85)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                    }(v46, v47, ( *v70), v61, v62, scalar.to.array(array.ref.elem.1D(v50, CAST<uint<4>>(0))), scalar.to.array(array.ref.elem.1D(v50, CAST<uint<4>>(v47))));
                    fun(int<4> v97, ref<array<real<8>,1>> v98, ref<array<int<4>,1>> v99, ref<array<int<4>,1>> v100, int<4> v101, real<8> v102){
                        decl ref<int<4>> v103 = ( var(0));
                        decl ref<int<4>> v104 = ( var(0));
                        (v104 := 0);
                        {
                            for(decl int<4> v106 = 1 .. (( *array.ref.elem.1D(v100, 0))+1) : 1) {
                                if((( *array.ref.elem.1D(v99, CAST<uint<4>>(v106)))==v101)) {
                                    (array.ref.elem.1D(v98, CAST<uint<4>>(v106)) := v102);
                                    (v104 := 1);
                                } else { };
                            };
                            (v103 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *array.ref.elem.1D(v100, 0))+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        if((( *v104)==0)) {
                            (array.ref.elem.1D(v100, 0) := (( *array.ref.elem.1D(v100, 0))+1));
                            (array.ref.elem.1D(v98, CAST<uint<4>>(( *array.ref.elem.1D(v100, 0)))) := v102);
                            (array.ref.elem.1D(v99, CAST<uint<4>>(( *array.ref.elem.1D(v100, 0)))) := v101);
                        } else { };
                    }(v47, v61, v62, scalar.to.array(v70), v119, 0.5);
                    {
                        for(decl int<4> v117 = 1 .. (( *v70)+1) : 1) {
                            (v74 := ( *array.ref.elem.1D(v62, CAST<uint<4>>(v117))));
                            if(((( *v74)>=v55)&&bind(){fun(int<4> v113, ref<int<4>> v114)return (( *v114)<=v113)(v56, v74)})) {
                                (v73 := (( *v71)*( *array.ref.elem.1D(v61, CAST<uint<4>>(v117)))));
                                {
                                    for(decl int<4> v112 = 1 .. (( *v70)+1) : 1) {
                                        (v69 := ( *array.ref.elem.1D(v62, CAST<uint<4>>(v112))));
                                        if(((( *v69)>=v53)&&bind(){fun(int<4> v108, ref<int<4>> v109)return (( *v109)<=v108)(v54, v69)})) {
                                            (v65 := (( *v65)+1));
                                            if((( *v65)>v48)) {
                                                printf(string.as.char.pointer("Space for matrix elements exceeded in"), varlist.pack(()));
                                                printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((( *v65), v48)));
                                                printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((v119)));
                                                exit(1);
                                            } else { };
                                            (array.ref.elem.1D(v59, CAST<uint<4>>(( *v65))) := ( *v74));
                                            (array.ref.elem.1D(v58, CAST<uint<4>>(( *v65))) := ( *v69));
                                            (array.ref.elem.1D(v60, CAST<uint<4>>(( *v65))) := (( *array.ref.elem.1D(v61, CAST<uint<4>>(v112)))*( *v73)));
                                        } else { };
                                    };
                                    (v68 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v70)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            } else { };
                        };
                        (v67 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v70)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    (v71 := (( *v71)*( *v72)));
                };
                (v66 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v47+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                for(decl int<4> v124 = v53 .. (v54+1) : 1) {
                    if(((v124>=v55)&&bind(){fun(int<4> v120, ref<int<4>> v121)return (( *v121)<=v120)(v56, ( var(v124)))})) {
                        (v66 := (v47+v124));
                        (v65 := (( *v65)+1));
                        if((( *v65)>v48)) {
                            printf(string.as.char.pointer("Space for matrix elements exceeded in makea\n"), varlist.pack(()));
                            printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((( *v65), v48)));
                            printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((( *v66))));
                            exit(1);
                        } else { };
                        (array.ref.elem.1D(v59, CAST<uint<4>>(( *v65))) := v124);
                        (array.ref.elem.1D(v58, CAST<uint<4>>(( *v65))) := v124);
                        (array.ref.elem.1D(v60, CAST<uint<4>>(( *v65))) := (v57-v63));
                    } else { };
                };
                (v64 := (v53+(CAST<int<4>>(ceil((CAST<real<8>>(((v54+1)-v53))/CAST<real<8>>(1))))*1)));
            };
            fun(ref<array<real<8>,1>> v125, ref<array<int<4>,1>> v126, ref<array<int<4>,1>> v127, int<4> v128, ref<array<int<4>,1>> v129, ref<array<int<4>,1>> v130, ref<array<real<8>,1>> v131, int<4> v132, int<4> v133, ref<array<real<8>,1>> v134, ref<array<int<4>,1>> v135, ref<array<int<4>,1>> v136, int<4> v137){
                decl ref<int<4>> v138 = ( var(0));
                decl ref<int<4>> v139 = ( var(0));
                decl ref<int<4>> v140 = ( var(0));
                decl ref<int<4>> v141 = ( var(0));
                decl ref<int<4>> v142 = ( var(0));
                decl ref<int<4>> v143 = ( var(0));
                decl ref<int<4>> v144 = ( var(0));
                decl ref<real<8>> v145 = ( var(0.0));
                (v138 := ((v133-v132)+1));
                {
                    <m id=2>for(decl int<4> v147 = 1 .. (v128+1) : 1) {
                        (array.ref.elem.1D(v127, CAST<uint<4>>(v147)) := 0);
                        (array.ref.elem.1D(v135, CAST<uint<4>>(v147)) := 0);
                    }</m>;
                    (v140 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v128+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (array.ref.elem.1D(v127, CAST<uint<4>>((v128+1))) := 0);
                {
                    for(decl int<4> v149 = 1 .. (v137+1) : 1) {
                        (v140 := (((( *array.ref.elem.1D(v129, CAST<uint<4>>(v149)))-v132)+1)+1));
                        (array.ref.elem.1D(v127, CAST<uint<4>>(( *v140))) := (( *array.ref.elem.1D(v127, CAST<uint<4>>(( *v140))))+1));
                    };
                    (v142 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v137+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (array.ref.elem.1D(v127, CAST<uint<4>>(1)) := 1);
                {
                    for(decl int<4> v151 = 2 .. ((( *v138)+1)+1) : 1) {
                        (array.ref.elem.1D(v127, CAST<uint<4>>(v151)) := (( *array.ref.elem.1D(v127, CAST<uint<4>>(v151)))+( *array.ref.elem.1D(v127, CAST<uint<4>>((v151-1))))));
                    };
                    (v140 := (2+(CAST<int<4>>(ceil((CAST<real<8>>((((( *v138)+1)+1)-2))/CAST<real<8>>(1))))*1)));
                };
                {
                    for(decl int<4> v153 = 1 .. (v137+1) : 1) {
                        (v140 := ((( *array.ref.elem.1D(v129, CAST<uint<4>>(v153)))-v132)+1));
                        (v143 := ( *array.ref.elem.1D(v127, CAST<uint<4>>(( *v140)))));
                        (array.ref.elem.1D(v125, CAST<uint<4>>(( *v143))) := ( *array.ref.elem.1D(v131, CAST<uint<4>>(v153))));
                        (array.ref.elem.1D(v126, CAST<uint<4>>(( *v143))) := ( *array.ref.elem.1D(v130, CAST<uint<4>>(v153))));
                        (array.ref.elem.1D(v127, CAST<uint<4>>(( *v140))) := (( *array.ref.elem.1D(v127, CAST<uint<4>>(( *v140))))+1));
                    };
                    (v142 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v137+1)-1))/CAST<real<8>>(1))))*1)));
                };
                {
                    for(decl int<4> v155 = (CAST<int<4>>(0)-( *v138)) .. ((CAST<int<4>>(0)-1)+1) : 1) {
                        (array.ref.elem.1D(v127, CAST<uint<4>>(((CAST<int<4>>(0)-v155)+1))) := ( *array.ref.elem.1D(v127, CAST<uint<4>>((CAST<int<4>>(0)-v155)))));
                    };
                    (v140 := (( *v138)+(CAST<int<4>>(ceil((CAST<real<8>>((((CAST<int<4>>(0)-1)+1)-( *v138)))/CAST<real<8>>(1))))*1)));
                };
                (array.ref.elem.1D(v127, CAST<uint<4>>(1)) := 1);
                (v142 := 0);
                {
                    <m id=3>for(decl int<4> v157 = 1 .. (v128+1) : 1) {
                        (array.ref.elem.1D(v134, CAST<uint<4>>(v157)) := 0.0);
                        (array.ref.elem.1D(v135, CAST<uint<4>>(v157)) := 0);
                    }</m>;
                    (v139 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v128+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (v141 := ( *array.ref.elem.1D(v127, CAST<uint<4>>(1))));
                {
                    for(decl int<4> v166 = 1 .. (( *v138)+1) : 1) {
                        (v144 := 0);
                        {
                            for(decl int<4> v162 = ( *v141) .. ( *array.ref.elem.1D(v127, CAST<uint<4>>((v166+1)))) : 1) {
                                (v139 := ( *array.ref.elem.1D(v126, CAST<uint<4>>(v162))));
                                (array.ref.elem.1D(v134, CAST<uint<4>>(( *v139))) := (( *array.ref.elem.1D(v134, CAST<uint<4>>(( *v139))))+( *array.ref.elem.1D(v125, CAST<uint<4>>(v162)))));
                                if(((( *array.ref.elem.1D(v135, CAST<uint<4>>(( *v139))))==0)&&bind(){fun(ref<array<real<8>,1>> v158, ref<int<4>> v159)return real.ne(( *array.ref.elem.1D(v158, CAST<uint<4>>(( *v159)))), 0.0)(v134, v139)})) {
                                    (array.ref.elem.1D(v135, CAST<uint<4>>(( *v139))) := 1);
                                    (v144 := (( *v144)+1));
                                    (array.ref.elem.1D(v136, CAST<uint<4>>(( *v144))) := ( *v139));
                                } else { };
                            };
                            (v143 := (( *v141)+(CAST<int<4>>(ceil((CAST<real<8>>((( *array.ref.elem.1D(v127, CAST<uint<4>>((v166+1))))-( *v141)))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl int<4> v164 = 1 .. (( *v144)+1) : 1) {
                                (v139 := ( *array.ref.elem.1D(v136, CAST<uint<4>>(v164))));
                                (array.ref.elem.1D(v135, CAST<uint<4>>(( *v139))) := 0);
                                (v145 := ( *array.ref.elem.1D(v134, CAST<uint<4>>(( *v139)))));
                                (array.ref.elem.1D(v134, CAST<uint<4>>(( *v139))) := 0.0);
                                if(real.ne(( *v145), 0.0)) {
                                    (v142 := (( *v142)+1));
                                    (array.ref.elem.1D(v125, CAST<uint<4>>(( *v142))) := ( *v145));
                                    (array.ref.elem.1D(v126, CAST<uint<4>>(( *v142))) := ( *v139));
                                } else { };
                            };
                            (v143 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v144)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        (v141 := ( *array.ref.elem.1D(v127, CAST<uint<4>>((v166+1)))));
                        (array.ref.elem.1D(v127, CAST<uint<4>>((v166+1))) := (( *v142)+( *array.ref.elem.1D(v127, CAST<uint<4>>(1)))));
                    };
                    (v140 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v138)+1)-1))/CAST<real<8>>(1))))*1)));
                };
            }(v49, v50, v51, v47, v58, v59, v60, v53, v54, v61, scalar.to.array(array.ref.elem.1D(v62, CAST<uint<4>>(0))), scalar.to.array(array.ref.elem.1D(v62, CAST<uint<4>>(v47))), ( *v65));
        }(v1, ( *composite.ref.elem(v1, naa, type<int<4>>)), ( *composite.ref.elem(v1, nzz, type<int<4>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), 8, ( *composite.ref.elem(v1, firstrow, type<int<4>>)), ( *composite.ref.elem(v1, lastrow, type<int<4>>)), ( *composite.ref.elem(v1, firstcol, type<int<4>>)), ( *composite.ref.elem(v1, lastcol, type<int<4>>)), 1.0e-1, ref.vector.to.ref.array(composite.ref.elem(v1, arow, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, acol, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, aelt, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, v, type<vector<real<8>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, iv, type<vector<int<4>,14002>>)), 12.0);
        <m id=24>{
            {
                <m id=4>for(decl int<4> v172 = 1 .. (((( *composite.ref.elem(v1, lastrow, type<int<4>>))-( *composite.ref.elem(v1, firstrow, type<int<4>>)))+1)+1) : 1) {
                    {
                        for(decl int<4> v170 = ( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>(v172))) .. ( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>((v172+1)))) : 1) {
                            (vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), CAST<uint<4>>(v170)) := ((( *vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), CAST<uint<4>>(v170)))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1));
                        };
                        (v6 := (( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>(v172)))+(CAST<int<4>>(ceil((CAST<real<8>>((( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>((v172+1))))-( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>(v172)))))/CAST<real<8>>(1))))*1)));
                    };
                }</m>;
                (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastrow, type<int<4>>))-( *composite.ref.elem(v1, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                <m id=5>for(decl int<4> v174 = 1 .. ((7000+1)+1) : 1) {
                    (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v174)) := 1.0);
                }</m>;
                (v4 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((7000+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            <m id=1>(v9 := 0.0)</m>;
            {
                for(decl int<4> v227 = 1 .. (1+1) : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v175, ref<array<int<4>,1>> v176, ref<array<int<4>,1>> v177, ref<array<real<8>,1>> v178, ref<array<real<8>,1>> v179, ref<array<real<8>,1>> v180, ref<array<real<8>,1>> v181, ref<array<real<8>,1>> v182, ref<array<real<8>,1>> v183, ref<array<real<8>,1>> v184, ref<array<real<8>,1>> v185){
                        decl ref<int<4>> v186 = ( var(0));
                        decl ref<int<4>> v187 = ( var(0));
                        decl ref<int<4>> v188 = ( var(0));
                        decl ref<int<4>> v189 = ( var(0));
                        decl ref<int<4>> v190 = ( var(25));
                        <m id=2>(composite.ref.elem(v175, rho, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=6>for(decl int<4> v192 = 1 .. ((( *composite.ref.elem(v175, naa, type<int<4>>))+1)+1) : 1) {
                                (array.ref.elem.1D(v182, CAST<uint<4>>(v192)) := 0.0);
                                (array.ref.elem.1D(v179, CAST<uint<4>>(v192)) := 0.0);
                                (array.ref.elem.1D(v183, CAST<uint<4>>(v192)) := ( *array.ref.elem.1D(v178, CAST<uint<4>>(v192))));
                                (array.ref.elem.1D(v181, CAST<uint<4>>(v192)) := ( *array.ref.elem.1D(v183, CAST<uint<4>>(v192))));
                                (array.ref.elem.1D(v184, CAST<uint<4>>(v192)) := 0.0);
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((( *composite.ref.elem(v175, naa, type<int<4>>))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=7>for(decl int<4> v194 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v175, rho, type<real<8>>) := (( *composite.ref.elem(v175, rho, type<real<8>>))+(( *array.ref.elem.1D(v178, CAST<uint<4>>(v194)))*( *array.ref.elem.1D(v178, CAST<uint<4>>(v194))))));
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl int<4> v212 = 1 .. (( *v190)+1) : 1) {
                                <m id=8>{
                                    (composite.ref.elem(v175, rho0, type<real<8>>) := ( *composite.ref.elem(v175, rho, type<real<8>>)));
                                    (composite.ref.elem(v175, d, type<real<8>>) := 0.0);
                                    (composite.ref.elem(v175, rho, type<real<8>>) := 0.0);
                                }</m>;
                                {
                                    <m id=9>for(decl int<4> v198 = 1 .. (((( *composite.ref.elem(v175, lastrow, type<int<4>>))-( *composite.ref.elem(v175, firstrow, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v175, sum, type<real<8>>) := 0.0);
                                        {
                                            for(decl int<4> v196 = ( *array.ref.elem.1D(v177, CAST<uint<4>>(v198))) .. ( *array.ref.elem.1D(v177, CAST<uint<4>>((v198+1)))) : 1) {
                                                (composite.ref.elem(v175, sum, type<real<8>>) := (( *composite.ref.elem(v175, sum, type<real<8>>))+(( *array.ref.elem.1D(v180, CAST<uint<4>>(v196)))*( *array.ref.elem.1D(v181, CAST<uint<4>>(( *array.ref.elem.1D(v176, CAST<uint<4>>(v196)))))))));
                                            };
                                            (v188 := (( *array.ref.elem.1D(v177, CAST<uint<4>>(v198)))+(CAST<int<4>>(ceil((CAST<real<8>>((( *array.ref.elem.1D(v177, CAST<uint<4>>((v198+1))))-( *array.ref.elem.1D(v177, CAST<uint<4>>(v198)))))/CAST<real<8>>(1))))*1)));
                                        };
                                        (array.ref.elem.1D(v184, CAST<uint<4>>(v198)) := ( *composite.ref.elem(v175, sum, type<real<8>>)));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastrow, type<int<4>>))-( *composite.ref.elem(v175, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=10>for(decl int<4> v200 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v182, CAST<uint<4>>(v200)) := ( *array.ref.elem.1D(v184, CAST<uint<4>>(v200))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=11>for(decl int<4> v202 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v184, CAST<uint<4>>(v202)) := 0.0);
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=12>for(decl int<4> v204 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v175, d, type<real<8>>) := (( *composite.ref.elem(v175, d, type<real<8>>))+(( *array.ref.elem.1D(v181, CAST<uint<4>>(v204)))*( *array.ref.elem.1D(v182, CAST<uint<4>>(v204))))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=3>(composite.ref.elem(v175, alpha, type<real<8>>) := (( *composite.ref.elem(v175, rho0, type<real<8>>))/( *composite.ref.elem(v175, d, type<real<8>>))))</m>;
                                {
                                    <m id=13>for(decl int<4> v206 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v179, CAST<uint<4>>(v206)) := (( *array.ref.elem.1D(v179, CAST<uint<4>>(v206)))+(( *composite.ref.elem(v175, alpha, type<real<8>>))*( *array.ref.elem.1D(v181, CAST<uint<4>>(v206))))));
                                        (array.ref.elem.1D(v183, CAST<uint<4>>(v206)) := (( *array.ref.elem.1D(v183, CAST<uint<4>>(v206)))-(( *composite.ref.elem(v175, alpha, type<real<8>>))*( *array.ref.elem.1D(v182, CAST<uint<4>>(v206))))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=14>for(decl int<4> v208 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v175, rho, type<real<8>>) := (( *composite.ref.elem(v175, rho, type<real<8>>))+(( *array.ref.elem.1D(v183, CAST<uint<4>>(v208)))*( *array.ref.elem.1D(v183, CAST<uint<4>>(v208))))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=4>(composite.ref.elem(v175, beta, type<real<8>>) := (( *composite.ref.elem(v175, rho, type<real<8>>))/( *composite.ref.elem(v175, rho0, type<real<8>>))))</m>;
                                {
                                    <m id=15>for(decl int<4> v210 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v181, CAST<uint<4>>(v210)) := (( *array.ref.elem.1D(v183, CAST<uint<4>>(v210)))+(( *composite.ref.elem(v175, beta, type<real<8>>))*( *array.ref.elem.1D(v181, CAST<uint<4>>(v210))))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            };
                            (v189 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v190)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=5>(composite.ref.elem(v175, sum, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=16>for(decl int<4> v216 = 1 .. (((( *composite.ref.elem(v175, lastrow, type<int<4>>))-( *composite.ref.elem(v175, firstrow, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v175, d, type<real<8>>) := 0.0);
                                {
                                    for(decl int<4> v214 = ( *array.ref.elem.1D(v177, CAST<uint<4>>(v216))) .. ((( *array.ref.elem.1D(v177, CAST<uint<4>>((v216+1))))-1)+1) : 1) {
                                        (composite.ref.elem(v175, d, type<real<8>>) := (( *composite.ref.elem(v175, d, type<real<8>>))+(( *array.ref.elem.1D(v180, CAST<uint<4>>(v214)))*( *array.ref.elem.1D(v179, CAST<uint<4>>(( *array.ref.elem.1D(v176, CAST<uint<4>>(v214)))))))));
                                    };
                                    (v188 := (( *array.ref.elem.1D(v177, CAST<uint<4>>(v216)))+(CAST<int<4>>(ceil((CAST<real<8>>((((( *array.ref.elem.1D(v177, CAST<uint<4>>((v216+1))))-1)+1)-( *array.ref.elem.1D(v177, CAST<uint<4>>(v216)))))/CAST<real<8>>(1))))*1)));
                                };
                                (array.ref.elem.1D(v184, CAST<uint<4>>(v216)) := ( *composite.ref.elem(v175, d, type<real<8>>)));
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastrow, type<int<4>>))-( *composite.ref.elem(v175, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=17>for(decl int<4> v218 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (array.ref.elem.1D(v183, CAST<uint<4>>(v218)) := ( *array.ref.elem.1D(v184, CAST<uint<4>>(v218))));
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=18>for(decl int<4> v220 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v175, d, type<real<8>>) := (( *array.ref.elem.1D(v178, CAST<uint<4>>(v220)))-( *array.ref.elem.1D(v183, CAST<uint<4>>(v220)))));
                                (composite.ref.elem(v175, sum, type<real<8>>) := (( *composite.ref.elem(v175, sum, type<real<8>>))+(( *composite.ref.elem(v175, d, type<real<8>>))*( *composite.ref.elem(v175, d, type<real<8>>)))));
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=19>{
                            (array.ref.elem.1D(v185, 0) := sqrt(( *composite.ref.elem(v175, sum, type<real<8>>))));
                        }</m>;
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v10));
                    <m id=20>{
                        (v11 := 0.0);
                        (v12 := 0.0);
                    }</m>;
                    {
                        <m id=21>for(decl int<4> v223 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (v11 := (( *v11)+(( *vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v223)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v223))))));
                            (v12 := (( *v12)+(( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v223)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v223))))));
                        }</m>;
                        (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    <m id=6>(v12 := (1.0/sqrt(( *v12))))</m>;
                    {
                        <m id=22>for(decl int<4> v225 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v225)) := (( *v12)*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v225)))));
                        }</m>;
                        (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                };
                (v7 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((1+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                <m id=23>for(decl int<4> v229 = 1 .. ((7000+1)+1) : 1) {
                    (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v229)) := 1.0);
                }</m>;
                (v4 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((7000+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            <m id=7>(v9 := 0.0)</m>;
        }</m>;
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v230, int<4> v231){
            (vector.ref.elem(composite.ref.elem(v230, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v231)) := 0.0);
        }(v1, 1);
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v233, int<4> v234){
            (vector.ref.elem(composite.ref.elem(v233, start, type<vector<real<8>,64>>), CAST<uint<4>>(v234)) := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v235){
                decl ref<real<8>> v236 = ( var(0.0));
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v237, ref<array<real<8>,1>> v238){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v239 = ( var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>)));
                    gettimeofday(scalar.to.array(v239), ( var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>))));
                    if((( *composite.ref.elem(v237, sec, type<int<4>>))<0)) (composite.ref.elem(v237, sec, type<int<4>>) := CAST<int<4>>(( *composite.ref.elem(v239, tv_sec, type<int<8>>)))) else { };
                    (array.ref.elem.1D(v238, 0) := (CAST<real<8>>((( *composite.ref.elem(v239, tv_sec, type<int<8>>))-CAST<int<8>>(( *composite.ref.elem(v237, sec, type<int<4>>)))))+(1.0e-6*CAST<real<8>>(( *composite.ref.elem(v239, tv_usec, type<int<8>>))))));
                }(v235, scalar.to.array(v236));
                return ( *v236);
            }(v233));
        }(v1, 1);
        <m id=30>{
            {
                for(decl int<4> v248 = 1 .. (15+1) : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v175, ref<array<int<4>,1>> v176, ref<array<int<4>,1>> v177, ref<array<real<8>,1>> v178, ref<array<real<8>,1>> v179, ref<array<real<8>,1>> v180, ref<array<real<8>,1>> v181, ref<array<real<8>,1>> v182, ref<array<real<8>,1>> v183, ref<array<real<8>,1>> v184, ref<array<real<8>,1>> v185){
                        decl ref<int<4>> v186 = ( var(0));
                        decl ref<int<4>> v187 = ( var(0));
                        decl ref<int<4>> v188 = ( var(0));
                        decl ref<int<4>> v189 = ( var(0));
                        decl ref<int<4>> v190 = ( var(25));
                        <m id=2>(composite.ref.elem(v175, rho, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=6>for(decl int<4> v192 = 1 .. ((( *composite.ref.elem(v175, naa, type<int<4>>))+1)+1) : 1) {
                                (array.ref.elem.1D(v182, CAST<uint<4>>(v192)) := 0.0);
                                (array.ref.elem.1D(v179, CAST<uint<4>>(v192)) := 0.0);
                                (array.ref.elem.1D(v183, CAST<uint<4>>(v192)) := ( *array.ref.elem.1D(v178, CAST<uint<4>>(v192))));
                                (array.ref.elem.1D(v181, CAST<uint<4>>(v192)) := ( *array.ref.elem.1D(v183, CAST<uint<4>>(v192))));
                                (array.ref.elem.1D(v184, CAST<uint<4>>(v192)) := 0.0);
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((( *composite.ref.elem(v175, naa, type<int<4>>))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=7>for(decl int<4> v194 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v175, rho, type<real<8>>) := (( *composite.ref.elem(v175, rho, type<real<8>>))+(( *array.ref.elem.1D(v178, CAST<uint<4>>(v194)))*( *array.ref.elem.1D(v178, CAST<uint<4>>(v194))))));
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl int<4> v212 = 1 .. (( *v190)+1) : 1) {
                                <m id=8>{
                                    (composite.ref.elem(v175, rho0, type<real<8>>) := ( *composite.ref.elem(v175, rho, type<real<8>>)));
                                    (composite.ref.elem(v175, d, type<real<8>>) := 0.0);
                                    (composite.ref.elem(v175, rho, type<real<8>>) := 0.0);
                                }</m>;
                                {
                                    <m id=9>for(decl int<4> v198 = 1 .. (((( *composite.ref.elem(v175, lastrow, type<int<4>>))-( *composite.ref.elem(v175, firstrow, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v175, sum, type<real<8>>) := 0.0);
                                        {
                                            for(decl int<4> v196 = ( *array.ref.elem.1D(v177, CAST<uint<4>>(v198))) .. ( *array.ref.elem.1D(v177, CAST<uint<4>>((v198+1)))) : 1) {
                                                (composite.ref.elem(v175, sum, type<real<8>>) := (( *composite.ref.elem(v175, sum, type<real<8>>))+(( *array.ref.elem.1D(v180, CAST<uint<4>>(v196)))*( *array.ref.elem.1D(v181, CAST<uint<4>>(( *array.ref.elem.1D(v176, CAST<uint<4>>(v196)))))))));
                                            };
                                            (v188 := (( *array.ref.elem.1D(v177, CAST<uint<4>>(v198)))+(CAST<int<4>>(ceil((CAST<real<8>>((( *array.ref.elem.1D(v177, CAST<uint<4>>((v198+1))))-( *array.ref.elem.1D(v177, CAST<uint<4>>(v198)))))/CAST<real<8>>(1))))*1)));
                                        };
                                        (array.ref.elem.1D(v184, CAST<uint<4>>(v198)) := ( *composite.ref.elem(v175, sum, type<real<8>>)));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastrow, type<int<4>>))-( *composite.ref.elem(v175, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=10>for(decl int<4> v200 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v182, CAST<uint<4>>(v200)) := ( *array.ref.elem.1D(v184, CAST<uint<4>>(v200))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=11>for(decl int<4> v202 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v184, CAST<uint<4>>(v202)) := 0.0);
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=12>for(decl int<4> v204 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v175, d, type<real<8>>) := (( *composite.ref.elem(v175, d, type<real<8>>))+(( *array.ref.elem.1D(v181, CAST<uint<4>>(v204)))*( *array.ref.elem.1D(v182, CAST<uint<4>>(v204))))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=3>(composite.ref.elem(v175, alpha, type<real<8>>) := (( *composite.ref.elem(v175, rho0, type<real<8>>))/( *composite.ref.elem(v175, d, type<real<8>>))))</m>;
                                {
                                    <m id=13>for(decl int<4> v206 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v179, CAST<uint<4>>(v206)) := (( *array.ref.elem.1D(v179, CAST<uint<4>>(v206)))+(( *composite.ref.elem(v175, alpha, type<real<8>>))*( *array.ref.elem.1D(v181, CAST<uint<4>>(v206))))));
                                        (array.ref.elem.1D(v183, CAST<uint<4>>(v206)) := (( *array.ref.elem.1D(v183, CAST<uint<4>>(v206)))-(( *composite.ref.elem(v175, alpha, type<real<8>>))*( *array.ref.elem.1D(v182, CAST<uint<4>>(v206))))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=14>for(decl int<4> v208 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v175, rho, type<real<8>>) := (( *composite.ref.elem(v175, rho, type<real<8>>))+(( *array.ref.elem.1D(v183, CAST<uint<4>>(v208)))*( *array.ref.elem.1D(v183, CAST<uint<4>>(v208))))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=4>(composite.ref.elem(v175, beta, type<real<8>>) := (( *composite.ref.elem(v175, rho, type<real<8>>))/( *composite.ref.elem(v175, rho0, type<real<8>>))))</m>;
                                {
                                    <m id=15>for(decl int<4> v210 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v181, CAST<uint<4>>(v210)) := (( *array.ref.elem.1D(v183, CAST<uint<4>>(v210)))+(( *composite.ref.elem(v175, beta, type<real<8>>))*( *array.ref.elem.1D(v181, CAST<uint<4>>(v210))))));
                                    }</m>;
                                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            };
                            (v189 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v190)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=5>(composite.ref.elem(v175, sum, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=16>for(decl int<4> v216 = 1 .. (((( *composite.ref.elem(v175, lastrow, type<int<4>>))-( *composite.ref.elem(v175, firstrow, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v175, d, type<real<8>>) := 0.0);
                                {
                                    for(decl int<4> v214 = ( *array.ref.elem.1D(v177, CAST<uint<4>>(v216))) .. ((( *array.ref.elem.1D(v177, CAST<uint<4>>((v216+1))))-1)+1) : 1) {
                                        (composite.ref.elem(v175, d, type<real<8>>) := (( *composite.ref.elem(v175, d, type<real<8>>))+(( *array.ref.elem.1D(v180, CAST<uint<4>>(v214)))*( *array.ref.elem.1D(v179, CAST<uint<4>>(( *array.ref.elem.1D(v176, CAST<uint<4>>(v214)))))))));
                                    };
                                    (v188 := (( *array.ref.elem.1D(v177, CAST<uint<4>>(v216)))+(CAST<int<4>>(ceil((CAST<real<8>>((((( *array.ref.elem.1D(v177, CAST<uint<4>>((v216+1))))-1)+1)-( *array.ref.elem.1D(v177, CAST<uint<4>>(v216)))))/CAST<real<8>>(1))))*1)));
                                };
                                (array.ref.elem.1D(v184, CAST<uint<4>>(v216)) := ( *composite.ref.elem(v175, d, type<real<8>>)));
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastrow, type<int<4>>))-( *composite.ref.elem(v175, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=17>for(decl int<4> v218 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (array.ref.elem.1D(v183, CAST<uint<4>>(v218)) := ( *array.ref.elem.1D(v184, CAST<uint<4>>(v218))));
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=18>for(decl int<4> v220 = 1 .. (((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v175, d, type<real<8>>) := (( *array.ref.elem.1D(v178, CAST<uint<4>>(v220)))-( *array.ref.elem.1D(v183, CAST<uint<4>>(v220)))));
                                (composite.ref.elem(v175, sum, type<real<8>>) := (( *composite.ref.elem(v175, sum, type<real<8>>))+(( *composite.ref.elem(v175, d, type<real<8>>))*( *composite.ref.elem(v175, d, type<real<8>>)))));
                            }</m>;
                            (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v175, lastcol, type<int<4>>))-( *composite.ref.elem(v175, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=19>{
                            (array.ref.elem.1D(v185, 0) := sqrt(( *composite.ref.elem(v175, sum, type<real<8>>))));
                        }</m>;
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v10));
                    <m id=25>{
                        (v11 := 0.0);
                        (v12 := 0.0);
                    }</m>;
                    {
                        <m id=26>for(decl int<4> v244 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (v11 := (( *v11)+(( *vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v244)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v244))))));
                            (v12 := (( *v12)+(( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v244)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v244))))));
                        }</m>;
                        (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    <m id=27>{
                        (v12 := (1.0/sqrt(( *v12))));
                        (v9 := (12.0+(1.0/( *v11))));
                    }</m>;
                    <m id=28>{
                        if((v248==1)) {
                            printf(string.as.char.pointer("   iteration           ||r||                 zeta\n"), varlist.pack(()));
                        } else { };
                        printf(string.as.char.pointer("    %5d       %20.14e%20.13e\n"), varlist.pack((v248, ( *v10), ( *v9))));
                    }</m>;
                    {
                        <m id=29>for(decl int<4> v246 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v246)) := (( *v12)*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v246)))));
                        }</m>;
                        (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                };
                (v7 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((15+1)-1))/CAST<real<8>>(1))))*1)));
            };
        }</m>;
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v249, int<4> v250){
            decl ref<real<8>> v251 = ( var(0.0));
            decl ref<real<8>> v252 = ( var(0.0));
            (v252 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v235){
                decl ref<real<8>> v236 = ( var(0.0));
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v237, ref<array<real<8>,1>> v238){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v239 = ( var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>)));
                    gettimeofday(scalar.to.array(v239), ( var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>))));
                    if((( *composite.ref.elem(v237, sec, type<int<4>>))<0)) (composite.ref.elem(v237, sec, type<int<4>>) := CAST<int<4>>(( *composite.ref.elem(v239, tv_sec, type<int<8>>)))) else { };
                    (array.ref.elem.1D(v238, 0) := (CAST<real<8>>((( *composite.ref.elem(v239, tv_sec, type<int<8>>))-CAST<int<8>>(( *composite.ref.elem(v237, sec, type<int<4>>)))))+(1.0e-6*CAST<real<8>>(( *composite.ref.elem(v239, tv_usec, type<int<8>>))))));
                }(v235, scalar.to.array(v236));
                return ( *v236);
            }(v249));
            (v251 := (( *v252)-( *vector.ref.elem(composite.ref.elem(v249, start, type<vector<real<8>,64>>), CAST<uint<4>>(v250)))));
            (vector.ref.elem(composite.ref.elem(v249, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v250)) := (( *vector.ref.elem(composite.ref.elem(v249, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v250)))+( *v251)));
        }(v1, 1);
        (v13 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v254, int<4> v255){
            return ( *vector.ref.elem(composite.ref.elem(v254, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v255)));
        }(v1, 1));
        printf(string.as.char.pointer(" Benchmark completed\n"), varlist.pack(()));
        (v18 := 1.0e-10);
        if((( *v15)!='U')) {
            if((fabs((( *v9)-( *v17)))<=( *v18))) {
                (v16 := 1);
                printf(string.as.char.pointer(" VERIFICATION SUCCESSFUL\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta is    %20.12e\n"), varlist.pack((( *v9))));
                printf(string.as.char.pointer(" Error is   %20.12e\n"), varlist.pack(((( *v9)-( *v17)))));
            } else {
                (v16 := 0);
                printf(string.as.char.pointer(" VERIFICATION FAILED\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta                %20.12e\n"), varlist.pack((( *v9))));
                printf(string.as.char.pointer(" The correct zeta is %20.12e\n"), varlist.pack((( *v17))));
            };
        } else {
            (v16 := 0);
            printf(string.as.char.pointer(" Problem size unknown\n"), varlist.pack(()));
            printf(string.as.char.pointer(" NO VERIFICATION PERFORMED\n"), varlist.pack(()));
        };
        if(real.ne(( *v13), 0.0)) {
            (v14 := (((((2.0*CAST<real<8>>(15))*CAST<real<8>>(7000))*(((3.0+CAST<real<8>>((8*(8+1))))+(25.0*(5.0+CAST<real<8>>((8*(8+1))))))+3.0))/( *v13))/1000000.0));
        } else {
            (v14 := 0.0);
        };
        fun(ref<array<char,1>> v257, char v258, int<4> v259, int<4> v260, int<4> v261, int<4> v262, int<4> v263, real<8> v264, real<8> v265, ref<array<char,1>> v266, int<4> v267, ref<array<char,1>> v268, ref<array<char,1>> v269, ref<array<char,1>> v270, ref<array<char,1>> v271, ref<array<char,1>> v272, ref<array<char,1>> v273, ref<array<char,1>> v274, ref<array<char,1>> v275, ref<array<char,1>> v276){
            decl ref<array<char,1>> v277 = string.as.char.pointer("1000");
            printf(string.as.char.pointer("\n\n %s Benchmark Completed\n"), varlist.pack((v257)));
            printf(string.as.char.pointer(" Class           =                        %c\n"), varlist.pack((CAST<int<4>>(v258))));
            if(((v260==0)&&bind(){fun(int<4> v278)return (v278==0)(v261)})) printf(string.as.char.pointer(" Size            =             %12d\n"), varlist.pack((v259))) else printf(string.as.char.pointer(" Size            =              %3dx%3dx%3d\n"), varlist.pack((v259, v260, v261)));
            printf(string.as.char.pointer(" Iterations      =             %12d\n"), varlist.pack((v262)));
            printf(string.as.char.pointer(" Threads         =             %12d\n"), varlist.pack((v263)));
            printf(string.as.char.pointer(" Time in seconds =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Mop/s total     =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Operation type  = %24s\n"), varlist.pack((v266)));
            if(int.ne(v267, 0)) printf(string.as.char.pointer(" Verification    =               SUCCESSFUL\n"), varlist.pack(())) else printf(string.as.char.pointer(" Verification    =             UNSUCCESSFUL\n"), varlist.pack(()));
            printf(string.as.char.pointer(" Version         =             %12s\n"), varlist.pack((v268)));
            printf(string.as.char.pointer(" Compile date    =             %12s\n"), varlist.pack((v269)));
            printf(string.as.char.pointer("\n Compile options:\n"), varlist.pack(()));
            printf(string.as.char.pointer("    CC           = %s\n"), varlist.pack((v270)));
            printf(string.as.char.pointer("    CLINK        = %s\n"), varlist.pack((v271)));
            printf(string.as.char.pointer("    C_LIB        = %s\n"), varlist.pack((v272)));
            printf(string.as.char.pointer("    C_INC        = %s\n"), varlist.pack((v273)));
            printf(string.as.char.pointer("    CFLAGS       = %s\n"), varlist.pack((v274)));
            printf(string.as.char.pointer("    CLINKFLAGS   = %s\n"), varlist.pack((v275)));
            printf(string.as.char.pointer("    RAND         = %s\n"), varlist.pack((v276)));
        }(string.as.char.pointer("CG"), ( *v15), 7000, 0, 0, 15, ( *v8), ( *v13), ( *v14), string.as.char.pointer("          floating point"), ( *v16), string.as.char.pointer("2.3"), string.as.char.pointer("02 Dec 2010"), string.as.char.pointer("cc"), string.as.char.pointer("cc"), string.as.char.pointer("-lm"), string.as.char.pointer("-I../common"), string.as.char.pointer("-O3 "), string.as.char.pointer("-lm"), string.as.char.pointer("randdp"));
    }


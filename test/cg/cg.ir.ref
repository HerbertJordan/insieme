// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v229, ref<array<array<char,1>,1>> v230){
        decl ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v1 =  new(struct{naa:=0, nzz:=0, firstrow:=0, lastrow:=0, firstcol:=0, lastcol:=0, colidx:=vector.init.uniform(0, 637001), rowstr:=vector.init.uniform(0, 7002), iv:=vector.init.uniform(0, 14002), arow:=vector.init.uniform(0, 637001), acol:=vector.init.uniform(0, 637001), v:=vector.init.uniform(0.0, 7002), aelt:=vector.init.uniform(0.0, 637001), a:=vector.init.uniform(0.0, 637001), x:=vector.init.uniform(0.0, 7003), z:=vector.init.uniform(0.0, 7003), p:=vector.init.uniform(0.0, 7003), q:=vector.init.uniform(0.0, 7003), r:=vector.init.uniform(0.0, 7003), w:=vector.init.uniform(0.0, 7003), amult:=0.0, tran:=0.0, d:=0.0, sum:=0.0, rho:=0.0, rho0:=0.0, alpha:=0.0, beta:=0.0, start:=vector.init.uniform(0.0, 64), elapsed:=vector.init.uniform(0.0, 64), sec:=0-1});
        decl ref<int<4>> v231 =  var(0);
        decl ref<int<4>> v232 =  var(0);
        decl ref<int<4>> v233 =  var(0);
        decl ref<int<4>> v234 =  var(0);
        decl ref<int<4>> v235 =  var(1);
        decl ref<real<8>> v236 =  var(0.0);
        decl ref<real<8>> v237 =  var(0.0);
        decl ref<real<8>> v238 =  var(0.0);
        decl ref<real<8>> v239 =  var(0.0);
        decl ref<real<8>> v240 =  var(0.0);
        decl ref<real<8>> v241 =  var(0.0);
        decl ref<char> v242 =  var('\0');
        decl ref<int<4>> v243 =  var(0);
        decl ref<real<8>> v244 =  var(0.0);
        decl ref<real<8>> v245 =  var(0.0);
        composite.ref.elem(v1, firstrow, type<int<4>>) := 1;
        composite.ref.elem(v1, lastrow, type<int<4>>) := 7000;
        composite.ref.elem(v1, firstcol, type<int<4>>) := 1;
        composite.ref.elem(v1, lastcol, type<int<4>>) := 7000;
        if(7000==1400&&bind(){fun()return 8==7()}&&bind(){fun()return 15==15()}&&bind(){fun()return 12.0==10.0()}) {
            v242 := 'S';
            v244 := 8.5971775078648;
        } else if(7000==7000&&bind(){fun()return 8==8()}&&bind(){fun()return 15==15()}&&bind(){fun()return 12.0==12.0()}) {
            v242 := 'W';
            v244 := 10.362595087124;
        } else if(7000==14000&&bind(){fun()return 8==11()}&&bind(){fun()return 15==15()}&&bind(){fun()return 12.0==20.0()}) {
            v242 := 'A';
            v244 := 17.130235054029;
        } else if(7000==75000&&bind(){fun()return 8==13()}&&bind(){fun()return 15==75()}&&bind(){fun()return 12.0==60.0()}) {
            v242 := 'B';
            v244 := 22.712745482631;
        } else if(7000==150000&&bind(){fun()return 8==15()}&&bind(){fun()return 15==75()}&&bind(){fun()return 12.0==110.0()}) {
            v242 := 'C';
            v244 := 28.973605592845;
        } else {
            v242 := 'U';
        };
        printf(string.as.char.pointer("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - CG Benchmark\n"), varlist.pack(()));
        printf(string.as.char.pointer(" Size: %10d\n"), varlist.pack((7000)));
        printf(string.as.char.pointer(" Iterations: %5d\n"), varlist.pack((15)));
        composite.ref.elem(v1, naa, type<int<4>>) := 7000;
        composite.ref.elem(v1, nzz, type<int<4>>) := 7000*8+1*8+1+7000*8+2;
        composite.ref.elem(v1, tran, type<real<8>>) := 314159265.0;
        composite.ref.elem(v1, amult, type<real<8>>) := 1220703125.0;
        v236 := fun(ref<array<real<8>,1>> v95, real<8> v96){
            decl ref<real<8>> v97 =  var(0.0);
            decl ref<real<8>> v98 =  var(0.0);
            decl ref<real<8>> v99 =  var(0.0);
            decl ref<real<8>> v100 =  var(0.0);
            decl ref<real<8>> v101 =  var(0.0);
            decl ref<real<8>> v102 =  var(0.0);
            decl ref<real<8>> v103 =  var(0.0);
            decl ref<real<8>> v104 =  var(0.0);
            decl ref<real<8>> v105 =  var(0.0);
            v97 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v96;
            v101 := real.to.int(v97, 4);
            v102 := v96-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v101;
            v97 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v95, 0);
            v103 := real.to.int(v97, 4);
            v104 := array.ref.elem.1D(v95, 0)-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v103;
            v97 := v101*v104+v102*v103;
            v98 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v97;
            v105 := v97-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v98;
            v99 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v105+v102*v104;
            v100 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v99;
            array.ref.elem.1D(v95, 0) := v99-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v100;
            return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v95, 0);
        }(scalar.to.array(composite.ref.elem(v1, tran, type<real<8>>)), composite.ref.elem(v1, amult, type<real<8>>));
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v135, int<4> v136, int<4> v137, ref<array<real<8>,1>> v138, ref<array<int<4>,1>> v139, ref<array<int<4>,1>> v140, int<4> v141, int<4> v142, int<4> v143, int<4> v144, int<4> v145, real<8> v146, ref<array<int<4>,1>> v147, ref<array<int<4>,1>> v148, ref<array<real<8>,1>> v149, ref<array<real<8>,1>> v150, ref<array<int<4>,1>> v151, real<8> v152){
            decl ref<int<4>> v153 =  var(0);
            decl ref<int<4>> v154 =  var(0);
            decl ref<int<4>> v155 =  var(0);
            decl ref<int<4>> v156 =  var(0);
            decl ref<int<4>> v157 =  var(0);
            decl ref<int<4>> v158 =  var(0);
            decl ref<int<4>> v159 =  var(0);
            decl ref<real<8>> v160 =  var(0.0);
            decl ref<real<8>> v161 =  var(0.0);
            decl ref<real<8>> v162 =  var(0.0);
            decl ref<int<4>> v163 =  var(0);
            v160 := 1.0;
            v161 := pow(v146, 1.0/v136);
            v154 := 0;
            {
                for(decl int<4> v165 = 1 .. v136+1 : 1) {
                    array.ref.elem.1D(v139, v136+v165) := 0;
                };
                v153 := 1+ceil(v136+1-1/1)*1;
            };
            {
                for(decl int<4> v177 = 1 .. v136+1 : 1) {
                    v159 := v141;
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v107, int<4> v108, int<4> v109, ref<array<real<8>,1>> v110, ref<array<int<4>,1>> v111, ref<array<int<4>,1>> v112, ref<array<int<4>,1>> v113){
                        decl ref<int<4>> v114 =  var(0);
                        decl ref<int<4>> v115 =  var(0);
                        decl ref<int<4>> v116 =  var(0);
                        decl ref<int<4>> v117 =  var(0);
                        decl ref<int<4>> v118 =  var(0);
                        decl ref<real<8>> v119 =  var(0.0);
                        decl ref<real<8>> v120 =  var(0.0);
                        v116 := 0;
                        v115 := 0;
                        v114 := 1;
                        {
                            v114 := 2*v114;
                            while(v114<v108) {
                                v114 := 2*v114;
                            };
                        };
                        while(v116<v109) {
                            v119 := fun(ref<array<real<8>,1>> v95, real<8> v96){
                                decl ref<real<8>> v97 =  var(0.0);
                                decl ref<real<8>> v98 =  var(0.0);
                                decl ref<real<8>> v99 =  var(0.0);
                                decl ref<real<8>> v100 =  var(0.0);
                                decl ref<real<8>> v101 =  var(0.0);
                                decl ref<real<8>> v102 =  var(0.0);
                                decl ref<real<8>> v103 =  var(0.0);
                                decl ref<real<8>> v104 =  var(0.0);
                                decl ref<real<8>> v105 =  var(0.0);
                                v97 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v96;
                                v101 := real.to.int(v97, 4);
                                v102 := v96-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v101;
                                v97 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v95, 0);
                                v103 := real.to.int(v97, 4);
                                v104 := array.ref.elem.1D(v95, 0)-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v103;
                                v97 := v101*v104+v102*v103;
                                v98 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v97;
                                v105 := v97-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v98;
                                v99 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v105+v102*v104;
                                v100 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v99;
                                array.ref.elem.1D(v95, 0) := v99-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v100;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v95, 0);
                            }(scalar.to.array(composite.ref.elem(v107, tran, type<real<8>>)), composite.ref.elem(v107, amult, type<real<8>>));
                            v120 := fun(ref<array<real<8>,1>> v95, real<8> v96){
                                decl ref<real<8>> v97 =  var(0.0);
                                decl ref<real<8>> v98 =  var(0.0);
                                decl ref<real<8>> v99 =  var(0.0);
                                decl ref<real<8>> v100 =  var(0.0);
                                decl ref<real<8>> v101 =  var(0.0);
                                decl ref<real<8>> v102 =  var(0.0);
                                decl ref<real<8>> v103 =  var(0.0);
                                decl ref<real<8>> v104 =  var(0.0);
                                decl ref<real<8>> v105 =  var(0.0);
                                v97 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v96;
                                v101 := real.to.int(v97, 4);
                                v102 := v96-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v101;
                                v97 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v95, 0);
                                v103 := real.to.int(v97, 4);
                                v104 := array.ref.elem.1D(v95, 0)-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v103;
                                v97 := v101*v104+v102*v103;
                                v98 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v97;
                                v105 := v97-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v98;
                                v99 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v105+v102*v104;
                                v100 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v99;
                                array.ref.elem.1D(v95, 0) := v99-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v100;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v95, 0);
                            }(scalar.to.array(composite.ref.elem(v107, tran, type<real<8>>)), composite.ref.elem(v107, amult, type<real<8>>));
                            v118 := fun(real<8> v92, int<4> v93){
                                return v93*v92;
                            }(v120, v114)+1;
                            if(v118>v108) continue else { };
                            if(array.ref.elem.1D(v113, v118)==0) {
                                array.ref.elem.1D(v113, v118) := 1;
                                v115 := v115+1;
                                array.ref.elem.1D(v112, v115) := v118;
                                v116 := v116+1;
                                array.ref.elem.1D(v110, v116) := v119;
                                array.ref.elem.1D(v111, v116) := v118;
                            } else { };
                        };
                        {
                            for(decl int<4> v122 = 1 .. v115+1 : 1) {
                                v118 := array.ref.elem.1D(v112, v122);
                                array.ref.elem.1D(v113, v118) := 0;
                            };
                            v117 := 1+ceil(v115+1-1/1)*1;
                        };
                    }(v135, v136, v159, v150, v151, scalar.to.array(array.ref.elem.1D(v139, 0)), scalar.to.array(array.ref.elem.1D(v139, v136)));
                    fun(int<4> v124, ref<array<real<8>,1>> v125, ref<array<int<4>,1>> v126, ref<array<int<4>,1>> v127, int<4> v128, real<8> v129){
                        decl ref<int<4>> v130 =  var(0);
                        decl ref<int<4>> v131 =  var(0);
                        v131 := 0;
                        {
                            for(decl int<4> v133 = 1 .. array.ref.elem.1D(v127, 0)+1 : 1) {
                                if(array.ref.elem.1D(v126, v133)==v128) {
                                    array.ref.elem.1D(v125, v133) := v129;
                                    v131 := 1;
                                } else { };
                            };
                            v130 := 1+ceil(array.ref.elem.1D(v127, 0)+1-1/1)*1;
                        };
                        if(v131==0) {
                            array.ref.elem.1D(v127, 0) := array.ref.elem.1D(v127, 0)+1;
                            array.ref.elem.1D(v125, array.ref.elem.1D(v127, 0)) := v129;
                            array.ref.elem.1D(v126, array.ref.elem.1D(v127, 0)) := v128;
                        } else { };
                    }(v136, v150, v151, scalar.to.array(v159), v177, 0.5);
                    {
                        for(decl int<4> v175 = 1 .. v159+1 : 1) {
                            v163 := array.ref.elem.1D(v151, v175);
                            if(v163>=v144&&bind(){fun(ref<int<4>> v171, int<4> v172)return v171<=v172(v163, v145)}) {
                                v162 := v160*array.ref.elem.1D(v150, v175);
                                {
                                    for(decl int<4> v170 = 1 .. v159+1 : 1) {
                                        v158 := array.ref.elem.1D(v151, v170);
                                        if(v158>=v142&&bind(){fun(int<4> v166, ref<int<4>> v167)return v167<=v166(v143, v158)}) {
                                            v154 := v154+1;
                                            if(v154>v137) {
                                                printf(string.as.char.pointer("Space for matrix elements exceeded in"), varlist.pack(()));
                                                printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((v154, v137)));
                                                printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((v177)));
                                                exit(1);
                                            } else { };
                                            array.ref.elem.1D(v148, v154) := v163;
                                            array.ref.elem.1D(v147, v154) := v158;
                                            array.ref.elem.1D(v149, v154) := array.ref.elem.1D(v150, v170)*v162;
                                        } else { };
                                    };
                                    v157 := 1+ceil(v159+1-1/1)*1;
                                };
                            } else { };
                        };
                        v156 := 1+ceil(v159+1-1/1)*1;
                    };
                    v160 := v160*v161;
                };
                v155 := 1+ceil(v136+1-1/1)*1;
            };
            {
                for(decl int<4> v182 = v142 .. v143+1 : 1) {
                    if(v182>=v144&&bind(){fun(ref<int<4>> v178, int<4> v179)return v178<=v179( var(v182), v145)}) {
                        v155 := v136+v182;
                        v154 := v154+1;
                        if(v154>v137) {
                            printf(string.as.char.pointer("Space for matrix elements exceeded in makea\n"), varlist.pack(()));
                            printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((v154, v137)));
                            printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((v155)));
                            exit(1);
                        } else { };
                        array.ref.elem.1D(v148, v154) := v182;
                        array.ref.elem.1D(v147, v154) := v182;
                        array.ref.elem.1D(v149, v154) := v146-v152;
                    } else { };
                };
                v153 := v142+ceil(v143+1-v142/1)*1;
            };
            fun(ref<array<real<8>,1>> v49, ref<array<int<4>,1>> v50, ref<array<int<4>,1>> v51, int<4> v52, ref<array<int<4>,1>> v53, ref<array<int<4>,1>> v54, ref<array<real<8>,1>> v55, int<4> v56, int<4> v57, ref<array<real<8>,1>> v58, ref<array<int<4>,1>> v59, ref<array<int<4>,1>> v60, int<4> v61){
                decl ref<int<4>> v62 =  var(0);
                decl ref<int<4>> v63 =  var(0);
                decl ref<int<4>> v64 =  var(0);
                decl ref<int<4>> v65 =  var(0);
                decl ref<int<4>> v66 =  var(0);
                decl ref<int<4>> v67 =  var(0);
                decl ref<int<4>> v68 =  var(0);
                decl ref<real<8>> v69 =  var(0.0);
                v62 := v57-v56+1;
                {
                    for(decl int<4> v71 = 1 .. v52+1 : 1) {
                        array.ref.elem.1D(v51, v71) := 0;
                        array.ref.elem.1D(v59, v71) := 0;
                    };
                    v64 := 1+ceil(v52+1-1/1)*1;
                };
                array.ref.elem.1D(v51, v52+1) := 0;
                {
                    for(decl int<4> v73 = 1 .. v61+1 : 1) {
                        v64 := array.ref.elem.1D(v53, v73)-v56+1+1;
                        array.ref.elem.1D(v51, v64) := array.ref.elem.1D(v51, v64)+1;
                    };
                    v66 := 1+ceil(v61+1-1/1)*1;
                };
                array.ref.elem.1D(v51, 1) := 1;
                {
                    for(decl int<4> v75 = 2 .. v62+1+1 : 1) {
                        array.ref.elem.1D(v51, v75) := array.ref.elem.1D(v51, v75)+array.ref.elem.1D(v51, v75-1);
                    };
                    v64 := 2+ceil(v62+1+1-2/1)*1;
                };
                {
                    for(decl int<4> v77 = 1 .. v61+1 : 1) {
                        v64 := array.ref.elem.1D(v53, v77)-v56+1;
                        v67 := array.ref.elem.1D(v51, v64);
                        array.ref.elem.1D(v49, v67) := array.ref.elem.1D(v55, v77);
                        array.ref.elem.1D(v50, v67) := array.ref.elem.1D(v54, v77);
                        array.ref.elem.1D(v51, v64) := array.ref.elem.1D(v51, v64)+1;
                    };
                    v66 := 1+ceil(v61+1-1/1)*1;
                };
                {
                    for(decl int<4> v79 = 0-v62 .. 0-1+1 : 1) {
                        array.ref.elem.1D(v51, 0-v79+1) := array.ref.elem.1D(v51, 0-v79);
                    };
                    v64 := v62+ceil(0-1+1-v62/1)*1;
                };
                array.ref.elem.1D(v51, 1) := 1;
                v66 := 0;
                {
                    for(decl int<4> v81 = 1 .. v52+1 : 1) {
                        array.ref.elem.1D(v58, v81) := 0.0;
                        array.ref.elem.1D(v59, v81) := 0;
                    };
                    v63 := 1+ceil(v52+1-1/1)*1;
                };
                v65 := array.ref.elem.1D(v51, 1);
                {
                    for(decl int<4> v90 = 1 .. v62+1 : 1) {
                        v68 := 0;
                        {
                            for(decl int<4> v86 = v65 .. array.ref.elem.1D(v51, v90+1) : 1) {
                                v63 := array.ref.elem.1D(v50, v86);
                                array.ref.elem.1D(v58, v63) := array.ref.elem.1D(v58, v63)+array.ref.elem.1D(v49, v86);
                                if(array.ref.elem.1D(v59, v63)==0&&bind(){fun(ref<array<real<8>,1>> v82, ref<int<4>> v83)return real.ne(array.ref.elem.1D(v82, v83), 0.0)(v58, v63)}) {
                                    array.ref.elem.1D(v59, v63) := 1;
                                    v68 := v68+1;
                                    array.ref.elem.1D(v60, v68) := v63;
                                } else { };
                            };
                            v67 := v65+ceil(array.ref.elem.1D(v51, v90+1)-v65/1)*1;
                        };
                        {
                            for(decl int<4> v88 = 1 .. v68+1 : 1) {
                                v63 := array.ref.elem.1D(v60, v88);
                                array.ref.elem.1D(v59, v63) := 0;
                                v69 := array.ref.elem.1D(v58, v63);
                                array.ref.elem.1D(v58, v63) := 0.0;
                                if(real.ne(v69, 0.0)) {
                                    v66 := v66+1;
                                    array.ref.elem.1D(v49, v66) := v69;
                                    array.ref.elem.1D(v50, v66) := v63;
                                } else { };
                            };
                            v67 := 1+ceil(v68+1-1/1)*1;
                        };
                        v65 := array.ref.elem.1D(v51, v90+1);
                        array.ref.elem.1D(v51, v90+1) := v66+array.ref.elem.1D(v51, 1);
                    };
                    v64 := 1+ceil(v62+1-1/1)*1;
                };
            }(v138, v139, v140, v136, v147, v148, v149, v142, v143, v150, scalar.to.array(array.ref.elem.1D(v151, 0)), scalar.to.array(array.ref.elem.1D(v151, v136)), v154);
        }(v1, composite.ref.elem(v1, naa, type<int<4>>), composite.ref.elem(v1, nzz, type<int<4>>), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), 8, composite.ref.elem(v1, firstrow, type<int<4>>), composite.ref.elem(v1, lastrow, type<int<4>>), composite.ref.elem(v1, firstcol, type<int<4>>), composite.ref.elem(v1, lastcol, type<int<4>>), 1.0e-1, ref.vector.to.ref.array(composite.ref.elem(v1, arow, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, acol, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, aelt, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, v, type<vector<real<8>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, iv, type<vector<int<4>,14002>>)), 12.0);
        {
            {
                for(decl int<4> v264 = 1 .. composite.ref.elem(v1, lastrow, type<int<4>>)-composite.ref.elem(v1, firstrow, type<int<4>>)+1+1 : 1) {
                    {
                        for(decl int<4> v262 = vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v264) .. vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v264+1) : 1) {
                            vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), v262) := vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), v262)-composite.ref.elem(v1, firstcol, type<int<4>>)+1;
                        };
                        v233 := vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v264)+ceil(vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v264+1)-vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v264)/1)*1;
                    };
                };
                v232 := 1+ceil(composite.ref.elem(v1, lastrow, type<int<4>>)-composite.ref.elem(v1, firstrow, type<int<4>>)+1+1-1/1)*1;
            };
            {
                for(decl int<4> v266 = 1 .. 7000+1+1 : 1) {
                    vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v266) := 1.0;
                };
                v231 := 1+ceil(7000+1+1-1/1)*1;
            };
            v236 := 0.0;
            {
                for(decl int<4> v272 = 1 .. 1+1 : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v2, ref<array<int<4>,1>> v3, ref<array<int<4>,1>> v4, ref<array<real<8>,1>> v5, ref<array<real<8>,1>> v6, ref<array<real<8>,1>> v7, ref<array<real<8>,1>> v8, ref<array<real<8>,1>> v9, ref<array<real<8>,1>> v10, ref<array<real<8>,1>> v11, ref<array<real<8>,1>> v12){
                        decl ref<int<4>> v13 =  var(0);
                        decl ref<int<4>> v14 =  var(0);
                        decl ref<int<4>> v15 =  var(0);
                        decl ref<int<4>> v16 =  var(0);
                        decl ref<int<4>> v17 =  var(25);
                        composite.ref.elem(v2, rho, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v19 = 1 .. composite.ref.elem(v2, naa, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v9, v19) := 0.0;
                                array.ref.elem.1D(v6, v19) := 0.0;
                                array.ref.elem.1D(v10, v19) := array.ref.elem.1D(v5, v19);
                                array.ref.elem.1D(v8, v19) := array.ref.elem.1D(v10, v19);
                                array.ref.elem.1D(v11, v19) := 0.0;
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, naa, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v21 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v2, rho, type<real<8>>) := composite.ref.elem(v2, rho, type<real<8>>)+array.ref.elem.1D(v5, v21)*array.ref.elem.1D(v5, v21);
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v39 = 1 .. v17+1 : 1) {
                                {
                                    composite.ref.elem(v2, rho0, type<real<8>>) := composite.ref.elem(v2, rho, type<real<8>>);
                                    composite.ref.elem(v2, d, type<real<8>>) := 0.0;
                                    composite.ref.elem(v2, rho, type<real<8>>) := 0.0;
                                };
                                {
                                    for(decl int<4> v25 = 1 .. composite.ref.elem(v2, lastrow, type<int<4>>)-composite.ref.elem(v2, firstrow, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v2, sum, type<real<8>>) := 0.0;
                                        {
                                            for(decl int<4> v23 = array.ref.elem.1D(v4, v25) .. array.ref.elem.1D(v4, v25+1) : 1) {
                                                composite.ref.elem(v2, sum, type<real<8>>) := composite.ref.elem(v2, sum, type<real<8>>)+array.ref.elem.1D(v7, v23)*array.ref.elem.1D(v8, array.ref.elem.1D(v3, v23));
                                            };
                                            v15 := array.ref.elem.1D(v4, v25)+ceil(array.ref.elem.1D(v4, v25+1)-array.ref.elem.1D(v4, v25)/1)*1;
                                        };
                                        array.ref.elem.1D(v11, v25) := composite.ref.elem(v2, sum, type<real<8>>);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastrow, type<int<4>>)-composite.ref.elem(v2, firstrow, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v27 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v9, v27) := array.ref.elem.1D(v11, v27);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v29 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v11, v29) := 0.0;
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v31 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v2, d, type<real<8>>) := composite.ref.elem(v2, d, type<real<8>>)+array.ref.elem.1D(v8, v31)*array.ref.elem.1D(v9, v31);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v2, alpha, type<real<8>>) := composite.ref.elem(v2, rho0, type<real<8>>)/composite.ref.elem(v2, d, type<real<8>>);
                                {
                                    for(decl int<4> v33 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v6, v33) := array.ref.elem.1D(v6, v33)+composite.ref.elem(v2, alpha, type<real<8>>)*array.ref.elem.1D(v8, v33);
                                        array.ref.elem.1D(v10, v33) := array.ref.elem.1D(v10, v33)-composite.ref.elem(v2, alpha, type<real<8>>)*array.ref.elem.1D(v9, v33);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v35 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v2, rho, type<real<8>>) := composite.ref.elem(v2, rho, type<real<8>>)+array.ref.elem.1D(v10, v35)*array.ref.elem.1D(v10, v35);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v2, beta, type<real<8>>) := composite.ref.elem(v2, rho, type<real<8>>)/composite.ref.elem(v2, rho0, type<real<8>>);
                                {
                                    for(decl int<4> v37 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v8, v37) := array.ref.elem.1D(v10, v37)+composite.ref.elem(v2, beta, type<real<8>>)*array.ref.elem.1D(v8, v37);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                            };
                            v16 := 1+ceil(v17+1-1/1)*1;
                        };
                        composite.ref.elem(v2, sum, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v43 = 1 .. composite.ref.elem(v2, lastrow, type<int<4>>)-composite.ref.elem(v2, firstrow, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v2, d, type<real<8>>) := 0.0;
                                {
                                    for(decl int<4> v41 = array.ref.elem.1D(v4, v43) .. array.ref.elem.1D(v4, v43+1)-1+1 : 1) {
                                        composite.ref.elem(v2, d, type<real<8>>) := composite.ref.elem(v2, d, type<real<8>>)+array.ref.elem.1D(v7, v41)*array.ref.elem.1D(v6, array.ref.elem.1D(v3, v41));
                                    };
                                    v15 := array.ref.elem.1D(v4, v43)+ceil(array.ref.elem.1D(v4, v43+1)-1+1-array.ref.elem.1D(v4, v43)/1)*1;
                                };
                                array.ref.elem.1D(v11, v43) := composite.ref.elem(v2, d, type<real<8>>);
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, lastrow, type<int<4>>)-composite.ref.elem(v2, firstrow, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v45 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v10, v45) := array.ref.elem.1D(v11, v45);
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v47 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v2, d, type<real<8>>) := array.ref.elem.1D(v5, v47)-array.ref.elem.1D(v10, v47);
                                composite.ref.elem(v2, sum, type<real<8>>) := composite.ref.elem(v2, sum, type<real<8>>)+composite.ref.elem(v2, d, type<real<8>>)*composite.ref.elem(v2, d, type<real<8>>);
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            array.ref.elem.1D(v12, 0) := sqrt(composite.ref.elem(v2, sum, type<real<8>>));
                        };
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v237));
                    {
                        v238 := 0.0;
                        v239 := 0.0;
                    };
                    {
                        for(decl int<4> v268 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            v238 := v238+vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v268)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v268);
                            v239 := v239+vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v268)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v268);
                        };
                        v232 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                    v239 := 1.0/sqrt(v239);
                    {
                        for(decl int<4> v270 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v270) := v239*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v270);
                        };
                        v232 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                };
                v234 := 1+ceil(1+1-1/1)*1;
            };
            {
                for(decl int<4> v274 = 1 .. 7000+1+1 : 1) {
                    vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v274) := 1.0;
                };
                v231 := 1+ceil(7000+1+1-1/1)*1;
            };
            v236 := 0.0;
        };
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v223, int<4> v224){
            vector.ref.elem(composite.ref.elem(v223, elapsed, type<vector<real<8>,64>>), v224) := 0.0;
        }(v1, 1);
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v226, int<4> v227){
            vector.ref.elem(composite.ref.elem(v226, start, type<vector<real<8>,64>>), v227) := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v212){
                decl ref<real<8>> v213 =  var(0.0);
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v208, ref<array<real<8>,1>> v209){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v210 =  var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>));
                    gettimeofday(scalar.to.array(v210),  var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>)));
                    if(composite.ref.elem(v208, sec, type<int<4>>)<0) composite.ref.elem(v208, sec, type<int<4>>) := composite.ref.elem(v210, tv_sec, type<int<8>>) else { };
                    array.ref.elem.1D(v209, 0) := composite.ref.elem(v210, tv_sec, type<int<8>>)-composite.ref.elem(v208, sec, type<int<4>>)+1.0e-6*composite.ref.elem(v210, tv_usec, type<int<8>>);
                }(v212, scalar.to.array(v213));
                return v213;
            }(v226);
        }(v1, 1);
        {
            {
                for(decl int<4> v280 = 1 .. 15+1 : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v2, ref<array<int<4>,1>> v3, ref<array<int<4>,1>> v4, ref<array<real<8>,1>> v5, ref<array<real<8>,1>> v6, ref<array<real<8>,1>> v7, ref<array<real<8>,1>> v8, ref<array<real<8>,1>> v9, ref<array<real<8>,1>> v10, ref<array<real<8>,1>> v11, ref<array<real<8>,1>> v12){
                        decl ref<int<4>> v13 =  var(0);
                        decl ref<int<4>> v14 =  var(0);
                        decl ref<int<4>> v15 =  var(0);
                        decl ref<int<4>> v16 =  var(0);
                        decl ref<int<4>> v17 =  var(25);
                        composite.ref.elem(v2, rho, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v19 = 1 .. composite.ref.elem(v2, naa, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v9, v19) := 0.0;
                                array.ref.elem.1D(v6, v19) := 0.0;
                                array.ref.elem.1D(v10, v19) := array.ref.elem.1D(v5, v19);
                                array.ref.elem.1D(v8, v19) := array.ref.elem.1D(v10, v19);
                                array.ref.elem.1D(v11, v19) := 0.0;
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, naa, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v21 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v2, rho, type<real<8>>) := composite.ref.elem(v2, rho, type<real<8>>)+array.ref.elem.1D(v5, v21)*array.ref.elem.1D(v5, v21);
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v39 = 1 .. v17+1 : 1) {
                                {
                                    composite.ref.elem(v2, rho0, type<real<8>>) := composite.ref.elem(v2, rho, type<real<8>>);
                                    composite.ref.elem(v2, d, type<real<8>>) := 0.0;
                                    composite.ref.elem(v2, rho, type<real<8>>) := 0.0;
                                };
                                {
                                    for(decl int<4> v25 = 1 .. composite.ref.elem(v2, lastrow, type<int<4>>)-composite.ref.elem(v2, firstrow, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v2, sum, type<real<8>>) := 0.0;
                                        {
                                            for(decl int<4> v23 = array.ref.elem.1D(v4, v25) .. array.ref.elem.1D(v4, v25+1) : 1) {
                                                composite.ref.elem(v2, sum, type<real<8>>) := composite.ref.elem(v2, sum, type<real<8>>)+array.ref.elem.1D(v7, v23)*array.ref.elem.1D(v8, array.ref.elem.1D(v3, v23));
                                            };
                                            v15 := array.ref.elem.1D(v4, v25)+ceil(array.ref.elem.1D(v4, v25+1)-array.ref.elem.1D(v4, v25)/1)*1;
                                        };
                                        array.ref.elem.1D(v11, v25) := composite.ref.elem(v2, sum, type<real<8>>);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastrow, type<int<4>>)-composite.ref.elem(v2, firstrow, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v27 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v9, v27) := array.ref.elem.1D(v11, v27);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v29 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v11, v29) := 0.0;
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v31 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v2, d, type<real<8>>) := composite.ref.elem(v2, d, type<real<8>>)+array.ref.elem.1D(v8, v31)*array.ref.elem.1D(v9, v31);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v2, alpha, type<real<8>>) := composite.ref.elem(v2, rho0, type<real<8>>)/composite.ref.elem(v2, d, type<real<8>>);
                                {
                                    for(decl int<4> v33 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v6, v33) := array.ref.elem.1D(v6, v33)+composite.ref.elem(v2, alpha, type<real<8>>)*array.ref.elem.1D(v8, v33);
                                        array.ref.elem.1D(v10, v33) := array.ref.elem.1D(v10, v33)-composite.ref.elem(v2, alpha, type<real<8>>)*array.ref.elem.1D(v9, v33);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v35 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v2, rho, type<real<8>>) := composite.ref.elem(v2, rho, type<real<8>>)+array.ref.elem.1D(v10, v35)*array.ref.elem.1D(v10, v35);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v2, beta, type<real<8>>) := composite.ref.elem(v2, rho, type<real<8>>)/composite.ref.elem(v2, rho0, type<real<8>>);
                                {
                                    for(decl int<4> v37 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v8, v37) := array.ref.elem.1D(v10, v37)+composite.ref.elem(v2, beta, type<real<8>>)*array.ref.elem.1D(v8, v37);
                                    };
                                    v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                            };
                            v16 := 1+ceil(v17+1-1/1)*1;
                        };
                        composite.ref.elem(v2, sum, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v43 = 1 .. composite.ref.elem(v2, lastrow, type<int<4>>)-composite.ref.elem(v2, firstrow, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v2, d, type<real<8>>) := 0.0;
                                {
                                    for(decl int<4> v41 = array.ref.elem.1D(v4, v43) .. array.ref.elem.1D(v4, v43+1)-1+1 : 1) {
                                        composite.ref.elem(v2, d, type<real<8>>) := composite.ref.elem(v2, d, type<real<8>>)+array.ref.elem.1D(v7, v41)*array.ref.elem.1D(v6, array.ref.elem.1D(v3, v41));
                                    };
                                    v15 := array.ref.elem.1D(v4, v43)+ceil(array.ref.elem.1D(v4, v43+1)-1+1-array.ref.elem.1D(v4, v43)/1)*1;
                                };
                                array.ref.elem.1D(v11, v43) := composite.ref.elem(v2, d, type<real<8>>);
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, lastrow, type<int<4>>)-composite.ref.elem(v2, firstrow, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v45 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v10, v45) := array.ref.elem.1D(v11, v45);
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v47 = 1 .. composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v2, d, type<real<8>>) := array.ref.elem.1D(v5, v47)-array.ref.elem.1D(v10, v47);
                                composite.ref.elem(v2, sum, type<real<8>>) := composite.ref.elem(v2, sum, type<real<8>>)+composite.ref.elem(v2, d, type<real<8>>)*composite.ref.elem(v2, d, type<real<8>>);
                            };
                            v14 := 1+ceil(composite.ref.elem(v2, lastcol, type<int<4>>)-composite.ref.elem(v2, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            array.ref.elem.1D(v12, 0) := sqrt(composite.ref.elem(v2, sum, type<real<8>>));
                        };
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v237));
                    {
                        v238 := 0.0;
                        v239 := 0.0;
                    };
                    {
                        for(decl int<4> v276 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            v238 := v238+vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v276)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v276);
                            v239 := v239+vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v276)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v276);
                        };
                        v232 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                    {
                        v239 := 1.0/sqrt(v239);
                        v236 := 12.0+1.0/v238;
                    };
                    {
                        if(v280==1) {
                            printf(string.as.char.pointer("   iteration           ||r||                 zeta\n"), varlist.pack(()));
                        } else { };
                        printf(string.as.char.pointer("    %5d       %20.14e%20.13e\n"), varlist.pack((v280, v237, v236)));
                    };
                    {
                        for(decl int<4> v278 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v278) := v239*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v278);
                        };
                        v232 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                };
                v234 := 1+ceil(15+1-1/1)*1;
            };
        };
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v215, int<4> v216){
            decl ref<real<8>> v217 =  var(0.0);
            decl ref<real<8>> v218 =  var(0.0);
            v218 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v212){
                decl ref<real<8>> v213 =  var(0.0);
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v208, ref<array<real<8>,1>> v209){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v210 =  var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>));
                    gettimeofday(scalar.to.array(v210),  var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>)));
                    if(composite.ref.elem(v208, sec, type<int<4>>)<0) composite.ref.elem(v208, sec, type<int<4>>) := composite.ref.elem(v210, tv_sec, type<int<8>>) else { };
                    array.ref.elem.1D(v209, 0) := composite.ref.elem(v210, tv_sec, type<int<8>>)-composite.ref.elem(v208, sec, type<int<4>>)+1.0e-6*composite.ref.elem(v210, tv_usec, type<int<8>>);
                }(v212, scalar.to.array(v213));
                return v213;
            }(v215);
            v217 := v218-vector.ref.elem(composite.ref.elem(v215, start, type<vector<real<8>,64>>), v216);
            vector.ref.elem(composite.ref.elem(v215, elapsed, type<vector<real<8>,64>>), v216) := vector.ref.elem(composite.ref.elem(v215, elapsed, type<vector<real<8>,64>>), v216)+v217;
        }(v1, 1);
        v240 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v220, int<4> v221){
            return vector.ref.elem(composite.ref.elem(v220, elapsed, type<vector<real<8>,64>>), v221);
        }(v1, 1);
        printf(string.as.char.pointer(" Benchmark completed\n"), varlist.pack(()));
        v245 := 1.0e-10;
        if(v242!='U') {
            if(fabs(v236-v244)<=v245) {
                v243 := 1;
                printf(string.as.char.pointer(" VERIFICATION SUCCESSFUL\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta is    %20.12e\n"), varlist.pack((v236)));
                printf(string.as.char.pointer(" Error is   %20.12e\n"), varlist.pack((v236-v244)));
            } else {
                v243 := 0;
                printf(string.as.char.pointer(" VERIFICATION FAILED\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta                %20.12e\n"), varlist.pack((v236)));
                printf(string.as.char.pointer(" The correct zeta is %20.12e\n"), varlist.pack((v244)));
            };
        } else {
            v243 := 0;
            printf(string.as.char.pointer(" Problem size unknown\n"), varlist.pack(()));
            printf(string.as.char.pointer(" NO VERIFICATION PERFORMED\n"), varlist.pack(()));
        };
        if(real.ne(v240, 0.0)) {
            v241 := 2.0*15*7000*3.0+8*8+1+25.0*5.0+8*8+1+3.0/v240/1000000.0;
        } else {
            v241 := 0.0;
        };
        fun(ref<array<char,1>> v184, char v185, int<4> v186, int<4> v187, int<4> v188, int<4> v189, int<4> v190, real<8> v191, real<8> v192, ref<array<char,1>> v193, int<4> v194, ref<array<char,1>> v195, ref<array<char,1>> v196, ref<array<char,1>> v197, ref<array<char,1>> v198, ref<array<char,1>> v199, ref<array<char,1>> v200, ref<array<char,1>> v201, ref<array<char,1>> v202, ref<array<char,1>> v203){
            decl ref<array<char,1>> v204 = string.as.char.pointer("1000");
            printf(string.as.char.pointer("\n\n %s Benchmark Completed\n"), varlist.pack((v184)));
            printf(string.as.char.pointer(" Class           =                        %c\n"), varlist.pack((v185)));
            if(v187==0&&bind(){fun(int<4> v205)return v205==0(v188)}) printf(string.as.char.pointer(" Size            =             %12d\n"), varlist.pack((v186))) else printf(string.as.char.pointer(" Size            =              %3dx%3dx%3d\n"), varlist.pack((v186, v187, v188)));
            printf(string.as.char.pointer(" Iterations      =             %12d\n"), varlist.pack((v189)));
            printf(string.as.char.pointer(" Threads         =             %12d\n"), varlist.pack((v190)));
            printf(string.as.char.pointer(" Time in seconds =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Mop/s total     =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Operation type  = %24s\n"), varlist.pack((v193)));
            if(int.ne(v194, 0)) printf(string.as.char.pointer(" Verification    =               SUCCESSFUL\n"), varlist.pack(())) else printf(string.as.char.pointer(" Verification    =             UNSUCCESSFUL\n"), varlist.pack(()));
            printf(string.as.char.pointer(" Version         =             %12s\n"), varlist.pack((v195)));
            printf(string.as.char.pointer(" Compile date    =             %12s\n"), varlist.pack((v196)));
            printf(string.as.char.pointer("\n Compile options:\n"), varlist.pack(()));
            printf(string.as.char.pointer("    CC           = %s\n"), varlist.pack((v197)));
            printf(string.as.char.pointer("    CLINK        = %s\n"), varlist.pack((v198)));
            printf(string.as.char.pointer("    C_LIB        = %s\n"), varlist.pack((v199)));
            printf(string.as.char.pointer("    C_INC        = %s\n"), varlist.pack((v200)));
            printf(string.as.char.pointer("    CFLAGS       = %s\n"), varlist.pack((v201)));
            printf(string.as.char.pointer("    CLINKFLAGS   = %s\n"), varlist.pack((v202)));
            printf(string.as.char.pointer("    RAND         = %s\n"), varlist.pack((v203)));
        }(string.as.char.pointer("CG"), v242, 7000, 0, 0, 15, v235, v240, v241, string.as.char.pointer("          floating point"), v243, string.as.char.pointer("2.3"), string.as.char.pointer("02 Dec 2010"), string.as.char.pointer("cc"), string.as.char.pointer("cc"), string.as.char.pointer("-lm"), string.as.char.pointer("-I../common"), string.as.char.pointer("-O3 "), string.as.char.pointer("-lm"), string.as.char.pointer("randdp"));
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v229, ref<array<array<char,1>,1>> v230){
        decl ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v1 = ( new(struct{naa:=0, nzz:=0, firstrow:=0, lastrow:=0, firstcol:=0, lastcol:=0, colidx:=vector.init.uniform(0, 637001), rowstr:=vector.init.uniform(0, 7002), iv:=vector.init.uniform(0, 14002), arow:=vector.init.uniform(0, 637001), acol:=vector.init.uniform(0, 637001), v:=vector.init.uniform(0.0, 7002), aelt:=vector.init.uniform(0.0, 637001), a:=vector.init.uniform(0.0, 637001), x:=vector.init.uniform(0.0, 7003), z:=vector.init.uniform(0.0, 7003), p:=vector.init.uniform(0.0, 7003), q:=vector.init.uniform(0.0, 7003), r:=vector.init.uniform(0.0, 7003), w:=vector.init.uniform(0.0, 7003), amult:=0.0, tran:=0.0, d:=0.0, sum:=0.0, rho:=0.0, rho0:=0.0, alpha:=0.0, beta:=0.0, start:=vector.init.uniform(0.0, 64), elapsed:=vector.init.uniform(0.0, 64), sec:=(CAST<int<4>>(0)-1)}));
        decl ref<int<4>> v231 = ( var(0));
        decl ref<int<4>> v232 = ( var(0));
        decl ref<int<4>> v233 = ( var(0));
        decl ref<int<4>> v234 = ( var(0));
        decl ref<int<4>> v235 = ( var(1));
        decl ref<real<8>> v236 = ( var(0.0));
        decl ref<real<8>> v237 = ( var(0.0));
        decl ref<real<8>> v238 = ( var(0.0));
        decl ref<real<8>> v239 = ( var(0.0));
        decl ref<real<8>> v240 = ( var(0.0));
        decl ref<real<8>> v241 = ( var(0.0));
        decl ref<char> v242 = ( var('\0'));
        decl ref<int<4>> v243 = ( var(0));
        decl ref<real<8>> v244 = ( var(0.0));
        decl ref<real<8>> v245 = ( var(0.0));
        (composite.ref.elem(v1, firstrow, type<int<4>>) := 1);
        (composite.ref.elem(v1, lastrow, type<int<4>>) := 7000);
        (composite.ref.elem(v1, firstcol, type<int<4>>) := 1);
        (composite.ref.elem(v1, lastcol, type<int<4>>) := 7000);
        if(((((7000==1400)&&bind(){fun()return (8==7)()})&&bind(){fun()return (15==15)()})&&bind(){fun()return (12.0==10.0)()})) {
            (v242 := 'S');
            (v244 := 8.5971775078648);
        } else if(((((7000==7000)&&bind(){fun()return (8==8)()})&&bind(){fun()return (15==15)()})&&bind(){fun()return (12.0==12.0)()})) {
            (v242 := 'W');
            (v244 := 10.362595087124);
        } else if(((((7000==14000)&&bind(){fun()return (8==11)()})&&bind(){fun()return (15==15)()})&&bind(){fun()return (12.0==20.0)()})) {
            (v242 := 'A');
            (v244 := 17.130235054029);
        } else if(((((7000==75000)&&bind(){fun()return (8==13)()})&&bind(){fun()return (15==75)()})&&bind(){fun()return (12.0==60.0)()})) {
            (v242 := 'B');
            (v244 := 22.712745482631);
        } else if(((((7000==150000)&&bind(){fun()return (8==15)()})&&bind(){fun()return (15==75)()})&&bind(){fun()return (12.0==110.0)()})) {
            (v242 := 'C');
            (v244 := 28.973605592845);
        } else {
            (v242 := 'U');
        };
        printf(string.as.char.pointer("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - CG Benchmark\n"), varlist.pack(()));
        printf(string.as.char.pointer(" Size: %10d\n"), varlist.pack((7000)));
        printf(string.as.char.pointer(" Iterations: %5d\n"), varlist.pack((15)));
        (composite.ref.elem(v1, naa, type<int<4>>) := 7000);
        (composite.ref.elem(v1, nzz, type<int<4>>) := (((7000*(8+1))*(8+1))+(7000*(8+2))));
        (composite.ref.elem(v1, tran, type<real<8>>) := 314159265.0);
        (composite.ref.elem(v1, amult, type<real<8>>) := 1220703125.0);
        (v236 := fun(ref<array<real<8>,1>> v95, real<8> v96){
            decl ref<real<8>> v97 = ( var(0.0));
            decl ref<real<8>> v98 = ( var(0.0));
            decl ref<real<8>> v99 = ( var(0.0));
            decl ref<real<8>> v100 = ( var(0.0));
            decl ref<real<8>> v101 = ( var(0.0));
            decl ref<real<8>> v102 = ( var(0.0));
            decl ref<real<8>> v103 = ( var(0.0));
            decl ref<real<8>> v104 = ( var(0.0));
            decl ref<real<8>> v105 = ( var(0.0));
            (v97 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v96));
            (v101 := CAST<real<8>>(real.to.int(( *v97), 4)));
            (v102 := (v96-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v101))));
            (v97 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *array.ref.elem.1D(v95, 0))));
            (v103 := CAST<real<8>>(real.to.int(( *v97), 4)));
            (v104 := (( *array.ref.elem.1D(v95, 0))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v103))));
            (v97 := ((( *v101)*( *v104))+(( *v102)*( *v103))));
            (v98 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v97)))));
            (v105 := (( *v97)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v98))));
            (v99 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v105))+(( *v102)*( *v104))));
            (v100 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v99)))));
            (array.ref.elem.1D(v95, 0) := (( *v99)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v100))));
            return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *array.ref.elem.1D(v95, 0)));
        }(scalar.to.array(composite.ref.elem(v1, tran, type<real<8>>)), ( *composite.ref.elem(v1, amult, type<real<8>>))));
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v135, int<4> v136, int<4> v137, ref<array<real<8>,1>> v138, ref<array<int<4>,1>> v139, ref<array<int<4>,1>> v140, int<4> v141, int<4> v142, int<4> v143, int<4> v144, int<4> v145, real<8> v146, ref<array<int<4>,1>> v147, ref<array<int<4>,1>> v148, ref<array<real<8>,1>> v149, ref<array<real<8>,1>> v150, ref<array<int<4>,1>> v151, real<8> v152){
            decl ref<int<4>> v153 = ( var(0));
            decl ref<int<4>> v154 = ( var(0));
            decl ref<int<4>> v155 = ( var(0));
            decl ref<int<4>> v156 = ( var(0));
            decl ref<int<4>> v157 = ( var(0));
            decl ref<int<4>> v158 = ( var(0));
            decl ref<int<4>> v159 = ( var(0));
            decl ref<real<8>> v160 = ( var(0.0));
            decl ref<real<8>> v161 = ( var(0.0));
            decl ref<real<8>> v162 = ( var(0.0));
            decl ref<int<4>> v163 = ( var(0));
            (v160 := 1.0);
            (v161 := pow(v146, (1.0/CAST<real<8>>(v136))));
            (v154 := 0);
            {
                <m id=17>for(decl int<4> v165 = 1 .. (v136+1) : 1) {
                    (array.ref.elem.1D(v139, CAST<uint<4>>((v136+v165))) := 0);
                }</m>;
                (v153 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v136+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                for(decl int<4> v177 = 1 .. (v136+1) : 1) {
                    (v159 := v141);
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v107, int<4> v108, int<4> v109, ref<array<real<8>,1>> v110, ref<array<int<4>,1>> v111, ref<array<int<4>,1>> v112, ref<array<int<4>,1>> v113){
                        decl ref<int<4>> v114 = ( var(0));
                        decl ref<int<4>> v115 = ( var(0));
                        decl ref<int<4>> v116 = ( var(0));
                        decl ref<int<4>> v117 = ( var(0));
                        decl ref<int<4>> v118 = ( var(0));
                        decl ref<real<8>> v119 = ( var(0.0));
                        decl ref<real<8>> v120 = ( var(0.0));
                        (v116 := 0);
                        (v115 := 0);
                        (v114 := 1);
                        {
                            (v114 := (2*( *v114)));
                            while((( *v114)<v108)) {
                                (v114 := (2*( *v114)));
                            };
                        };
                        while((( *v116)<v109)) {
                            (v119 := fun(ref<array<real<8>,1>> v95, real<8> v96){
                                decl ref<real<8>> v97 = ( var(0.0));
                                decl ref<real<8>> v98 = ( var(0.0));
                                decl ref<real<8>> v99 = ( var(0.0));
                                decl ref<real<8>> v100 = ( var(0.0));
                                decl ref<real<8>> v101 = ( var(0.0));
                                decl ref<real<8>> v102 = ( var(0.0));
                                decl ref<real<8>> v103 = ( var(0.0));
                                decl ref<real<8>> v104 = ( var(0.0));
                                decl ref<real<8>> v105 = ( var(0.0));
                                (v97 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v96));
                                (v101 := CAST<real<8>>(real.to.int(( *v97), 4)));
                                (v102 := (v96-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v101))));
                                (v97 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *array.ref.elem.1D(v95, 0))));
                                (v103 := CAST<real<8>>(real.to.int(( *v97), 4)));
                                (v104 := (( *array.ref.elem.1D(v95, 0))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v103))));
                                (v97 := ((( *v101)*( *v104))+(( *v102)*( *v103))));
                                (v98 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v97)))));
                                (v105 := (( *v97)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v98))));
                                (v99 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v105))+(( *v102)*( *v104))));
                                (v100 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v99)))));
                                (array.ref.elem.1D(v95, 0) := (( *v99)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v100))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *array.ref.elem.1D(v95, 0)));
                            }(scalar.to.array(composite.ref.elem(v107, tran, type<real<8>>)), ( *composite.ref.elem(v107, amult, type<real<8>>))));
                            (v120 := fun(ref<array<real<8>,1>> v95, real<8> v96){
                                decl ref<real<8>> v97 = ( var(0.0));
                                decl ref<real<8>> v98 = ( var(0.0));
                                decl ref<real<8>> v99 = ( var(0.0));
                                decl ref<real<8>> v100 = ( var(0.0));
                                decl ref<real<8>> v101 = ( var(0.0));
                                decl ref<real<8>> v102 = ( var(0.0));
                                decl ref<real<8>> v103 = ( var(0.0));
                                decl ref<real<8>> v104 = ( var(0.0));
                                decl ref<real<8>> v105 = ( var(0.0));
                                (v97 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v96));
                                (v101 := CAST<real<8>>(real.to.int(( *v97), 4)));
                                (v102 := (v96-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v101))));
                                (v97 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *array.ref.elem.1D(v95, 0))));
                                (v103 := CAST<real<8>>(real.to.int(( *v97), 4)));
                                (v104 := (( *array.ref.elem.1D(v95, 0))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v103))));
                                (v97 := ((( *v101)*( *v104))+(( *v102)*( *v103))));
                                (v98 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v97)))));
                                (v105 := (( *v97)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v98))));
                                (v99 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v105))+(( *v102)*( *v104))));
                                (v100 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v99)))));
                                (array.ref.elem.1D(v95, 0) := (( *v99)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v100))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *array.ref.elem.1D(v95, 0)));
                            }(scalar.to.array(composite.ref.elem(v107, tran, type<real<8>>)), ( *composite.ref.elem(v107, amult, type<real<8>>))));
                            (v118 := (fun(real<8> v92, int<4> v93){
                                return CAST<int<4>>((CAST<real<8>>(v93)*v92));
                            }(( *v120), ( *v114))+1));
                            if((( *v118)>v108)) continue else { };
                            if((( *array.ref.elem.1D(v113, CAST<uint<4>>(( *v118))))==0)) {
                                (array.ref.elem.1D(v113, CAST<uint<4>>(( *v118))) := 1);
                                (v115 := (( *v115)+1));
                                (array.ref.elem.1D(v112, CAST<uint<4>>(( *v115))) := ( *v118));
                                (v116 := (( *v116)+1));
                                (array.ref.elem.1D(v110, CAST<uint<4>>(( *v116))) := ( *v119));
                                (array.ref.elem.1D(v111, CAST<uint<4>>(( *v116))) := ( *v118));
                            } else { };
                        };
                        {
                            for(decl int<4> v122 = 1 .. (( *v115)+1) : 1) {
                                (v118 := ( *array.ref.elem.1D(v112, CAST<uint<4>>(v122))));
                                (array.ref.elem.1D(v113, CAST<uint<4>>(( *v118))) := 0);
                            };
                            (v117 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v115)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                    }(v135, v136, ( *v159), v150, v151, scalar.to.array(array.ref.elem.1D(v139, CAST<uint<4>>(0))), scalar.to.array(array.ref.elem.1D(v139, CAST<uint<4>>(v136))));
                    fun(int<4> v124, ref<array<real<8>,1>> v125, ref<array<int<4>,1>> v126, ref<array<int<4>,1>> v127, int<4> v128, real<8> v129){
                        decl ref<int<4>> v130 = ( var(0));
                        decl ref<int<4>> v131 = ( var(0));
                        (v131 := 0);
                        {
                            for(decl int<4> v133 = 1 .. (( *array.ref.elem.1D(v127, 0))+1) : 1) {
                                if((( *array.ref.elem.1D(v126, CAST<uint<4>>(v133)))==v128)) {
                                    (array.ref.elem.1D(v125, CAST<uint<4>>(v133)) := v129);
                                    (v131 := 1);
                                } else { };
                            };
                            (v130 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *array.ref.elem.1D(v127, 0))+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        if((( *v131)==0)) {
                            (array.ref.elem.1D(v127, 0) := (( *array.ref.elem.1D(v127, 0))+1));
                            (array.ref.elem.1D(v125, CAST<uint<4>>(( *array.ref.elem.1D(v127, 0)))) := v129);
                            (array.ref.elem.1D(v126, CAST<uint<4>>(( *array.ref.elem.1D(v127, 0)))) := v128);
                        } else { };
                    }(v136, v150, v151, scalar.to.array(v159), v177, 0.5);
                    {
                        for(decl int<4> v175 = 1 .. (( *v159)+1) : 1) {
                            (v163 := ( *array.ref.elem.1D(v151, CAST<uint<4>>(v175))));
                            if(((( *v163)>=v144)&&bind(){fun(ref<int<4>> v171, int<4> v172)return (( *v171)<=v172)(v163, v145)})) {
                                (v162 := (( *v160)*( *array.ref.elem.1D(v150, CAST<uint<4>>(v175)))));
                                {
                                    for(decl int<4> v170 = 1 .. (( *v159)+1) : 1) {
                                        (v158 := ( *array.ref.elem.1D(v151, CAST<uint<4>>(v170))));
                                        if(((( *v158)>=v142)&&bind(){fun(int<4> v166, ref<int<4>> v167)return (( *v167)<=v166)(v143, v158)})) {
                                            (v154 := (( *v154)+1));
                                            if((( *v154)>v137)) {
                                                printf(string.as.char.pointer("Space for matrix elements exceeded in"), varlist.pack(()));
                                                printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((( *v154), v137)));
                                                printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((v177)));
                                                exit(1);
                                            } else { };
                                            (array.ref.elem.1D(v148, CAST<uint<4>>(( *v154))) := ( *v163));
                                            (array.ref.elem.1D(v147, CAST<uint<4>>(( *v154))) := ( *v158));
                                            (array.ref.elem.1D(v149, CAST<uint<4>>(( *v154))) := (( *array.ref.elem.1D(v150, CAST<uint<4>>(v170)))*( *v162)));
                                        } else { };
                                    };
                                    (v157 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v159)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            } else { };
                        };
                        (v156 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v159)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    (v160 := (( *v160)*( *v161)));
                };
                (v155 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v136+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                for(decl int<4> v182 = v142 .. (v143+1) : 1) {
                    if(((v182>=v144)&&bind(){fun(ref<int<4>> v178, int<4> v179)return (( *v178)<=v179)(( var(v182)), v145)})) {
                        (v155 := (v136+v182));
                        (v154 := (( *v154)+1));
                        if((( *v154)>v137)) {
                            printf(string.as.char.pointer("Space for matrix elements exceeded in makea\n"), varlist.pack(()));
                            printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((( *v154), v137)));
                            printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((( *v155))));
                            exit(1);
                        } else { };
                        (array.ref.elem.1D(v148, CAST<uint<4>>(( *v154))) := v182);
                        (array.ref.elem.1D(v147, CAST<uint<4>>(( *v154))) := v182);
                        (array.ref.elem.1D(v149, CAST<uint<4>>(( *v154))) := (v146-v152));
                    } else { };
                };
                (v153 := (v142+(CAST<int<4>>(ceil((CAST<real<8>>(((v143+1)-v142))/CAST<real<8>>(1))))*1)));
            };
            fun(ref<array<real<8>,1>> v49, ref<array<int<4>,1>> v50, ref<array<int<4>,1>> v51, int<4> v52, ref<array<int<4>,1>> v53, ref<array<int<4>,1>> v54, ref<array<real<8>,1>> v55, int<4> v56, int<4> v57, ref<array<real<8>,1>> v58, ref<array<int<4>,1>> v59, ref<array<int<4>,1>> v60, int<4> v61){
                decl ref<int<4>> v62 = ( var(0));
                decl ref<int<4>> v63 = ( var(0));
                decl ref<int<4>> v64 = ( var(0));
                decl ref<int<4>> v65 = ( var(0));
                decl ref<int<4>> v66 = ( var(0));
                decl ref<int<4>> v67 = ( var(0));
                decl ref<int<4>> v68 = ( var(0));
                decl ref<real<8>> v69 = ( var(0.0));
                (v62 := ((v57-v56)+1));
                {
                    <m id=15>for(decl int<4> v71 = 1 .. (v52+1) : 1) {
                        (array.ref.elem.1D(v51, CAST<uint<4>>(v71)) := 0);
                        (array.ref.elem.1D(v59, CAST<uint<4>>(v71)) := 0);
                    }</m>;
                    (v64 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v52+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (array.ref.elem.1D(v51, CAST<uint<4>>((v52+1))) := 0);
                {
                    for(decl int<4> v73 = 1 .. (v61+1) : 1) {
                        (v64 := (((( *array.ref.elem.1D(v53, CAST<uint<4>>(v73)))-v56)+1)+1));
                        (array.ref.elem.1D(v51, CAST<uint<4>>(( *v64))) := (( *array.ref.elem.1D(v51, CAST<uint<4>>(( *v64))))+1));
                    };
                    (v66 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v61+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (array.ref.elem.1D(v51, CAST<uint<4>>(1)) := 1);
                {
                    for(decl int<4> v75 = 2 .. ((( *v62)+1)+1) : 1) {
                        (array.ref.elem.1D(v51, CAST<uint<4>>(v75)) := (( *array.ref.elem.1D(v51, CAST<uint<4>>(v75)))+( *array.ref.elem.1D(v51, CAST<uint<4>>((v75-1))))));
                    };
                    (v64 := (2+(CAST<int<4>>(ceil((CAST<real<8>>((((( *v62)+1)+1)-2))/CAST<real<8>>(1))))*1)));
                };
                {
                    for(decl int<4> v77 = 1 .. (v61+1) : 1) {
                        (v64 := ((( *array.ref.elem.1D(v53, CAST<uint<4>>(v77)))-v56)+1));
                        (v67 := ( *array.ref.elem.1D(v51, CAST<uint<4>>(( *v64)))));
                        (array.ref.elem.1D(v49, CAST<uint<4>>(( *v67))) := ( *array.ref.elem.1D(v55, CAST<uint<4>>(v77))));
                        (array.ref.elem.1D(v50, CAST<uint<4>>(( *v67))) := ( *array.ref.elem.1D(v54, CAST<uint<4>>(v77))));
                        (array.ref.elem.1D(v51, CAST<uint<4>>(( *v64))) := (( *array.ref.elem.1D(v51, CAST<uint<4>>(( *v64))))+1));
                    };
                    (v66 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v61+1)-1))/CAST<real<8>>(1))))*1)));
                };
                {
                    for(decl int<4> v79 = (CAST<int<4>>(0)-( *v62)) .. ((CAST<int<4>>(0)-1)+1) : 1) {
                        (array.ref.elem.1D(v51, CAST<uint<4>>(((CAST<int<4>>(0)-v79)+1))) := ( *array.ref.elem.1D(v51, CAST<uint<4>>((CAST<int<4>>(0)-v79)))));
                    };
                    (v64 := (( *v62)+(CAST<int<4>>(ceil((CAST<real<8>>((((CAST<int<4>>(0)-1)+1)-( *v62)))/CAST<real<8>>(1))))*1)));
                };
                (array.ref.elem.1D(v51, CAST<uint<4>>(1)) := 1);
                (v66 := 0);
                {
                    <m id=16>for(decl int<4> v81 = 1 .. (v52+1) : 1) {
                        (array.ref.elem.1D(v58, CAST<uint<4>>(v81)) := 0.0);
                        (array.ref.elem.1D(v59, CAST<uint<4>>(v81)) := 0);
                    }</m>;
                    (v63 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v52+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (v65 := ( *array.ref.elem.1D(v51, CAST<uint<4>>(1))));
                {
                    for(decl int<4> v90 = 1 .. (( *v62)+1) : 1) {
                        (v68 := 0);
                        {
                            for(decl int<4> v86 = ( *v65) .. ( *array.ref.elem.1D(v51, CAST<uint<4>>((v90+1)))) : 1) {
                                (v63 := ( *array.ref.elem.1D(v50, CAST<uint<4>>(v86))));
                                (array.ref.elem.1D(v58, CAST<uint<4>>(( *v63))) := (( *array.ref.elem.1D(v58, CAST<uint<4>>(( *v63))))+( *array.ref.elem.1D(v49, CAST<uint<4>>(v86)))));
                                if(((( *array.ref.elem.1D(v59, CAST<uint<4>>(( *v63))))==0)&&bind(){fun(ref<array<real<8>,1>> v82, ref<int<4>> v83)return real.ne(( *array.ref.elem.1D(v82, CAST<uint<4>>(( *v83)))), 0.0)(v58, v63)})) {
                                    (array.ref.elem.1D(v59, CAST<uint<4>>(( *v63))) := 1);
                                    (v68 := (( *v68)+1));
                                    (array.ref.elem.1D(v60, CAST<uint<4>>(( *v68))) := ( *v63));
                                } else { };
                            };
                            (v67 := (( *v65)+(CAST<int<4>>(ceil((CAST<real<8>>((( *array.ref.elem.1D(v51, CAST<uint<4>>((v90+1))))-( *v65)))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl int<4> v88 = 1 .. (( *v68)+1) : 1) {
                                (v63 := ( *array.ref.elem.1D(v60, CAST<uint<4>>(v88))));
                                (array.ref.elem.1D(v59, CAST<uint<4>>(( *v63))) := 0);
                                (v69 := ( *array.ref.elem.1D(v58, CAST<uint<4>>(( *v63)))));
                                (array.ref.elem.1D(v58, CAST<uint<4>>(( *v63))) := 0.0);
                                if(real.ne(( *v69), 0.0)) {
                                    (v66 := (( *v66)+1));
                                    (array.ref.elem.1D(v49, CAST<uint<4>>(( *v66))) := ( *v69));
                                    (array.ref.elem.1D(v50, CAST<uint<4>>(( *v66))) := ( *v63));
                                } else { };
                            };
                            (v67 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v68)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        (v65 := ( *array.ref.elem.1D(v51, CAST<uint<4>>((v90+1)))));
                        (array.ref.elem.1D(v51, CAST<uint<4>>((v90+1))) := (( *v66)+( *array.ref.elem.1D(v51, CAST<uint<4>>(1)))));
                    };
                    (v64 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v62)+1)-1))/CAST<real<8>>(1))))*1)));
                };
            }(v138, v139, v140, v136, v147, v148, v149, v142, v143, v150, scalar.to.array(array.ref.elem.1D(v151, CAST<uint<4>>(0))), scalar.to.array(array.ref.elem.1D(v151, CAST<uint<4>>(v136))), ( *v154));
        }(v1, ( *composite.ref.elem(v1, naa, type<int<4>>)), ( *composite.ref.elem(v1, nzz, type<int<4>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), 8, ( *composite.ref.elem(v1, firstrow, type<int<4>>)), ( *composite.ref.elem(v1, lastrow, type<int<4>>)), ( *composite.ref.elem(v1, firstcol, type<int<4>>)), ( *composite.ref.elem(v1, lastcol, type<int<4>>)), 1.0e-1, ref.vector.to.ref.array(composite.ref.elem(v1, arow, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, acol, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, aelt, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, v, type<vector<real<8>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, iv, type<vector<int<4>,14002>>)), 12.0);
        <m id=24>{
            {
                <m id=18>for(decl int<4> v264 = 1 .. (((( *composite.ref.elem(v1, lastrow, type<int<4>>))-( *composite.ref.elem(v1, firstrow, type<int<4>>)))+1)+1) : 1) {
                    {
                        for(decl int<4> v262 = ( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>(v264))) .. ( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>((v264+1)))) : 1) {
                            (vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), CAST<uint<4>>(v262)) := ((( *vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), CAST<uint<4>>(v262)))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1));
                        };
                        (v233 := (( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>(v264)))+(CAST<int<4>>(ceil((CAST<real<8>>((( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>((v264+1))))-( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>(v264)))))/CAST<real<8>>(1))))*1)));
                    };
                }</m>;
                (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastrow, type<int<4>>))-( *composite.ref.elem(v1, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                <m id=19>for(decl int<4> v266 = 1 .. ((7000+1)+1) : 1) {
                    (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v266)) := 1.0);
                }</m>;
                (v231 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((7000+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            <m id=5>(v236 := 0.0)</m>;
            {
                for(decl int<4> v272 = 1 .. (1+1) : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v2, ref<array<int<4>,1>> v3, ref<array<int<4>,1>> v4, ref<array<real<8>,1>> v5, ref<array<real<8>,1>> v6, ref<array<real<8>,1>> v7, ref<array<real<8>,1>> v8, ref<array<real<8>,1>> v9, ref<array<real<8>,1>> v10, ref<array<real<8>,1>> v11, ref<array<real<8>,1>> v12){
                        decl ref<int<4>> v13 = ( var(0));
                        decl ref<int<4>> v14 = ( var(0));
                        decl ref<int<4>> v15 = ( var(0));
                        decl ref<int<4>> v16 = ( var(0));
                        decl ref<int<4>> v17 = ( var(25));
                        <m id=1>(composite.ref.elem(v2, rho, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=1>for(decl int<4> v19 = 1 .. ((( *composite.ref.elem(v2, naa, type<int<4>>))+1)+1) : 1) {
                                (array.ref.elem.1D(v9, CAST<uint<4>>(v19)) := 0.0);
                                (array.ref.elem.1D(v6, CAST<uint<4>>(v19)) := 0.0);
                                (array.ref.elem.1D(v10, CAST<uint<4>>(v19)) := ( *array.ref.elem.1D(v5, CAST<uint<4>>(v19))));
                                (array.ref.elem.1D(v8, CAST<uint<4>>(v19)) := ( *array.ref.elem.1D(v10, CAST<uint<4>>(v19))));
                                (array.ref.elem.1D(v11, CAST<uint<4>>(v19)) := 0.0);
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((( *composite.ref.elem(v2, naa, type<int<4>>))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=2>for(decl int<4> v21 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v2, rho, type<real<8>>) := (( *composite.ref.elem(v2, rho, type<real<8>>))+(( *array.ref.elem.1D(v5, CAST<uint<4>>(v21)))*( *array.ref.elem.1D(v5, CAST<uint<4>>(v21))))));
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl int<4> v39 = 1 .. (( *v17)+1) : 1) {
                                <m id=3>{
                                    (composite.ref.elem(v2, rho0, type<real<8>>) := ( *composite.ref.elem(v2, rho, type<real<8>>)));
                                    (composite.ref.elem(v2, d, type<real<8>>) := 0.0);
                                    (composite.ref.elem(v2, rho, type<real<8>>) := 0.0);
                                }</m>;
                                {
                                    <m id=4>for(decl int<4> v25 = 1 .. (((( *composite.ref.elem(v2, lastrow, type<int<4>>))-( *composite.ref.elem(v2, firstrow, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v2, sum, type<real<8>>) := 0.0);
                                        {
                                            for(decl int<4> v23 = ( *array.ref.elem.1D(v4, CAST<uint<4>>(v25))) .. ( *array.ref.elem.1D(v4, CAST<uint<4>>((v25+1)))) : 1) {
                                                (composite.ref.elem(v2, sum, type<real<8>>) := (( *composite.ref.elem(v2, sum, type<real<8>>))+(( *array.ref.elem.1D(v7, CAST<uint<4>>(v23)))*( *array.ref.elem.1D(v8, CAST<uint<4>>(( *array.ref.elem.1D(v3, CAST<uint<4>>(v23)))))))));
                                            };
                                            (v15 := (( *array.ref.elem.1D(v4, CAST<uint<4>>(v25)))+(CAST<int<4>>(ceil((CAST<real<8>>((( *array.ref.elem.1D(v4, CAST<uint<4>>((v25+1))))-( *array.ref.elem.1D(v4, CAST<uint<4>>(v25)))))/CAST<real<8>>(1))))*1)));
                                        };
                                        (array.ref.elem.1D(v11, CAST<uint<4>>(v25)) := ( *composite.ref.elem(v2, sum, type<real<8>>)));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastrow, type<int<4>>))-( *composite.ref.elem(v2, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=5>for(decl int<4> v27 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v9, CAST<uint<4>>(v27)) := ( *array.ref.elem.1D(v11, CAST<uint<4>>(v27))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=6>for(decl int<4> v29 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v11, CAST<uint<4>>(v29)) := 0.0);
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=7>for(decl int<4> v31 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v2, d, type<real<8>>) := (( *composite.ref.elem(v2, d, type<real<8>>))+(( *array.ref.elem.1D(v8, CAST<uint<4>>(v31)))*( *array.ref.elem.1D(v9, CAST<uint<4>>(v31))))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=2>(composite.ref.elem(v2, alpha, type<real<8>>) := (( *composite.ref.elem(v2, rho0, type<real<8>>))/( *composite.ref.elem(v2, d, type<real<8>>))))</m>;
                                {
                                    <m id=8>for(decl int<4> v33 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v6, CAST<uint<4>>(v33)) := (( *array.ref.elem.1D(v6, CAST<uint<4>>(v33)))+(( *composite.ref.elem(v2, alpha, type<real<8>>))*( *array.ref.elem.1D(v8, CAST<uint<4>>(v33))))));
                                        (array.ref.elem.1D(v10, CAST<uint<4>>(v33)) := (( *array.ref.elem.1D(v10, CAST<uint<4>>(v33)))-(( *composite.ref.elem(v2, alpha, type<real<8>>))*( *array.ref.elem.1D(v9, CAST<uint<4>>(v33))))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=9>for(decl int<4> v35 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v2, rho, type<real<8>>) := (( *composite.ref.elem(v2, rho, type<real<8>>))+(( *array.ref.elem.1D(v10, CAST<uint<4>>(v35)))*( *array.ref.elem.1D(v10, CAST<uint<4>>(v35))))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=3>(composite.ref.elem(v2, beta, type<real<8>>) := (( *composite.ref.elem(v2, rho, type<real<8>>))/( *composite.ref.elem(v2, rho0, type<real<8>>))))</m>;
                                {
                                    <m id=10>for(decl int<4> v37 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v8, CAST<uint<4>>(v37)) := (( *array.ref.elem.1D(v10, CAST<uint<4>>(v37)))+(( *composite.ref.elem(v2, beta, type<real<8>>))*( *array.ref.elem.1D(v8, CAST<uint<4>>(v37))))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            };
                            (v16 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v17)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=4>(composite.ref.elem(v2, sum, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=11>for(decl int<4> v43 = 1 .. (((( *composite.ref.elem(v2, lastrow, type<int<4>>))-( *composite.ref.elem(v2, firstrow, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v2, d, type<real<8>>) := 0.0);
                                {
                                    for(decl int<4> v41 = ( *array.ref.elem.1D(v4, CAST<uint<4>>(v43))) .. ((( *array.ref.elem.1D(v4, CAST<uint<4>>((v43+1))))-1)+1) : 1) {
                                        (composite.ref.elem(v2, d, type<real<8>>) := (( *composite.ref.elem(v2, d, type<real<8>>))+(( *array.ref.elem.1D(v7, CAST<uint<4>>(v41)))*( *array.ref.elem.1D(v6, CAST<uint<4>>(( *array.ref.elem.1D(v3, CAST<uint<4>>(v41)))))))));
                                    };
                                    (v15 := (( *array.ref.elem.1D(v4, CAST<uint<4>>(v43)))+(CAST<int<4>>(ceil((CAST<real<8>>((((( *array.ref.elem.1D(v4, CAST<uint<4>>((v43+1))))-1)+1)-( *array.ref.elem.1D(v4, CAST<uint<4>>(v43)))))/CAST<real<8>>(1))))*1)));
                                };
                                (array.ref.elem.1D(v11, CAST<uint<4>>(v43)) := ( *composite.ref.elem(v2, d, type<real<8>>)));
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastrow, type<int<4>>))-( *composite.ref.elem(v2, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=12>for(decl int<4> v45 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (array.ref.elem.1D(v10, CAST<uint<4>>(v45)) := ( *array.ref.elem.1D(v11, CAST<uint<4>>(v45))));
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=13>for(decl int<4> v47 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v2, d, type<real<8>>) := (( *array.ref.elem.1D(v5, CAST<uint<4>>(v47)))-( *array.ref.elem.1D(v10, CAST<uint<4>>(v47)))));
                                (composite.ref.elem(v2, sum, type<real<8>>) := (( *composite.ref.elem(v2, sum, type<real<8>>))+(( *composite.ref.elem(v2, d, type<real<8>>))*( *composite.ref.elem(v2, d, type<real<8>>)))));
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=14>{
                            (array.ref.elem.1D(v12, 0) := sqrt(( *composite.ref.elem(v2, sum, type<real<8>>))));
                        }</m>;
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v237));
                    <m id=20>{
                        (v238 := 0.0);
                        (v239 := 0.0);
                    }</m>;
                    {
                        <m id=21>for(decl int<4> v268 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (v238 := (( *v238)+(( *vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v268)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v268))))));
                            (v239 := (( *v239)+(( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v268)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v268))))));
                        }</m>;
                        (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    <m id=6>(v239 := (1.0/sqrt(( *v239))))</m>;
                    {
                        <m id=22>for(decl int<4> v270 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v270)) := (( *v239)*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v270)))));
                        }</m>;
                        (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                };
                (v234 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((1+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                <m id=23>for(decl int<4> v274 = 1 .. ((7000+1)+1) : 1) {
                    (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v274)) := 1.0);
                }</m>;
                (v231 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((7000+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            <m id=7>(v236 := 0.0)</m>;
        }</m>;
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v223, int<4> v224){
            (vector.ref.elem(composite.ref.elem(v223, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v224)) := 0.0);
        }(v1, 1);
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v226, int<4> v227){
            (vector.ref.elem(composite.ref.elem(v226, start, type<vector<real<8>,64>>), CAST<uint<4>>(v227)) := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v212){
                decl ref<real<8>> v213 = ( var(0.0));
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v208, ref<array<real<8>,1>> v209){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v210 = ( var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>)));
                    gettimeofday(scalar.to.array(v210), ( var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>))));
                    if((( *composite.ref.elem(v208, sec, type<int<4>>))<0)) (composite.ref.elem(v208, sec, type<int<4>>) := CAST<int<4>>(( *composite.ref.elem(v210, tv_sec, type<int<8>>)))) else { };
                    (array.ref.elem.1D(v209, 0) := (CAST<real<8>>((( *composite.ref.elem(v210, tv_sec, type<int<8>>))-CAST<int<8>>(( *composite.ref.elem(v208, sec, type<int<4>>)))))+(1.0e-6*CAST<real<8>>(( *composite.ref.elem(v210, tv_usec, type<int<8>>))))));
                }(v212, scalar.to.array(v213));
                return ( *v213);
            }(v226));
        }(v1, 1);
        <m id=30>{
            {
                for(decl int<4> v280 = 1 .. (15+1) : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v2, ref<array<int<4>,1>> v3, ref<array<int<4>,1>> v4, ref<array<real<8>,1>> v5, ref<array<real<8>,1>> v6, ref<array<real<8>,1>> v7, ref<array<real<8>,1>> v8, ref<array<real<8>,1>> v9, ref<array<real<8>,1>> v10, ref<array<real<8>,1>> v11, ref<array<real<8>,1>> v12){
                        decl ref<int<4>> v13 = ( var(0));
                        decl ref<int<4>> v14 = ( var(0));
                        decl ref<int<4>> v15 = ( var(0));
                        decl ref<int<4>> v16 = ( var(0));
                        decl ref<int<4>> v17 = ( var(25));
                        <m id=1>(composite.ref.elem(v2, rho, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=1>for(decl int<4> v19 = 1 .. ((( *composite.ref.elem(v2, naa, type<int<4>>))+1)+1) : 1) {
                                (array.ref.elem.1D(v9, CAST<uint<4>>(v19)) := 0.0);
                                (array.ref.elem.1D(v6, CAST<uint<4>>(v19)) := 0.0);
                                (array.ref.elem.1D(v10, CAST<uint<4>>(v19)) := ( *array.ref.elem.1D(v5, CAST<uint<4>>(v19))));
                                (array.ref.elem.1D(v8, CAST<uint<4>>(v19)) := ( *array.ref.elem.1D(v10, CAST<uint<4>>(v19))));
                                (array.ref.elem.1D(v11, CAST<uint<4>>(v19)) := 0.0);
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((( *composite.ref.elem(v2, naa, type<int<4>>))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=2>for(decl int<4> v21 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v2, rho, type<real<8>>) := (( *composite.ref.elem(v2, rho, type<real<8>>))+(( *array.ref.elem.1D(v5, CAST<uint<4>>(v21)))*( *array.ref.elem.1D(v5, CAST<uint<4>>(v21))))));
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl int<4> v39 = 1 .. (( *v17)+1) : 1) {
                                <m id=3>{
                                    (composite.ref.elem(v2, rho0, type<real<8>>) := ( *composite.ref.elem(v2, rho, type<real<8>>)));
                                    (composite.ref.elem(v2, d, type<real<8>>) := 0.0);
                                    (composite.ref.elem(v2, rho, type<real<8>>) := 0.0);
                                }</m>;
                                {
                                    <m id=4>for(decl int<4> v25 = 1 .. (((( *composite.ref.elem(v2, lastrow, type<int<4>>))-( *composite.ref.elem(v2, firstrow, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v2, sum, type<real<8>>) := 0.0);
                                        {
                                            for(decl int<4> v23 = ( *array.ref.elem.1D(v4, CAST<uint<4>>(v25))) .. ( *array.ref.elem.1D(v4, CAST<uint<4>>((v25+1)))) : 1) {
                                                (composite.ref.elem(v2, sum, type<real<8>>) := (( *composite.ref.elem(v2, sum, type<real<8>>))+(( *array.ref.elem.1D(v7, CAST<uint<4>>(v23)))*( *array.ref.elem.1D(v8, CAST<uint<4>>(( *array.ref.elem.1D(v3, CAST<uint<4>>(v23)))))))));
                                            };
                                            (v15 := (( *array.ref.elem.1D(v4, CAST<uint<4>>(v25)))+(CAST<int<4>>(ceil((CAST<real<8>>((( *array.ref.elem.1D(v4, CAST<uint<4>>((v25+1))))-( *array.ref.elem.1D(v4, CAST<uint<4>>(v25)))))/CAST<real<8>>(1))))*1)));
                                        };
                                        (array.ref.elem.1D(v11, CAST<uint<4>>(v25)) := ( *composite.ref.elem(v2, sum, type<real<8>>)));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastrow, type<int<4>>))-( *composite.ref.elem(v2, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=5>for(decl int<4> v27 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v9, CAST<uint<4>>(v27)) := ( *array.ref.elem.1D(v11, CAST<uint<4>>(v27))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=6>for(decl int<4> v29 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v11, CAST<uint<4>>(v29)) := 0.0);
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=7>for(decl int<4> v31 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v2, d, type<real<8>>) := (( *composite.ref.elem(v2, d, type<real<8>>))+(( *array.ref.elem.1D(v8, CAST<uint<4>>(v31)))*( *array.ref.elem.1D(v9, CAST<uint<4>>(v31))))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=2>(composite.ref.elem(v2, alpha, type<real<8>>) := (( *composite.ref.elem(v2, rho0, type<real<8>>))/( *composite.ref.elem(v2, d, type<real<8>>))))</m>;
                                {
                                    <m id=8>for(decl int<4> v33 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v6, CAST<uint<4>>(v33)) := (( *array.ref.elem.1D(v6, CAST<uint<4>>(v33)))+(( *composite.ref.elem(v2, alpha, type<real<8>>))*( *array.ref.elem.1D(v8, CAST<uint<4>>(v33))))));
                                        (array.ref.elem.1D(v10, CAST<uint<4>>(v33)) := (( *array.ref.elem.1D(v10, CAST<uint<4>>(v33)))-(( *composite.ref.elem(v2, alpha, type<real<8>>))*( *array.ref.elem.1D(v9, CAST<uint<4>>(v33))))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=9>for(decl int<4> v35 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v2, rho, type<real<8>>) := (( *composite.ref.elem(v2, rho, type<real<8>>))+(( *array.ref.elem.1D(v10, CAST<uint<4>>(v35)))*( *array.ref.elem.1D(v10, CAST<uint<4>>(v35))))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=3>(composite.ref.elem(v2, beta, type<real<8>>) := (( *composite.ref.elem(v2, rho, type<real<8>>))/( *composite.ref.elem(v2, rho0, type<real<8>>))))</m>;
                                {
                                    <m id=10>for(decl int<4> v37 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v8, CAST<uint<4>>(v37)) := (( *array.ref.elem.1D(v10, CAST<uint<4>>(v37)))+(( *composite.ref.elem(v2, beta, type<real<8>>))*( *array.ref.elem.1D(v8, CAST<uint<4>>(v37))))));
                                    }</m>;
                                    (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            };
                            (v16 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v17)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=4>(composite.ref.elem(v2, sum, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=11>for(decl int<4> v43 = 1 .. (((( *composite.ref.elem(v2, lastrow, type<int<4>>))-( *composite.ref.elem(v2, firstrow, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v2, d, type<real<8>>) := 0.0);
                                {
                                    for(decl int<4> v41 = ( *array.ref.elem.1D(v4, CAST<uint<4>>(v43))) .. ((( *array.ref.elem.1D(v4, CAST<uint<4>>((v43+1))))-1)+1) : 1) {
                                        (composite.ref.elem(v2, d, type<real<8>>) := (( *composite.ref.elem(v2, d, type<real<8>>))+(( *array.ref.elem.1D(v7, CAST<uint<4>>(v41)))*( *array.ref.elem.1D(v6, CAST<uint<4>>(( *array.ref.elem.1D(v3, CAST<uint<4>>(v41)))))))));
                                    };
                                    (v15 := (( *array.ref.elem.1D(v4, CAST<uint<4>>(v43)))+(CAST<int<4>>(ceil((CAST<real<8>>((((( *array.ref.elem.1D(v4, CAST<uint<4>>((v43+1))))-1)+1)-( *array.ref.elem.1D(v4, CAST<uint<4>>(v43)))))/CAST<real<8>>(1))))*1)));
                                };
                                (array.ref.elem.1D(v11, CAST<uint<4>>(v43)) := ( *composite.ref.elem(v2, d, type<real<8>>)));
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastrow, type<int<4>>))-( *composite.ref.elem(v2, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=12>for(decl int<4> v45 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (array.ref.elem.1D(v10, CAST<uint<4>>(v45)) := ( *array.ref.elem.1D(v11, CAST<uint<4>>(v45))));
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=13>for(decl int<4> v47 = 1 .. (((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v2, d, type<real<8>>) := (( *array.ref.elem.1D(v5, CAST<uint<4>>(v47)))-( *array.ref.elem.1D(v10, CAST<uint<4>>(v47)))));
                                (composite.ref.elem(v2, sum, type<real<8>>) := (( *composite.ref.elem(v2, sum, type<real<8>>))+(( *composite.ref.elem(v2, d, type<real<8>>))*( *composite.ref.elem(v2, d, type<real<8>>)))));
                            }</m>;
                            (v14 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v2, lastcol, type<int<4>>))-( *composite.ref.elem(v2, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=14>{
                            (array.ref.elem.1D(v12, 0) := sqrt(( *composite.ref.elem(v2, sum, type<real<8>>))));
                        }</m>;
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v237));
                    <m id=25>{
                        (v238 := 0.0);
                        (v239 := 0.0);
                    }</m>;
                    {
                        <m id=26>for(decl int<4> v276 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (v238 := (( *v238)+(( *vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v276)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v276))))));
                            (v239 := (( *v239)+(( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v276)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v276))))));
                        }</m>;
                        (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    <m id=27>{
                        (v239 := (1.0/sqrt(( *v239))));
                        (v236 := (12.0+(1.0/( *v238))));
                    }</m>;
                    <m id=28>{
                        if((v280==1)) {
                            printf(string.as.char.pointer("   iteration           ||r||                 zeta\n"), varlist.pack(()));
                        } else { };
                        printf(string.as.char.pointer("    %5d       %20.14e%20.13e\n"), varlist.pack((v280, ( *v237), ( *v236))));
                    }</m>;
                    {
                        <m id=29>for(decl int<4> v278 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v278)) := (( *v239)*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v278)))));
                        }</m>;
                        (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                };
                (v234 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((15+1)-1))/CAST<real<8>>(1))))*1)));
            };
        }</m>;
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v215, int<4> v216){
            decl ref<real<8>> v217 = ( var(0.0));
            decl ref<real<8>> v218 = ( var(0.0));
            (v218 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v212){
                decl ref<real<8>> v213 = ( var(0.0));
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v208, ref<array<real<8>,1>> v209){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v210 = ( var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>)));
                    gettimeofday(scalar.to.array(v210), ( var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>))));
                    if((( *composite.ref.elem(v208, sec, type<int<4>>))<0)) (composite.ref.elem(v208, sec, type<int<4>>) := CAST<int<4>>(( *composite.ref.elem(v210, tv_sec, type<int<8>>)))) else { };
                    (array.ref.elem.1D(v209, 0) := (CAST<real<8>>((( *composite.ref.elem(v210, tv_sec, type<int<8>>))-CAST<int<8>>(( *composite.ref.elem(v208, sec, type<int<4>>)))))+(1.0e-6*CAST<real<8>>(( *composite.ref.elem(v210, tv_usec, type<int<8>>))))));
                }(v212, scalar.to.array(v213));
                return ( *v213);
            }(v215));
            (v217 := (( *v218)-( *vector.ref.elem(composite.ref.elem(v215, start, type<vector<real<8>,64>>), CAST<uint<4>>(v216)))));
            (vector.ref.elem(composite.ref.elem(v215, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v216)) := (( *vector.ref.elem(composite.ref.elem(v215, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v216)))+( *v217)));
        }(v1, 1);
        (v240 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v220, int<4> v221){
            return ( *vector.ref.elem(composite.ref.elem(v220, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v221)));
        }(v1, 1));
        printf(string.as.char.pointer(" Benchmark completed\n"), varlist.pack(()));
        (v245 := 1.0e-10);
        if((( *v242)!='U')) {
            if((fabs((( *v236)-( *v244)))<=( *v245))) {
                (v243 := 1);
                printf(string.as.char.pointer(" VERIFICATION SUCCESSFUL\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta is    %20.12e\n"), varlist.pack((( *v236))));
                printf(string.as.char.pointer(" Error is   %20.12e\n"), varlist.pack(((( *v236)-( *v244)))));
            } else {
                (v243 := 0);
                printf(string.as.char.pointer(" VERIFICATION FAILED\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta                %20.12e\n"), varlist.pack((( *v236))));
                printf(string.as.char.pointer(" The correct zeta is %20.12e\n"), varlist.pack((( *v244))));
            };
        } else {
            (v243 := 0);
            printf(string.as.char.pointer(" Problem size unknown\n"), varlist.pack(()));
            printf(string.as.char.pointer(" NO VERIFICATION PERFORMED\n"), varlist.pack(()));
        };
        if(real.ne(( *v240), 0.0)) {
            (v241 := (((((2.0*CAST<real<8>>(15))*CAST<real<8>>(7000))*(((3.0+CAST<real<8>>((8*(8+1))))+(25.0*(5.0+CAST<real<8>>((8*(8+1))))))+3.0))/( *v240))/1000000.0));
        } else {
            (v241 := 0.0);
        };
        fun(ref<array<char,1>> v184, char v185, int<4> v186, int<4> v187, int<4> v188, int<4> v189, int<4> v190, real<8> v191, real<8> v192, ref<array<char,1>> v193, int<4> v194, ref<array<char,1>> v195, ref<array<char,1>> v196, ref<array<char,1>> v197, ref<array<char,1>> v198, ref<array<char,1>> v199, ref<array<char,1>> v200, ref<array<char,1>> v201, ref<array<char,1>> v202, ref<array<char,1>> v203){
            decl ref<array<char,1>> v204 = string.as.char.pointer("1000");
            printf(string.as.char.pointer("\n\n %s Benchmark Completed\n"), varlist.pack((v184)));
            printf(string.as.char.pointer(" Class           =                        %c\n"), varlist.pack((CAST<int<4>>(v185))));
            if(((v187==0)&&bind(){fun(int<4> v205)return (v205==0)(v188)})) printf(string.as.char.pointer(" Size            =             %12d\n"), varlist.pack((v186))) else printf(string.as.char.pointer(" Size            =              %3dx%3dx%3d\n"), varlist.pack((v186, v187, v188)));
            printf(string.as.char.pointer(" Iterations      =             %12d\n"), varlist.pack((v189)));
            printf(string.as.char.pointer(" Threads         =             %12d\n"), varlist.pack((v190)));
            printf(string.as.char.pointer(" Time in seconds =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Mop/s total     =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Operation type  = %24s\n"), varlist.pack((v193)));
            if(int.ne(v194, 0)) printf(string.as.char.pointer(" Verification    =               SUCCESSFUL\n"), varlist.pack(())) else printf(string.as.char.pointer(" Verification    =             UNSUCCESSFUL\n"), varlist.pack(()));
            printf(string.as.char.pointer(" Version         =             %12s\n"), varlist.pack((v195)));
            printf(string.as.char.pointer(" Compile date    =             %12s\n"), varlist.pack((v196)));
            printf(string.as.char.pointer("\n Compile options:\n"), varlist.pack(()));
            printf(string.as.char.pointer("    CC           = %s\n"), varlist.pack((v197)));
            printf(string.as.char.pointer("    CLINK        = %s\n"), varlist.pack((v198)));
            printf(string.as.char.pointer("    C_LIB        = %s\n"), varlist.pack((v199)));
            printf(string.as.char.pointer("    C_INC        = %s\n"), varlist.pack((v200)));
            printf(string.as.char.pointer("    CFLAGS       = %s\n"), varlist.pack((v201)));
            printf(string.as.char.pointer("    CLINKFLAGS   = %s\n"), varlist.pack((v202)));
            printf(string.as.char.pointer("    RAND         = %s\n"), varlist.pack((v203)));
        }(string.as.char.pointer("CG"), ( *v242), 7000, 0, 0, 15, ( *v235), ( *v240), ( *v241), string.as.char.pointer("          floating point"), ( *v243), string.as.char.pointer("2.3"), string.as.char.pointer("02 Dec 2010"), string.as.char.pointer("cc"), string.as.char.pointer("cc"), string.as.char.pointer("-lm"), string.as.char.pointer("-I../common"), string.as.char.pointer("-O3 "), string.as.char.pointer("-lm"), string.as.char.pointer("randdp"));
    }


// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v59, ref<array<array<char,1>,1>> v60){
        decl ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v1 =  new(struct{naa:=0, nzz:=0, firstrow:=0, lastrow:=0, firstcol:=0, lastcol:=0, colidx:=vector.init.uniform(0, 637001), rowstr:=vector.init.uniform(0, 7002), iv:=vector.init.uniform(0, 14002), arow:=vector.init.uniform(0, 637001), acol:=vector.init.uniform(0, 637001), v:=vector.init.uniform(0.0, 7002), aelt:=vector.init.uniform(0.0, 637001), a:=vector.init.uniform(0.0, 637001), x:=vector.init.uniform(0.0, 7003), z:=vector.init.uniform(0.0, 7003), p:=vector.init.uniform(0.0, 7003), q:=vector.init.uniform(0.0, 7003), r:=vector.init.uniform(0.0, 7003), w:=vector.init.uniform(0.0, 7003), amult:=0.0, tran:=0.0, d:=0.0, sum:=0.0, rho:=0.0, rho0:=0.0, alpha:=0.0, beta:=0.0, start:=vector.init.uniform(0.0, 64), elapsed:=vector.init.uniform(0.0, 64), sec:=0-1});
        decl ref<int<4>> v61 =  var(0);
        decl ref<int<4>> v62 =  var(0);
        decl ref<int<4>> v63 =  var(0);
        decl ref<int<4>> v64 =  var(0);
        decl ref<int<4>> v65 =  var(1);
        decl ref<real<8>> v66 =  var(0.0);
        decl ref<real<8>> v67 =  var(0.0);
        decl ref<real<8>> v68 =  var(0.0);
        decl ref<real<8>> v69 =  var(0.0);
        decl ref<real<8>> v70 =  var(0.0);
        decl ref<real<8>> v71 =  var(0.0);
        decl ref<char> v72 =  var('\0');
        decl ref<int<4>> v73 =  var(0);
        decl ref<real<8>> v74 =  var(0.0);
        decl ref<real<8>> v75 =  var(0.0);
        composite.ref.elem(v1, firstrow, type<int<4>>) := 1;
        composite.ref.elem(v1, lastrow, type<int<4>>) := 7000;
        composite.ref.elem(v1, firstcol, type<int<4>>) := 1;
        composite.ref.elem(v1, lastcol, type<int<4>>) := 7000;
        if(7000==1400&&bind(){fun()return 8==7()}&&bind(){fun()return 15==15()}&&bind(){fun()return 12.0==10.0()}) {
            v72 := 'S';
            v74 := 8.5971775078648;
        } else if(7000==7000&&bind(){fun()return 8==8()}&&bind(){fun()return 15==15()}&&bind(){fun()return 12.0==12.0()}) {
            v72 := 'W';
            v74 := 10.362595087124;
        } else if(7000==14000&&bind(){fun()return 8==11()}&&bind(){fun()return 15==15()}&&bind(){fun()return 12.0==20.0()}) {
            v72 := 'A';
            v74 := 17.130235054029;
        } else if(7000==75000&&bind(){fun()return 8==13()}&&bind(){fun()return 15==75()}&&bind(){fun()return 12.0==60.0()}) {
            v72 := 'B';
            v74 := 22.712745482631;
        } else if(7000==150000&&bind(){fun()return 8==15()}&&bind(){fun()return 15==75()}&&bind(){fun()return 12.0==110.0()}) {
            v72 := 'C';
            v74 := 28.973605592845;
        } else {
            v72 := 'U';
        };
        printf(string.as.char.pointer("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - CG Benchmark\n"), varlist.pack(()));
        printf(string.as.char.pointer(" Size: %10d\n"), varlist.pack((7000)));
        printf(string.as.char.pointer(" Iterations: %5d\n"), varlist.pack((15)));
        composite.ref.elem(v1, naa, type<int<4>>) := 7000;
        composite.ref.elem(v1, nzz, type<int<4>>) := 7000*8+1*8+1+7000*8+2;
        composite.ref.elem(v1, tran, type<real<8>>) := 314159265.0;
        composite.ref.elem(v1, amult, type<real<8>>) := 1220703125.0;
        v66 := fun(ref<array<real<8>,1>> v2, real<8> v3){
            decl ref<real<8>> v4 =  var(0.0);
            decl ref<real<8>> v5 =  var(0.0);
            decl ref<real<8>> v6 =  var(0.0);
            decl ref<real<8>> v7 =  var(0.0);
            decl ref<real<8>> v8 =  var(0.0);
            decl ref<real<8>> v9 =  var(0.0);
            decl ref<real<8>> v10 =  var(0.0);
            decl ref<real<8>> v11 =  var(0.0);
            decl ref<real<8>> v12 =  var(0.0);
            v4 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v3;
            v8 := real.to.int(v4, 4);
            v9 := v3-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v8;
            v4 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v2, 0);
            v10 := real.to.int(v4, 4);
            v11 := array.ref.elem.1D(v2, 0)-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v10;
            v4 := v8*v11+v9*v10;
            v5 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v4;
            v12 := v4-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v5;
            v6 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v12+v9*v11;
            v7 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v6;
            array.ref.elem.1D(v2, 0) := v6-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v7;
            return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v2, 0);
        }(scalar.to.array(composite.ref.elem(v1, tran, type<real<8>>)), composite.ref.elem(v1, amult, type<real<8>>));
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v91, int<4> v92, int<4> v93, ref<array<real<8>,1>> v94, ref<array<int<4>,1>> v95, ref<array<int<4>,1>> v96, int<4> v97, int<4> v98, int<4> v99, int<4> v100, int<4> v101, real<8> v102, ref<array<int<4>,1>> v103, ref<array<int<4>,1>> v104, ref<array<real<8>,1>> v105, ref<array<real<8>,1>> v106, ref<array<int<4>,1>> v107, real<8> v108){
            decl ref<int<4>> v109 =  var(0);
            decl ref<int<4>> v110 =  var(0);
            decl ref<int<4>> v111 =  var(0);
            decl ref<int<4>> v112 =  var(0);
            decl ref<int<4>> v113 =  var(0);
            decl ref<int<4>> v114 =  var(0);
            decl ref<int<4>> v115 =  var(0);
            decl ref<real<8>> v116 =  var(0.0);
            decl ref<real<8>> v117 =  var(0.0);
            decl ref<real<8>> v118 =  var(0.0);
            decl ref<int<4>> v119 =  var(0);
            v116 := 1.0;
            v117 := pow(v102, 1.0/v92);
            v110 := 0;
            {
                for(decl int<4> v121 = 1 .. v92+1 : 1) {
                    array.ref.elem.1D(v95, v92+v121) := 0;
                };
                v109 := 1+ceil(v92+1-1/1)*1;
            };
            {
                for(decl int<4> v164 = 1 .. v92+1 : 1) {
                    v115 := v97;
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v122, int<4> v123, int<4> v124, ref<array<real<8>,1>> v125, ref<array<int<4>,1>> v126, ref<array<int<4>,1>> v127, ref<array<int<4>,1>> v128){
                        decl ref<int<4>> v129 =  var(0);
                        decl ref<int<4>> v130 =  var(0);
                        decl ref<int<4>> v131 =  var(0);
                        decl ref<int<4>> v132 =  var(0);
                        decl ref<int<4>> v133 =  var(0);
                        decl ref<real<8>> v134 =  var(0.0);
                        decl ref<real<8>> v135 =  var(0.0);
                        v131 := 0;
                        v130 := 0;
                        v129 := 1;
                        {
                            v129 := 2*v129;
                            while(v129<v123) {
                                v129 := 2*v129;
                            };
                        };
                        while(v131<v124) {
                            v134 := fun(ref<array<real<8>,1>> v2, real<8> v3){
                                decl ref<real<8>> v4 =  var(0.0);
                                decl ref<real<8>> v5 =  var(0.0);
                                decl ref<real<8>> v6 =  var(0.0);
                                decl ref<real<8>> v7 =  var(0.0);
                                decl ref<real<8>> v8 =  var(0.0);
                                decl ref<real<8>> v9 =  var(0.0);
                                decl ref<real<8>> v10 =  var(0.0);
                                decl ref<real<8>> v11 =  var(0.0);
                                decl ref<real<8>> v12 =  var(0.0);
                                v4 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v3;
                                v8 := real.to.int(v4, 4);
                                v9 := v3-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v8;
                                v4 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v2, 0);
                                v10 := real.to.int(v4, 4);
                                v11 := array.ref.elem.1D(v2, 0)-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v10;
                                v4 := v8*v11+v9*v10;
                                v5 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v4;
                                v12 := v4-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v5;
                                v6 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v12+v9*v11;
                                v7 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v6;
                                array.ref.elem.1D(v2, 0) := v6-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v7;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v2, 0);
                            }(scalar.to.array(composite.ref.elem(v122, tran, type<real<8>>)), composite.ref.elem(v122, amult, type<real<8>>));
                            v135 := fun(ref<array<real<8>,1>> v2, real<8> v3){
                                decl ref<real<8>> v4 =  var(0.0);
                                decl ref<real<8>> v5 =  var(0.0);
                                decl ref<real<8>> v6 =  var(0.0);
                                decl ref<real<8>> v7 =  var(0.0);
                                decl ref<real<8>> v8 =  var(0.0);
                                decl ref<real<8>> v9 =  var(0.0);
                                decl ref<real<8>> v10 =  var(0.0);
                                decl ref<real<8>> v11 =  var(0.0);
                                decl ref<real<8>> v12 =  var(0.0);
                                v4 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v3;
                                v8 := real.to.int(v4, 4);
                                v9 := v3-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v8;
                                v4 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v2, 0);
                                v10 := real.to.int(v4, 4);
                                v11 := array.ref.elem.1D(v2, 0)-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v10;
                                v4 := v8*v11+v9*v10;
                                v5 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v4;
                                v12 := v4-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v5;
                                v6 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v12+v9*v11;
                                v7 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v6;
                                array.ref.elem.1D(v2, 0) := v6-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v7;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*array.ref.elem.1D(v2, 0);
                            }(scalar.to.array(composite.ref.elem(v122, tran, type<real<8>>)), composite.ref.elem(v122, amult, type<real<8>>));
                            v133 := fun(real<8> v136, int<4> v137){
                                return v137*v136;
                            }(v135, v129)+1;
                            if(v133>v123) continue else { };
                            if(array.ref.elem.1D(v128, v133)==0) {
                                array.ref.elem.1D(v128, v133) := 1;
                                v130 := v130+1;
                                array.ref.elem.1D(v127, v130) := v133;
                                v131 := v131+1;
                                array.ref.elem.1D(v125, v131) := v134;
                                array.ref.elem.1D(v126, v131) := v133;
                            } else { };
                        };
                        {
                            for(decl int<4> v140 = 1 .. v130+1 : 1) {
                                v133 := array.ref.elem.1D(v127, v140);
                                array.ref.elem.1D(v128, v133) := 0;
                            };
                            v132 := 1+ceil(v130+1-1/1)*1;
                        };
                    }(v91, v92, v115, v106, v107, scalar.to.array(array.ref.elem.1D(v95, 0)), scalar.to.array(array.ref.elem.1D(v95, v92)));
                    fun(int<4> v142, ref<array<real<8>,1>> v143, ref<array<int<4>,1>> v144, ref<array<int<4>,1>> v145, int<4> v146, real<8> v147){
                        decl ref<int<4>> v148 =  var(0);
                        decl ref<int<4>> v149 =  var(0);
                        v149 := 0;
                        {
                            for(decl int<4> v151 = 1 .. array.ref.elem.1D(v145, 0)+1 : 1) {
                                if(array.ref.elem.1D(v144, v151)==v146) {
                                    array.ref.elem.1D(v143, v151) := v147;
                                    v149 := 1;
                                } else { };
                            };
                            v148 := 1+ceil(array.ref.elem.1D(v145, 0)+1-1/1)*1;
                        };
                        if(v149==0) {
                            array.ref.elem.1D(v145, 0) := array.ref.elem.1D(v145, 0)+1;
                            array.ref.elem.1D(v143, array.ref.elem.1D(v145, 0)) := v147;
                            array.ref.elem.1D(v144, array.ref.elem.1D(v145, 0)) := v146;
                        } else { };
                    }(v92, v106, v107, scalar.to.array(v115), v164, 0.5);
                    {
                        for(decl int<4> v162 = 1 .. v115+1 : 1) {
                            v119 := array.ref.elem.1D(v107, v162);
                            if(v119>=v100&&bind(){fun(ref<int<4>> v158, int<4> v159)return v158<=v159(v119, v101)}) {
                                v118 := v116*array.ref.elem.1D(v106, v162);
                                {
                                    for(decl int<4> v157 = 1 .. v115+1 : 1) {
                                        v114 := array.ref.elem.1D(v107, v157);
                                        if(v114>=v98&&bind(){fun(ref<int<4>> v153, int<4> v154)return v153<=v154(v114, v99)}) {
                                            v110 := v110+1;
                                            if(v110>v93) {
                                                printf(string.as.char.pointer("Space for matrix elements exceeded in"), varlist.pack(()));
                                                printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((v110, v93)));
                                                printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((v164)));
                                                exit(1);
                                            } else { };
                                            array.ref.elem.1D(v104, v110) := v119;
                                            array.ref.elem.1D(v103, v110) := v114;
                                            array.ref.elem.1D(v105, v110) := array.ref.elem.1D(v106, v157)*v118;
                                        } else { };
                                    };
                                    v113 := 1+ceil(v115+1-1/1)*1;
                                };
                            } else { };
                        };
                        v112 := 1+ceil(v115+1-1/1)*1;
                    };
                    v116 := v116*v117;
                };
                v111 := 1+ceil(v92+1-1/1)*1;
            };
            {
                for(decl int<4> v169 = v98 .. v99+1 : 1) {
                    if(v169>=v100&&bind(){fun(ref<int<4>> v165, int<4> v166)return v165<=v166( var(v169), v101)}) {
                        v111 := v92+v169;
                        v110 := v110+1;
                        if(v110>v93) {
                            printf(string.as.char.pointer("Space for matrix elements exceeded in makea\n"), varlist.pack(()));
                            printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((v110, v93)));
                            printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((v111)));
                            exit(1);
                        } else { };
                        array.ref.elem.1D(v104, v110) := v169;
                        array.ref.elem.1D(v103, v110) := v169;
                        array.ref.elem.1D(v105, v110) := v102-v108;
                    } else { };
                };
                v109 := v98+ceil(v99+1-v98/1)*1;
            };
            fun(ref<array<real<8>,1>> v170, ref<array<int<4>,1>> v171, ref<array<int<4>,1>> v172, int<4> v173, ref<array<int<4>,1>> v174, ref<array<int<4>,1>> v175, ref<array<real<8>,1>> v176, int<4> v177, int<4> v178, ref<array<real<8>,1>> v179, ref<array<int<4>,1>> v180, ref<array<int<4>,1>> v181, int<4> v182){
                decl ref<int<4>> v183 =  var(0);
                decl ref<int<4>> v184 =  var(0);
                decl ref<int<4>> v185 =  var(0);
                decl ref<int<4>> v186 =  var(0);
                decl ref<int<4>> v187 =  var(0);
                decl ref<int<4>> v188 =  var(0);
                decl ref<int<4>> v189 =  var(0);
                decl ref<real<8>> v190 =  var(0.0);
                v183 := v178-v177+1;
                {
                    for(decl int<4> v192 = 1 .. v173+1 : 1) {
                        array.ref.elem.1D(v172, v192) := 0;
                        array.ref.elem.1D(v180, v192) := 0;
                    };
                    v185 := 1+ceil(v173+1-1/1)*1;
                };
                array.ref.elem.1D(v172, v173+1) := 0;
                {
                    for(decl int<4> v194 = 1 .. v182+1 : 1) {
                        v185 := array.ref.elem.1D(v174, v194)-v177+1+1;
                        array.ref.elem.1D(v172, v185) := array.ref.elem.1D(v172, v185)+1;
                    };
                    v187 := 1+ceil(v182+1-1/1)*1;
                };
                array.ref.elem.1D(v172, 1) := 1;
                {
                    for(decl int<4> v196 = 2 .. v183+1+1 : 1) {
                        array.ref.elem.1D(v172, v196) := array.ref.elem.1D(v172, v196)+array.ref.elem.1D(v172, v196-1);
                    };
                    v185 := 2+ceil(v183+1+1-2/1)*1;
                };
                {
                    for(decl int<4> v198 = 1 .. v182+1 : 1) {
                        v185 := array.ref.elem.1D(v174, v198)-v177+1;
                        v188 := array.ref.elem.1D(v172, v185);
                        array.ref.elem.1D(v170, v188) := array.ref.elem.1D(v176, v198);
                        array.ref.elem.1D(v171, v188) := array.ref.elem.1D(v175, v198);
                        array.ref.elem.1D(v172, v185) := array.ref.elem.1D(v172, v185)+1;
                    };
                    v187 := 1+ceil(v182+1-1/1)*1;
                };
                {
                    for(decl int<4> v200 = 0-v183 .. 0-1+1 : 1) {
                        array.ref.elem.1D(v172, 0-v200+1) := array.ref.elem.1D(v172, 0-v200);
                    };
                    v185 := v183+ceil(0-1+1-v183/1)*1;
                };
                array.ref.elem.1D(v172, 1) := 1;
                v187 := 0;
                {
                    for(decl int<4> v202 = 1 .. v173+1 : 1) {
                        array.ref.elem.1D(v179, v202) := 0.0;
                        array.ref.elem.1D(v180, v202) := 0;
                    };
                    v184 := 1+ceil(v173+1-1/1)*1;
                };
                v186 := array.ref.elem.1D(v172, 1);
                {
                    for(decl int<4> v211 = 1 .. v183+1 : 1) {
                        v189 := 0;
                        {
                            for(decl int<4> v207 = v186 .. array.ref.elem.1D(v172, v211+1) : 1) {
                                v184 := array.ref.elem.1D(v171, v207);
                                array.ref.elem.1D(v179, v184) := array.ref.elem.1D(v179, v184)+array.ref.elem.1D(v170, v207);
                                if(array.ref.elem.1D(v180, v184)==0&&bind(){fun(ref<array<real<8>,1>> v203, ref<int<4>> v204)return real.ne(array.ref.elem.1D(v203, v204), 0.0)(v179, v184)}) {
                                    array.ref.elem.1D(v180, v184) := 1;
                                    v189 := v189+1;
                                    array.ref.elem.1D(v181, v189) := v184;
                                } else { };
                            };
                            v188 := v186+ceil(array.ref.elem.1D(v172, v211+1)-v186/1)*1;
                        };
                        {
                            for(decl int<4> v209 = 1 .. v189+1 : 1) {
                                v184 := array.ref.elem.1D(v181, v209);
                                array.ref.elem.1D(v180, v184) := 0;
                                v190 := array.ref.elem.1D(v179, v184);
                                array.ref.elem.1D(v179, v184) := 0.0;
                                if(real.ne(v190, 0.0)) {
                                    v187 := v187+1;
                                    array.ref.elem.1D(v170, v187) := v190;
                                    array.ref.elem.1D(v171, v187) := v184;
                                } else { };
                            };
                            v188 := 1+ceil(v189+1-1/1)*1;
                        };
                        v186 := array.ref.elem.1D(v172, v211+1);
                        array.ref.elem.1D(v172, v211+1) := v187+array.ref.elem.1D(v172, 1);
                    };
                    v185 := 1+ceil(v183+1-1/1)*1;
                };
            }(v94, v95, v96, v92, v103, v104, v105, v98, v99, v106, scalar.to.array(array.ref.elem.1D(v107, 0)), scalar.to.array(array.ref.elem.1D(v107, v92)), v110);
        }(v1, composite.ref.elem(v1, naa, type<int<4>>), composite.ref.elem(v1, nzz, type<int<4>>), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), 8, composite.ref.elem(v1, firstrow, type<int<4>>), composite.ref.elem(v1, lastrow, type<int<4>>), composite.ref.elem(v1, firstcol, type<int<4>>), composite.ref.elem(v1, lastcol, type<int<4>>), 1.0e-1, ref.vector.to.ref.array(composite.ref.elem(v1, arow, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, acol, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, aelt, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, v, type<vector<real<8>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, iv, type<vector<int<4>,14002>>)), 12.0);
        {
            {
                for(decl int<4> v217 = 1 .. composite.ref.elem(v1, lastrow, type<int<4>>)-composite.ref.elem(v1, firstrow, type<int<4>>)+1+1 : 1) {
                    {
                        for(decl int<4> v215 = vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v217) .. vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v217+1) : 1) {
                            vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), v215) := vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), v215)-composite.ref.elem(v1, firstcol, type<int<4>>)+1;
                        };
                        v63 := vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v217)+ceil(vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v217+1)-vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), v217)/1)*1;
                    };
                };
                v62 := 1+ceil(composite.ref.elem(v1, lastrow, type<int<4>>)-composite.ref.elem(v1, firstrow, type<int<4>>)+1+1-1/1)*1;
            };
            {
                for(decl int<4> v219 = 1 .. 7000+1+1 : 1) {
                    vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v219) := 1.0;
                };
                v61 := 1+ceil(7000+1+1-1/1)*1;
            };
            v66 := 0.0;
            {
                for(decl int<4> v272 = 1 .. 1+1 : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v220, ref<array<int<4>,1>> v221, ref<array<int<4>,1>> v222, ref<array<real<8>,1>> v223, ref<array<real<8>,1>> v224, ref<array<real<8>,1>> v225, ref<array<real<8>,1>> v226, ref<array<real<8>,1>> v227, ref<array<real<8>,1>> v228, ref<array<real<8>,1>> v229, ref<array<real<8>,1>> v230){
                        decl ref<int<4>> v231 =  var(0);
                        decl ref<int<4>> v232 =  var(0);
                        decl ref<int<4>> v233 =  var(0);
                        decl ref<int<4>> v234 =  var(0);
                        decl ref<int<4>> v235 =  var(25);
                        composite.ref.elem(v220, rho, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v237 = 1 .. composite.ref.elem(v220, naa, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v227, v237) := 0.0;
                                array.ref.elem.1D(v224, v237) := 0.0;
                                array.ref.elem.1D(v228, v237) := array.ref.elem.1D(v223, v237);
                                array.ref.elem.1D(v226, v237) := array.ref.elem.1D(v228, v237);
                                array.ref.elem.1D(v229, v237) := 0.0;
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, naa, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v239 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v220, rho, type<real<8>>) := composite.ref.elem(v220, rho, type<real<8>>)+array.ref.elem.1D(v223, v239)*array.ref.elem.1D(v223, v239);
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v257 = 1 .. v235+1 : 1) {
                                {
                                    composite.ref.elem(v220, rho0, type<real<8>>) := composite.ref.elem(v220, rho, type<real<8>>);
                                    composite.ref.elem(v220, d, type<real<8>>) := 0.0;
                                    composite.ref.elem(v220, rho, type<real<8>>) := 0.0;
                                };
                                {
                                    for(decl int<4> v243 = 1 .. composite.ref.elem(v220, lastrow, type<int<4>>)-composite.ref.elem(v220, firstrow, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v220, sum, type<real<8>>) := 0.0;
                                        {
                                            for(decl int<4> v241 = array.ref.elem.1D(v222, v243) .. array.ref.elem.1D(v222, v243+1) : 1) {
                                                composite.ref.elem(v220, sum, type<real<8>>) := composite.ref.elem(v220, sum, type<real<8>>)+array.ref.elem.1D(v225, v241)*array.ref.elem.1D(v226, array.ref.elem.1D(v221, v241));
                                            };
                                            v233 := array.ref.elem.1D(v222, v243)+ceil(array.ref.elem.1D(v222, v243+1)-array.ref.elem.1D(v222, v243)/1)*1;
                                        };
                                        array.ref.elem.1D(v229, v243) := composite.ref.elem(v220, sum, type<real<8>>);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastrow, type<int<4>>)-composite.ref.elem(v220, firstrow, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v245 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v227, v245) := array.ref.elem.1D(v229, v245);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v247 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v229, v247) := 0.0;
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v249 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v220, d, type<real<8>>) := composite.ref.elem(v220, d, type<real<8>>)+array.ref.elem.1D(v226, v249)*array.ref.elem.1D(v227, v249);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v220, alpha, type<real<8>>) := composite.ref.elem(v220, rho0, type<real<8>>)/composite.ref.elem(v220, d, type<real<8>>);
                                {
                                    for(decl int<4> v251 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v224, v251) := array.ref.elem.1D(v224, v251)+composite.ref.elem(v220, alpha, type<real<8>>)*array.ref.elem.1D(v226, v251);
                                        array.ref.elem.1D(v228, v251) := array.ref.elem.1D(v228, v251)-composite.ref.elem(v220, alpha, type<real<8>>)*array.ref.elem.1D(v227, v251);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v253 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v220, rho, type<real<8>>) := composite.ref.elem(v220, rho, type<real<8>>)+array.ref.elem.1D(v228, v253)*array.ref.elem.1D(v228, v253);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v220, beta, type<real<8>>) := composite.ref.elem(v220, rho, type<real<8>>)/composite.ref.elem(v220, rho0, type<real<8>>);
                                {
                                    for(decl int<4> v255 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v226, v255) := array.ref.elem.1D(v228, v255)+composite.ref.elem(v220, beta, type<real<8>>)*array.ref.elem.1D(v226, v255);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                            };
                            v234 := 1+ceil(v235+1-1/1)*1;
                        };
                        composite.ref.elem(v220, sum, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v261 = 1 .. composite.ref.elem(v220, lastrow, type<int<4>>)-composite.ref.elem(v220, firstrow, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v220, d, type<real<8>>) := 0.0;
                                {
                                    for(decl int<4> v259 = array.ref.elem.1D(v222, v261) .. array.ref.elem.1D(v222, v261+1)-1+1 : 1) {
                                        composite.ref.elem(v220, d, type<real<8>>) := composite.ref.elem(v220, d, type<real<8>>)+array.ref.elem.1D(v225, v259)*array.ref.elem.1D(v224, array.ref.elem.1D(v221, v259));
                                    };
                                    v233 := array.ref.elem.1D(v222, v261)+ceil(array.ref.elem.1D(v222, v261+1)-1+1-array.ref.elem.1D(v222, v261)/1)*1;
                                };
                                array.ref.elem.1D(v229, v261) := composite.ref.elem(v220, d, type<real<8>>);
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, lastrow, type<int<4>>)-composite.ref.elem(v220, firstrow, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v263 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v228, v263) := array.ref.elem.1D(v229, v263);
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v265 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v220, d, type<real<8>>) := array.ref.elem.1D(v223, v265)-array.ref.elem.1D(v228, v265);
                                composite.ref.elem(v220, sum, type<real<8>>) := composite.ref.elem(v220, sum, type<real<8>>)+composite.ref.elem(v220, d, type<real<8>>)*composite.ref.elem(v220, d, type<real<8>>);
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            array.ref.elem.1D(v230, 0) := sqrt(composite.ref.elem(v220, sum, type<real<8>>));
                        };
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v67));
                    {
                        v68 := 0.0;
                        v69 := 0.0;
                    };
                    {
                        for(decl int<4> v268 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            v68 := v68+vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v268)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v268);
                            v69 := v69+vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v268)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v268);
                        };
                        v62 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                    v69 := 1.0/sqrt(v69);
                    {
                        for(decl int<4> v270 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v270) := v69*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v270);
                        };
                        v62 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                };
                v64 := 1+ceil(1+1-1/1)*1;
            };
            {
                for(decl int<4> v274 = 1 .. 7000+1+1 : 1) {
                    vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v274) := 1.0;
                };
                v61 := 1+ceil(7000+1+1-1/1)*1;
            };
            v66 := 0.0;
        };
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v53, int<4> v54){
            vector.ref.elem(composite.ref.elem(v53, elapsed, type<vector<real<8>,64>>), v54) := 0.0;
        }(v1, 1);
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v56, int<4> v57){
            vector.ref.elem(composite.ref.elem(v56, start, type<vector<real<8>,64>>), v57) := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v42){
                decl ref<real<8>> v43 =  var(0.0);
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v38, ref<array<real<8>,1>> v39){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v40 =  var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>));
                    gettimeofday(scalar.to.array(v40),  var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>)));
                    if(composite.ref.elem(v38, sec, type<int<4>>)<0) composite.ref.elem(v38, sec, type<int<4>>) := composite.ref.elem(v40, tv_sec, type<int<8>>) else { };
                    array.ref.elem.1D(v39, 0) := composite.ref.elem(v40, tv_sec, type<int<8>>)-composite.ref.elem(v38, sec, type<int<4>>)+1.0e-6*composite.ref.elem(v40, tv_usec, type<int<8>>);
                }(v42, scalar.to.array(v43));
                return v43;
            }(v56);
        }(v1, 1);
        {
            {
                for(decl int<4> v280 = 1 .. 15+1 : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v220, ref<array<int<4>,1>> v221, ref<array<int<4>,1>> v222, ref<array<real<8>,1>> v223, ref<array<real<8>,1>> v224, ref<array<real<8>,1>> v225, ref<array<real<8>,1>> v226, ref<array<real<8>,1>> v227, ref<array<real<8>,1>> v228, ref<array<real<8>,1>> v229, ref<array<real<8>,1>> v230){
                        decl ref<int<4>> v231 =  var(0);
                        decl ref<int<4>> v232 =  var(0);
                        decl ref<int<4>> v233 =  var(0);
                        decl ref<int<4>> v234 =  var(0);
                        decl ref<int<4>> v235 =  var(25);
                        composite.ref.elem(v220, rho, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v237 = 1 .. composite.ref.elem(v220, naa, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v227, v237) := 0.0;
                                array.ref.elem.1D(v224, v237) := 0.0;
                                array.ref.elem.1D(v228, v237) := array.ref.elem.1D(v223, v237);
                                array.ref.elem.1D(v226, v237) := array.ref.elem.1D(v228, v237);
                                array.ref.elem.1D(v229, v237) := 0.0;
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, naa, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v239 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v220, rho, type<real<8>>) := composite.ref.elem(v220, rho, type<real<8>>)+array.ref.elem.1D(v223, v239)*array.ref.elem.1D(v223, v239);
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v257 = 1 .. v235+1 : 1) {
                                {
                                    composite.ref.elem(v220, rho0, type<real<8>>) := composite.ref.elem(v220, rho, type<real<8>>);
                                    composite.ref.elem(v220, d, type<real<8>>) := 0.0;
                                    composite.ref.elem(v220, rho, type<real<8>>) := 0.0;
                                };
                                {
                                    for(decl int<4> v243 = 1 .. composite.ref.elem(v220, lastrow, type<int<4>>)-composite.ref.elem(v220, firstrow, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v220, sum, type<real<8>>) := 0.0;
                                        {
                                            for(decl int<4> v241 = array.ref.elem.1D(v222, v243) .. array.ref.elem.1D(v222, v243+1) : 1) {
                                                composite.ref.elem(v220, sum, type<real<8>>) := composite.ref.elem(v220, sum, type<real<8>>)+array.ref.elem.1D(v225, v241)*array.ref.elem.1D(v226, array.ref.elem.1D(v221, v241));
                                            };
                                            v233 := array.ref.elem.1D(v222, v243)+ceil(array.ref.elem.1D(v222, v243+1)-array.ref.elem.1D(v222, v243)/1)*1;
                                        };
                                        array.ref.elem.1D(v229, v243) := composite.ref.elem(v220, sum, type<real<8>>);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastrow, type<int<4>>)-composite.ref.elem(v220, firstrow, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v245 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v227, v245) := array.ref.elem.1D(v229, v245);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v247 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v229, v247) := 0.0;
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v249 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v220, d, type<real<8>>) := composite.ref.elem(v220, d, type<real<8>>)+array.ref.elem.1D(v226, v249)*array.ref.elem.1D(v227, v249);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v220, alpha, type<real<8>>) := composite.ref.elem(v220, rho0, type<real<8>>)/composite.ref.elem(v220, d, type<real<8>>);
                                {
                                    for(decl int<4> v251 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v224, v251) := array.ref.elem.1D(v224, v251)+composite.ref.elem(v220, alpha, type<real<8>>)*array.ref.elem.1D(v226, v251);
                                        array.ref.elem.1D(v228, v251) := array.ref.elem.1D(v228, v251)-composite.ref.elem(v220, alpha, type<real<8>>)*array.ref.elem.1D(v227, v251);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                {
                                    for(decl int<4> v253 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        composite.ref.elem(v220, rho, type<real<8>>) := composite.ref.elem(v220, rho, type<real<8>>)+array.ref.elem.1D(v228, v253)*array.ref.elem.1D(v228, v253);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                                composite.ref.elem(v220, beta, type<real<8>>) := composite.ref.elem(v220, rho, type<real<8>>)/composite.ref.elem(v220, rho0, type<real<8>>);
                                {
                                    for(decl int<4> v255 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                        array.ref.elem.1D(v226, v255) := array.ref.elem.1D(v228, v255)+composite.ref.elem(v220, beta, type<real<8>>)*array.ref.elem.1D(v226, v255);
                                    };
                                    v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                                };
                            };
                            v234 := 1+ceil(v235+1-1/1)*1;
                        };
                        composite.ref.elem(v220, sum, type<real<8>>) := 0.0;
                        {
                            for(decl int<4> v261 = 1 .. composite.ref.elem(v220, lastrow, type<int<4>>)-composite.ref.elem(v220, firstrow, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v220, d, type<real<8>>) := 0.0;
                                {
                                    for(decl int<4> v259 = array.ref.elem.1D(v222, v261) .. array.ref.elem.1D(v222, v261+1)-1+1 : 1) {
                                        composite.ref.elem(v220, d, type<real<8>>) := composite.ref.elem(v220, d, type<real<8>>)+array.ref.elem.1D(v225, v259)*array.ref.elem.1D(v224, array.ref.elem.1D(v221, v259));
                                    };
                                    v233 := array.ref.elem.1D(v222, v261)+ceil(array.ref.elem.1D(v222, v261+1)-1+1-array.ref.elem.1D(v222, v261)/1)*1;
                                };
                                array.ref.elem.1D(v229, v261) := composite.ref.elem(v220, d, type<real<8>>);
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, lastrow, type<int<4>>)-composite.ref.elem(v220, firstrow, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v263 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                array.ref.elem.1D(v228, v263) := array.ref.elem.1D(v229, v263);
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            for(decl int<4> v265 = 1 .. composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1 : 1) {
                                composite.ref.elem(v220, d, type<real<8>>) := array.ref.elem.1D(v223, v265)-array.ref.elem.1D(v228, v265);
                                composite.ref.elem(v220, sum, type<real<8>>) := composite.ref.elem(v220, sum, type<real<8>>)+composite.ref.elem(v220, d, type<real<8>>)*composite.ref.elem(v220, d, type<real<8>>);
                            };
                            v232 := 1+ceil(composite.ref.elem(v220, lastcol, type<int<4>>)-composite.ref.elem(v220, firstcol, type<int<4>>)+1+1-1/1)*1;
                        };
                        {
                            array.ref.elem.1D(v230, 0) := sqrt(composite.ref.elem(v220, sum, type<real<8>>));
                        };
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v67));
                    {
                        v68 := 0.0;
                        v69 := 0.0;
                    };
                    {
                        for(decl int<4> v276 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            v68 := v68+vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v276)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v276);
                            v69 := v69+vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v276)*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v276);
                        };
                        v62 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                    {
                        v69 := 1.0/sqrt(v69);
                        v66 := 12.0+1.0/v68;
                    };
                    {
                        if(v280==1) {
                            printf(string.as.char.pointer("   iteration           ||r||                 zeta\n"), varlist.pack(()));
                        } else { };
                        printf(string.as.char.pointer("    %5d       %20.14e%20.13e\n"), varlist.pack((v280, v67, v66)));
                    };
                    {
                        for(decl int<4> v278 = 1 .. composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1 : 1) {
                            vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), v278) := v69*vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), v278);
                        };
                        v62 := 1+ceil(composite.ref.elem(v1, lastcol, type<int<4>>)-composite.ref.elem(v1, firstcol, type<int<4>>)+1+1-1/1)*1;
                    };
                };
                v64 := 1+ceil(15+1-1/1)*1;
            };
        };
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v45, int<4> v46){
            decl ref<real<8>> v47 =  var(0.0);
            decl ref<real<8>> v48 =  var(0.0);
            v48 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v42){
                decl ref<real<8>> v43 =  var(0.0);
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v38, ref<array<real<8>,1>> v39){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v40 =  var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>));
                    gettimeofday(scalar.to.array(v40),  var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>)));
                    if(composite.ref.elem(v38, sec, type<int<4>>)<0) composite.ref.elem(v38, sec, type<int<4>>) := composite.ref.elem(v40, tv_sec, type<int<8>>) else { };
                    array.ref.elem.1D(v39, 0) := composite.ref.elem(v40, tv_sec, type<int<8>>)-composite.ref.elem(v38, sec, type<int<4>>)+1.0e-6*composite.ref.elem(v40, tv_usec, type<int<8>>);
                }(v42, scalar.to.array(v43));
                return v43;
            }(v45);
            v47 := v48-vector.ref.elem(composite.ref.elem(v45, start, type<vector<real<8>,64>>), v46);
            vector.ref.elem(composite.ref.elem(v45, elapsed, type<vector<real<8>,64>>), v46) := vector.ref.elem(composite.ref.elem(v45, elapsed, type<vector<real<8>,64>>), v46)+v47;
        }(v1, 1);
        v70 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v50, int<4> v51){
            return vector.ref.elem(composite.ref.elem(v50, elapsed, type<vector<real<8>,64>>), v51);
        }(v1, 1);
        printf(string.as.char.pointer(" Benchmark completed\n"), varlist.pack(()));
        v75 := 1.0e-10;
        if(v72!='U') {
            if(fabs(v66-v74)<=v75) {
                v73 := 1;
                printf(string.as.char.pointer(" VERIFICATION SUCCESSFUL\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta is    %20.12e\n"), varlist.pack((v66)));
                printf(string.as.char.pointer(" Error is   %20.12e\n"), varlist.pack((v66-v74)));
            } else {
                v73 := 0;
                printf(string.as.char.pointer(" VERIFICATION FAILED\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta                %20.12e\n"), varlist.pack((v66)));
                printf(string.as.char.pointer(" The correct zeta is %20.12e\n"), varlist.pack((v74)));
            };
        } else {
            v73 := 0;
            printf(string.as.char.pointer(" Problem size unknown\n"), varlist.pack(()));
            printf(string.as.char.pointer(" NO VERIFICATION PERFORMED\n"), varlist.pack(()));
        };
        if(real.ne(v70, 0.0)) {
            v71 := 2.0*15*7000*3.0+8*8+1+25.0*5.0+8*8+1+3.0/v70/1000000.0;
        } else {
            v71 := 0.0;
        };
        fun(ref<array<char,1>> v14, char v15, int<4> v16, int<4> v17, int<4> v18, int<4> v19, int<4> v20, real<8> v21, real<8> v22, ref<array<char,1>> v23, int<4> v24, ref<array<char,1>> v25, ref<array<char,1>> v26, ref<array<char,1>> v27, ref<array<char,1>> v28, ref<array<char,1>> v29, ref<array<char,1>> v30, ref<array<char,1>> v31, ref<array<char,1>> v32, ref<array<char,1>> v33){
            decl ref<array<char,1>> v34 = string.as.char.pointer("1000");
            printf(string.as.char.pointer("\n\n %s Benchmark Completed\n"), varlist.pack((v14)));
            printf(string.as.char.pointer(" Class           =                        %c\n"), varlist.pack((v15)));
            if(v17==0&&bind(){fun(int<4> v35)return v35==0(v18)}) printf(string.as.char.pointer(" Size            =             %12d\n"), varlist.pack((v16))) else printf(string.as.char.pointer(" Size            =              %3dx%3dx%3d\n"), varlist.pack((v16, v17, v18)));
            printf(string.as.char.pointer(" Iterations      =             %12d\n"), varlist.pack((v19)));
            printf(string.as.char.pointer(" Threads         =             %12d\n"), varlist.pack((v20)));
            printf(string.as.char.pointer(" Time in seconds =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Mop/s total     =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Operation type  = %24s\n"), varlist.pack((v23)));
            if(int.ne(v24, 0)) printf(string.as.char.pointer(" Verification    =               SUCCESSFUL\n"), varlist.pack(())) else printf(string.as.char.pointer(" Verification    =             UNSUCCESSFUL\n"), varlist.pack(()));
            printf(string.as.char.pointer(" Version         =             %12s\n"), varlist.pack((v25)));
            printf(string.as.char.pointer(" Compile date    =             %12s\n"), varlist.pack((v26)));
            printf(string.as.char.pointer("\n Compile options:\n"), varlist.pack(()));
            printf(string.as.char.pointer("    CC           = %s\n"), varlist.pack((v27)));
            printf(string.as.char.pointer("    CLINK        = %s\n"), varlist.pack((v28)));
            printf(string.as.char.pointer("    C_LIB        = %s\n"), varlist.pack((v29)));
            printf(string.as.char.pointer("    C_INC        = %s\n"), varlist.pack((v30)));
            printf(string.as.char.pointer("    CFLAGS       = %s\n"), varlist.pack((v31)));
            printf(string.as.char.pointer("    CLINKFLAGS   = %s\n"), varlist.pack((v32)));
            printf(string.as.char.pointer("    RAND         = %s\n"), varlist.pack((v33)));
        }(string.as.char.pointer("CG"), v72, 7000, 0, 0, 15, v65, v70, v71, string.as.char.pointer("          floating point"), v73, string.as.char.pointer("2.3"), string.as.char.pointer("02 Dec 2010"), string.as.char.pointer("cc"), string.as.char.pointer("cc"), string.as.char.pointer("-lm"), string.as.char.pointer("-I../common"), string.as.char.pointer("-O3 "), string.as.char.pointer("-lm"), string.as.char.pointer("randdp"));
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v59, ref<array<array<char,1>,1>> v60){
        decl ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v1 = ( new(struct{naa:=0, nzz:=0, firstrow:=0, lastrow:=0, firstcol:=0, lastcol:=0, colidx:=vector.init.uniform(0, 637001), rowstr:=vector.init.uniform(0, 7002), iv:=vector.init.uniform(0, 14002), arow:=vector.init.uniform(0, 637001), acol:=vector.init.uniform(0, 637001), v:=vector.init.uniform(0.0, 7002), aelt:=vector.init.uniform(0.0, 637001), a:=vector.init.uniform(0.0, 637001), x:=vector.init.uniform(0.0, 7003), z:=vector.init.uniform(0.0, 7003), p:=vector.init.uniform(0.0, 7003), q:=vector.init.uniform(0.0, 7003), r:=vector.init.uniform(0.0, 7003), w:=vector.init.uniform(0.0, 7003), amult:=0.0, tran:=0.0, d:=0.0, sum:=0.0, rho:=0.0, rho0:=0.0, alpha:=0.0, beta:=0.0, start:=vector.init.uniform(0.0, 64), elapsed:=vector.init.uniform(0.0, 64), sec:=(CAST<int<4>>(0)-1)}));
        decl ref<int<4>> v61 = ( var(0));
        decl ref<int<4>> v62 = ( var(0));
        decl ref<int<4>> v63 = ( var(0));
        decl ref<int<4>> v64 = ( var(0));
        decl ref<int<4>> v65 = ( var(1));
        decl ref<real<8>> v66 = ( var(0.0));
        decl ref<real<8>> v67 = ( var(0.0));
        decl ref<real<8>> v68 = ( var(0.0));
        decl ref<real<8>> v69 = ( var(0.0));
        decl ref<real<8>> v70 = ( var(0.0));
        decl ref<real<8>> v71 = ( var(0.0));
        decl ref<char> v72 = ( var('\0'));
        decl ref<int<4>> v73 = ( var(0));
        decl ref<real<8>> v74 = ( var(0.0));
        decl ref<real<8>> v75 = ( var(0.0));
        (composite.ref.elem(v1, firstrow, type<int<4>>) := 1);
        (composite.ref.elem(v1, lastrow, type<int<4>>) := 7000);
        (composite.ref.elem(v1, firstcol, type<int<4>>) := 1);
        (composite.ref.elem(v1, lastcol, type<int<4>>) := 7000);
        if(((((7000==1400)&&bind(){fun()return (8==7)()})&&bind(){fun()return (15==15)()})&&bind(){fun()return (12.0==10.0)()})) {
            (v72 := 'S');
            (v74 := 8.5971775078648);
        } else if(((((7000==7000)&&bind(){fun()return (8==8)()})&&bind(){fun()return (15==15)()})&&bind(){fun()return (12.0==12.0)()})) {
            (v72 := 'W');
            (v74 := 10.362595087124);
        } else if(((((7000==14000)&&bind(){fun()return (8==11)()})&&bind(){fun()return (15==15)()})&&bind(){fun()return (12.0==20.0)()})) {
            (v72 := 'A');
            (v74 := 17.130235054029);
        } else if(((((7000==75000)&&bind(){fun()return (8==13)()})&&bind(){fun()return (15==75)()})&&bind(){fun()return (12.0==60.0)()})) {
            (v72 := 'B');
            (v74 := 22.712745482631);
        } else if(((((7000==150000)&&bind(){fun()return (8==15)()})&&bind(){fun()return (15==75)()})&&bind(){fun()return (12.0==110.0)()})) {
            (v72 := 'C');
            (v74 := 28.973605592845);
        } else {
            (v72 := 'U');
        };
        printf(string.as.char.pointer("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - CG Benchmark\n"), varlist.pack(()));
        printf(string.as.char.pointer(" Size: %10d\n"), varlist.pack((7000)));
        printf(string.as.char.pointer(" Iterations: %5d\n"), varlist.pack((15)));
        (composite.ref.elem(v1, naa, type<int<4>>) := 7000);
        (composite.ref.elem(v1, nzz, type<int<4>>) := (((7000*(8+1))*(8+1))+(7000*(8+2))));
        (composite.ref.elem(v1, tran, type<real<8>>) := 314159265.0);
        (composite.ref.elem(v1, amult, type<real<8>>) := 1220703125.0);
        (v66 := fun(ref<array<real<8>,1>> v2, real<8> v3){
            decl ref<real<8>> v4 = ( var(0.0));
            decl ref<real<8>> v5 = ( var(0.0));
            decl ref<real<8>> v6 = ( var(0.0));
            decl ref<real<8>> v7 = ( var(0.0));
            decl ref<real<8>> v8 = ( var(0.0));
            decl ref<real<8>> v9 = ( var(0.0));
            decl ref<real<8>> v10 = ( var(0.0));
            decl ref<real<8>> v11 = ( var(0.0));
            decl ref<real<8>> v12 = ( var(0.0));
            (v4 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v3));
            (v8 := CAST<real<8>>(real.to.int(( *v4), 4)));
            (v9 := (v3-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v8))));
            (v4 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *array.ref.elem.1D(v2, 0))));
            (v10 := CAST<real<8>>(real.to.int(( *v4), 4)));
            (v11 := (( *array.ref.elem.1D(v2, 0))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v10))));
            (v4 := ((( *v8)*( *v11))+(( *v9)*( *v10))));
            (v5 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v4)))));
            (v12 := (( *v4)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v5))));
            (v6 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v12))+(( *v9)*( *v11))));
            (v7 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v6)))));
            (array.ref.elem.1D(v2, 0) := (( *v6)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v7))));
            return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *array.ref.elem.1D(v2, 0)));
        }(scalar.to.array(composite.ref.elem(v1, tran, type<real<8>>)), ( *composite.ref.elem(v1, amult, type<real<8>>))));
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v91, int<4> v92, int<4> v93, ref<array<real<8>,1>> v94, ref<array<int<4>,1>> v95, ref<array<int<4>,1>> v96, int<4> v97, int<4> v98, int<4> v99, int<4> v100, int<4> v101, real<8> v102, ref<array<int<4>,1>> v103, ref<array<int<4>,1>> v104, ref<array<real<8>,1>> v105, ref<array<real<8>,1>> v106, ref<array<int<4>,1>> v107, real<8> v108){
            decl ref<int<4>> v109 = ( var(0));
            decl ref<int<4>> v110 = ( var(0));
            decl ref<int<4>> v111 = ( var(0));
            decl ref<int<4>> v112 = ( var(0));
            decl ref<int<4>> v113 = ( var(0));
            decl ref<int<4>> v114 = ( var(0));
            decl ref<int<4>> v115 = ( var(0));
            decl ref<real<8>> v116 = ( var(0.0));
            decl ref<real<8>> v117 = ( var(0.0));
            decl ref<real<8>> v118 = ( var(0.0));
            decl ref<int<4>> v119 = ( var(0));
            (v116 := 1.0);
            (v117 := pow(v102, (1.0/CAST<real<8>>(v92))));
            (v110 := 0);
            {
                <m id=1>for(decl int<4> v121 = 1 .. (v92+1) : 1) {
                    (array.ref.elem.1D(v95, CAST<uint<4>>((v92+v121))) := 0);
                }</m>;
                (v109 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v92+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                for(decl int<4> v164 = 1 .. (v92+1) : 1) {
                    (v115 := v97);
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v122, int<4> v123, int<4> v124, ref<array<real<8>,1>> v125, ref<array<int<4>,1>> v126, ref<array<int<4>,1>> v127, ref<array<int<4>,1>> v128){
                        decl ref<int<4>> v129 = ( var(0));
                        decl ref<int<4>> v130 = ( var(0));
                        decl ref<int<4>> v131 = ( var(0));
                        decl ref<int<4>> v132 = ( var(0));
                        decl ref<int<4>> v133 = ( var(0));
                        decl ref<real<8>> v134 = ( var(0.0));
                        decl ref<real<8>> v135 = ( var(0.0));
                        (v131 := 0);
                        (v130 := 0);
                        (v129 := 1);
                        {
                            (v129 := (2*( *v129)));
                            while((( *v129)<v123)) {
                                (v129 := (2*( *v129)));
                            };
                        };
                        while((( *v131)<v124)) {
                            (v134 := fun(ref<array<real<8>,1>> v2, real<8> v3){
                                decl ref<real<8>> v4 = ( var(0.0));
                                decl ref<real<8>> v5 = ( var(0.0));
                                decl ref<real<8>> v6 = ( var(0.0));
                                decl ref<real<8>> v7 = ( var(0.0));
                                decl ref<real<8>> v8 = ( var(0.0));
                                decl ref<real<8>> v9 = ( var(0.0));
                                decl ref<real<8>> v10 = ( var(0.0));
                                decl ref<real<8>> v11 = ( var(0.0));
                                decl ref<real<8>> v12 = ( var(0.0));
                                (v4 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v3));
                                (v8 := CAST<real<8>>(real.to.int(( *v4), 4)));
                                (v9 := (v3-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v8))));
                                (v4 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *array.ref.elem.1D(v2, 0))));
                                (v10 := CAST<real<8>>(real.to.int(( *v4), 4)));
                                (v11 := (( *array.ref.elem.1D(v2, 0))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v10))));
                                (v4 := ((( *v8)*( *v11))+(( *v9)*( *v10))));
                                (v5 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v4)))));
                                (v12 := (( *v4)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v5))));
                                (v6 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v12))+(( *v9)*( *v11))));
                                (v7 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v6)))));
                                (array.ref.elem.1D(v2, 0) := (( *v6)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v7))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *array.ref.elem.1D(v2, 0)));
                            }(scalar.to.array(composite.ref.elem(v122, tran, type<real<8>>)), ( *composite.ref.elem(v122, amult, type<real<8>>))));
                            (v135 := fun(ref<array<real<8>,1>> v2, real<8> v3){
                                decl ref<real<8>> v4 = ( var(0.0));
                                decl ref<real<8>> v5 = ( var(0.0));
                                decl ref<real<8>> v6 = ( var(0.0));
                                decl ref<real<8>> v7 = ( var(0.0));
                                decl ref<real<8>> v8 = ( var(0.0));
                                decl ref<real<8>> v9 = ( var(0.0));
                                decl ref<real<8>> v10 = ( var(0.0));
                                decl ref<real<8>> v11 = ( var(0.0));
                                decl ref<real<8>> v12 = ( var(0.0));
                                (v4 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v3));
                                (v8 := CAST<real<8>>(real.to.int(( *v4), 4)));
                                (v9 := (v3-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v8))));
                                (v4 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *array.ref.elem.1D(v2, 0))));
                                (v10 := CAST<real<8>>(real.to.int(( *v4), 4)));
                                (v11 := (( *array.ref.elem.1D(v2, 0))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v10))));
                                (v4 := ((( *v8)*( *v11))+(( *v9)*( *v10))));
                                (v5 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v4)))));
                                (v12 := (( *v4)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v5))));
                                (v6 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v12))+(( *v9)*( *v11))));
                                (v7 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v6)))));
                                (array.ref.elem.1D(v2, 0) := (( *v6)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v7))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *array.ref.elem.1D(v2, 0)));
                            }(scalar.to.array(composite.ref.elem(v122, tran, type<real<8>>)), ( *composite.ref.elem(v122, amult, type<real<8>>))));
                            (v133 := (fun(real<8> v136, int<4> v137){
                                return CAST<int<4>>((CAST<real<8>>(v137)*v136));
                            }(( *v135), ( *v129))+1));
                            if((( *v133)>v123)) continue else { };
                            if((( *array.ref.elem.1D(v128, CAST<uint<4>>(( *v133))))==0)) {
                                (array.ref.elem.1D(v128, CAST<uint<4>>(( *v133))) := 1);
                                (v130 := (( *v130)+1));
                                (array.ref.elem.1D(v127, CAST<uint<4>>(( *v130))) := ( *v133));
                                (v131 := (( *v131)+1));
                                (array.ref.elem.1D(v125, CAST<uint<4>>(( *v131))) := ( *v134));
                                (array.ref.elem.1D(v126, CAST<uint<4>>(( *v131))) := ( *v133));
                            } else { };
                        };
                        {
                            for(decl int<4> v140 = 1 .. (( *v130)+1) : 1) {
                                (v133 := ( *array.ref.elem.1D(v127, CAST<uint<4>>(v140))));
                                (array.ref.elem.1D(v128, CAST<uint<4>>(( *v133))) := 0);
                            };
                            (v132 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v130)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                    }(v91, v92, ( *v115), v106, v107, scalar.to.array(array.ref.elem.1D(v95, CAST<uint<4>>(0))), scalar.to.array(array.ref.elem.1D(v95, CAST<uint<4>>(v92))));
                    fun(int<4> v142, ref<array<real<8>,1>> v143, ref<array<int<4>,1>> v144, ref<array<int<4>,1>> v145, int<4> v146, real<8> v147){
                        decl ref<int<4>> v148 = ( var(0));
                        decl ref<int<4>> v149 = ( var(0));
                        (v149 := 0);
                        {
                            for(decl int<4> v151 = 1 .. (( *array.ref.elem.1D(v145, 0))+1) : 1) {
                                if((( *array.ref.elem.1D(v144, CAST<uint<4>>(v151)))==v146)) {
                                    (array.ref.elem.1D(v143, CAST<uint<4>>(v151)) := v147);
                                    (v149 := 1);
                                } else { };
                            };
                            (v148 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *array.ref.elem.1D(v145, 0))+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        if((( *v149)==0)) {
                            (array.ref.elem.1D(v145, 0) := (( *array.ref.elem.1D(v145, 0))+1));
                            (array.ref.elem.1D(v143, CAST<uint<4>>(( *array.ref.elem.1D(v145, 0)))) := v147);
                            (array.ref.elem.1D(v144, CAST<uint<4>>(( *array.ref.elem.1D(v145, 0)))) := v146);
                        } else { };
                    }(v92, v106, v107, scalar.to.array(v115), v164, 0.5);
                    {
                        for(decl int<4> v162 = 1 .. (( *v115)+1) : 1) {
                            (v119 := ( *array.ref.elem.1D(v107, CAST<uint<4>>(v162))));
                            if(((( *v119)>=v100)&&bind(){fun(ref<int<4>> v158, int<4> v159)return (( *v158)<=v159)(v119, v101)})) {
                                (v118 := (( *v116)*( *array.ref.elem.1D(v106, CAST<uint<4>>(v162)))));
                                {
                                    for(decl int<4> v157 = 1 .. (( *v115)+1) : 1) {
                                        (v114 := ( *array.ref.elem.1D(v107, CAST<uint<4>>(v157))));
                                        if(((( *v114)>=v98)&&bind(){fun(ref<int<4>> v153, int<4> v154)return (( *v153)<=v154)(v114, v99)})) {
                                            (v110 := (( *v110)+1));
                                            if((( *v110)>v93)) {
                                                printf(string.as.char.pointer("Space for matrix elements exceeded in"), varlist.pack(()));
                                                printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((( *v110), v93)));
                                                printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((v164)));
                                                exit(1);
                                            } else { };
                                            (array.ref.elem.1D(v104, CAST<uint<4>>(( *v110))) := ( *v119));
                                            (array.ref.elem.1D(v103, CAST<uint<4>>(( *v110))) := ( *v114));
                                            (array.ref.elem.1D(v105, CAST<uint<4>>(( *v110))) := (( *array.ref.elem.1D(v106, CAST<uint<4>>(v157)))*( *v118)));
                                        } else { };
                                    };
                                    (v113 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v115)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            } else { };
                        };
                        (v112 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v115)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    (v116 := (( *v116)*( *v117)));
                };
                (v111 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v92+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                for(decl int<4> v169 = v98 .. (v99+1) : 1) {
                    if(((v169>=v100)&&bind(){fun(ref<int<4>> v165, int<4> v166)return (( *v165)<=v166)(( var(v169)), v101)})) {
                        (v111 := (v92+v169));
                        (v110 := (( *v110)+1));
                        if((( *v110)>v93)) {
                            printf(string.as.char.pointer("Space for matrix elements exceeded in makea\n"), varlist.pack(()));
                            printf(string.as.char.pointer("nnza, nzmax = %d, %d\n"), varlist.pack((( *v110), v93)));
                            printf(string.as.char.pointer("iouter = %d\n"), varlist.pack((( *v111))));
                            exit(1);
                        } else { };
                        (array.ref.elem.1D(v104, CAST<uint<4>>(( *v110))) := v169);
                        (array.ref.elem.1D(v103, CAST<uint<4>>(( *v110))) := v169);
                        (array.ref.elem.1D(v105, CAST<uint<4>>(( *v110))) := (v102-v108));
                    } else { };
                };
                (v109 := (v98+(CAST<int<4>>(ceil((CAST<real<8>>(((v99+1)-v98))/CAST<real<8>>(1))))*1)));
            };
            fun(ref<array<real<8>,1>> v170, ref<array<int<4>,1>> v171, ref<array<int<4>,1>> v172, int<4> v173, ref<array<int<4>,1>> v174, ref<array<int<4>,1>> v175, ref<array<real<8>,1>> v176, int<4> v177, int<4> v178, ref<array<real<8>,1>> v179, ref<array<int<4>,1>> v180, ref<array<int<4>,1>> v181, int<4> v182){
                decl ref<int<4>> v183 = ( var(0));
                decl ref<int<4>> v184 = ( var(0));
                decl ref<int<4>> v185 = ( var(0));
                decl ref<int<4>> v186 = ( var(0));
                decl ref<int<4>> v187 = ( var(0));
                decl ref<int<4>> v188 = ( var(0));
                decl ref<int<4>> v189 = ( var(0));
                decl ref<real<8>> v190 = ( var(0.0));
                (v183 := ((v178-v177)+1));
                {
                    <m id=2>for(decl int<4> v192 = 1 .. (v173+1) : 1) {
                        (array.ref.elem.1D(v172, CAST<uint<4>>(v192)) := 0);
                        (array.ref.elem.1D(v180, CAST<uint<4>>(v192)) := 0);
                    }</m>;
                    (v185 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v173+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (array.ref.elem.1D(v172, CAST<uint<4>>((v173+1))) := 0);
                {
                    for(decl int<4> v194 = 1 .. (v182+1) : 1) {
                        (v185 := (((( *array.ref.elem.1D(v174, CAST<uint<4>>(v194)))-v177)+1)+1));
                        (array.ref.elem.1D(v172, CAST<uint<4>>(( *v185))) := (( *array.ref.elem.1D(v172, CAST<uint<4>>(( *v185))))+1));
                    };
                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v182+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (array.ref.elem.1D(v172, CAST<uint<4>>(1)) := 1);
                {
                    for(decl int<4> v196 = 2 .. ((( *v183)+1)+1) : 1) {
                        (array.ref.elem.1D(v172, CAST<uint<4>>(v196)) := (( *array.ref.elem.1D(v172, CAST<uint<4>>(v196)))+( *array.ref.elem.1D(v172, CAST<uint<4>>((v196-1))))));
                    };
                    (v185 := (2+(CAST<int<4>>(ceil((CAST<real<8>>((((( *v183)+1)+1)-2))/CAST<real<8>>(1))))*1)));
                };
                {
                    for(decl int<4> v198 = 1 .. (v182+1) : 1) {
                        (v185 := ((( *array.ref.elem.1D(v174, CAST<uint<4>>(v198)))-v177)+1));
                        (v188 := ( *array.ref.elem.1D(v172, CAST<uint<4>>(( *v185)))));
                        (array.ref.elem.1D(v170, CAST<uint<4>>(( *v188))) := ( *array.ref.elem.1D(v176, CAST<uint<4>>(v198))));
                        (array.ref.elem.1D(v171, CAST<uint<4>>(( *v188))) := ( *array.ref.elem.1D(v175, CAST<uint<4>>(v198))));
                        (array.ref.elem.1D(v172, CAST<uint<4>>(( *v185))) := (( *array.ref.elem.1D(v172, CAST<uint<4>>(( *v185))))+1));
                    };
                    (v187 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v182+1)-1))/CAST<real<8>>(1))))*1)));
                };
                {
                    for(decl int<4> v200 = (CAST<int<4>>(0)-( *v183)) .. ((CAST<int<4>>(0)-1)+1) : 1) {
                        (array.ref.elem.1D(v172, CAST<uint<4>>(((CAST<int<4>>(0)-v200)+1))) := ( *array.ref.elem.1D(v172, CAST<uint<4>>((CAST<int<4>>(0)-v200)))));
                    };
                    (v185 := (( *v183)+(CAST<int<4>>(ceil((CAST<real<8>>((((CAST<int<4>>(0)-1)+1)-( *v183)))/CAST<real<8>>(1))))*1)));
                };
                (array.ref.elem.1D(v172, CAST<uint<4>>(1)) := 1);
                (v187 := 0);
                {
                    <m id=3>for(decl int<4> v202 = 1 .. (v173+1) : 1) {
                        (array.ref.elem.1D(v179, CAST<uint<4>>(v202)) := 0.0);
                        (array.ref.elem.1D(v180, CAST<uint<4>>(v202)) := 0);
                    }</m>;
                    (v184 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v173+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (v186 := ( *array.ref.elem.1D(v172, CAST<uint<4>>(1))));
                {
                    for(decl int<4> v211 = 1 .. (( *v183)+1) : 1) {
                        (v189 := 0);
                        {
                            for(decl int<4> v207 = ( *v186) .. ( *array.ref.elem.1D(v172, CAST<uint<4>>((v211+1)))) : 1) {
                                (v184 := ( *array.ref.elem.1D(v171, CAST<uint<4>>(v207))));
                                (array.ref.elem.1D(v179, CAST<uint<4>>(( *v184))) := (( *array.ref.elem.1D(v179, CAST<uint<4>>(( *v184))))+( *array.ref.elem.1D(v170, CAST<uint<4>>(v207)))));
                                if(((( *array.ref.elem.1D(v180, CAST<uint<4>>(( *v184))))==0)&&bind(){fun(ref<array<real<8>,1>> v203, ref<int<4>> v204)return real.ne(( *array.ref.elem.1D(v203, CAST<uint<4>>(( *v204)))), 0.0)(v179, v184)})) {
                                    (array.ref.elem.1D(v180, CAST<uint<4>>(( *v184))) := 1);
                                    (v189 := (( *v189)+1));
                                    (array.ref.elem.1D(v181, CAST<uint<4>>(( *v189))) := ( *v184));
                                } else { };
                            };
                            (v188 := (( *v186)+(CAST<int<4>>(ceil((CAST<real<8>>((( *array.ref.elem.1D(v172, CAST<uint<4>>((v211+1))))-( *v186)))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl int<4> v209 = 1 .. (( *v189)+1) : 1) {
                                (v184 := ( *array.ref.elem.1D(v181, CAST<uint<4>>(v209))));
                                (array.ref.elem.1D(v180, CAST<uint<4>>(( *v184))) := 0);
                                (v190 := ( *array.ref.elem.1D(v179, CAST<uint<4>>(( *v184)))));
                                (array.ref.elem.1D(v179, CAST<uint<4>>(( *v184))) := 0.0);
                                if(real.ne(( *v190), 0.0)) {
                                    (v187 := (( *v187)+1));
                                    (array.ref.elem.1D(v170, CAST<uint<4>>(( *v187))) := ( *v190));
                                    (array.ref.elem.1D(v171, CAST<uint<4>>(( *v187))) := ( *v184));
                                } else { };
                            };
                            (v188 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v189)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        (v186 := ( *array.ref.elem.1D(v172, CAST<uint<4>>((v211+1)))));
                        (array.ref.elem.1D(v172, CAST<uint<4>>((v211+1))) := (( *v187)+( *array.ref.elem.1D(v172, CAST<uint<4>>(1)))));
                    };
                    (v185 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v183)+1)-1))/CAST<real<8>>(1))))*1)));
                };
            }(v94, v95, v96, v92, v103, v104, v105, v98, v99, v106, scalar.to.array(array.ref.elem.1D(v107, CAST<uint<4>>(0))), scalar.to.array(array.ref.elem.1D(v107, CAST<uint<4>>(v92))), ( *v110));
        }(v1, ( *composite.ref.elem(v1, naa, type<int<4>>)), ( *composite.ref.elem(v1, nzz, type<int<4>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), 8, ( *composite.ref.elem(v1, firstrow, type<int<4>>)), ( *composite.ref.elem(v1, lastrow, type<int<4>>)), ( *composite.ref.elem(v1, firstcol, type<int<4>>)), ( *composite.ref.elem(v1, lastcol, type<int<4>>)), 1.0e-1, ref.vector.to.ref.array(composite.ref.elem(v1, arow, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, acol, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, aelt, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, v, type<vector<real<8>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, iv, type<vector<int<4>,14002>>)), 12.0);
        <m id=24>{
            {
                <m id=4>for(decl int<4> v217 = 1 .. (((( *composite.ref.elem(v1, lastrow, type<int<4>>))-( *composite.ref.elem(v1, firstrow, type<int<4>>)))+1)+1) : 1) {
                    {
                        for(decl int<4> v215 = ( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>(v217))) .. ( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>((v217+1)))) : 1) {
                            (vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), CAST<uint<4>>(v215)) := ((( *vector.ref.elem(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>), CAST<uint<4>>(v215)))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1));
                        };
                        (v63 := (( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>(v217)))+(CAST<int<4>>(ceil((CAST<real<8>>((( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>((v217+1))))-( *vector.ref.elem(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>), CAST<uint<4>>(v217)))))/CAST<real<8>>(1))))*1)));
                    };
                }</m>;
                (v62 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastrow, type<int<4>>))-( *composite.ref.elem(v1, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                <m id=5>for(decl int<4> v219 = 1 .. ((7000+1)+1) : 1) {
                    (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v219)) := 1.0);
                }</m>;
                (v61 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((7000+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            <m id=1>(v66 := 0.0)</m>;
            {
                for(decl int<4> v272 = 1 .. (1+1) : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v220, ref<array<int<4>,1>> v221, ref<array<int<4>,1>> v222, ref<array<real<8>,1>> v223, ref<array<real<8>,1>> v224, ref<array<real<8>,1>> v225, ref<array<real<8>,1>> v226, ref<array<real<8>,1>> v227, ref<array<real<8>,1>> v228, ref<array<real<8>,1>> v229, ref<array<real<8>,1>> v230){
                        decl ref<int<4>> v231 = ( var(0));
                        decl ref<int<4>> v232 = ( var(0));
                        decl ref<int<4>> v233 = ( var(0));
                        decl ref<int<4>> v234 = ( var(0));
                        decl ref<int<4>> v235 = ( var(25));
                        <m id=2>(composite.ref.elem(v220, rho, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=6>for(decl int<4> v237 = 1 .. ((( *composite.ref.elem(v220, naa, type<int<4>>))+1)+1) : 1) {
                                (array.ref.elem.1D(v227, CAST<uint<4>>(v237)) := 0.0);
                                (array.ref.elem.1D(v224, CAST<uint<4>>(v237)) := 0.0);
                                (array.ref.elem.1D(v228, CAST<uint<4>>(v237)) := ( *array.ref.elem.1D(v223, CAST<uint<4>>(v237))));
                                (array.ref.elem.1D(v226, CAST<uint<4>>(v237)) := ( *array.ref.elem.1D(v228, CAST<uint<4>>(v237))));
                                (array.ref.elem.1D(v229, CAST<uint<4>>(v237)) := 0.0);
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((( *composite.ref.elem(v220, naa, type<int<4>>))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=7>for(decl int<4> v239 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v220, rho, type<real<8>>) := (( *composite.ref.elem(v220, rho, type<real<8>>))+(( *array.ref.elem.1D(v223, CAST<uint<4>>(v239)))*( *array.ref.elem.1D(v223, CAST<uint<4>>(v239))))));
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl int<4> v257 = 1 .. (( *v235)+1) : 1) {
                                <m id=8>{
                                    (composite.ref.elem(v220, rho0, type<real<8>>) := ( *composite.ref.elem(v220, rho, type<real<8>>)));
                                    (composite.ref.elem(v220, d, type<real<8>>) := 0.0);
                                    (composite.ref.elem(v220, rho, type<real<8>>) := 0.0);
                                }</m>;
                                {
                                    <m id=9>for(decl int<4> v243 = 1 .. (((( *composite.ref.elem(v220, lastrow, type<int<4>>))-( *composite.ref.elem(v220, firstrow, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v220, sum, type<real<8>>) := 0.0);
                                        {
                                            for(decl int<4> v241 = ( *array.ref.elem.1D(v222, CAST<uint<4>>(v243))) .. ( *array.ref.elem.1D(v222, CAST<uint<4>>((v243+1)))) : 1) {
                                                (composite.ref.elem(v220, sum, type<real<8>>) := (( *composite.ref.elem(v220, sum, type<real<8>>))+(( *array.ref.elem.1D(v225, CAST<uint<4>>(v241)))*( *array.ref.elem.1D(v226, CAST<uint<4>>(( *array.ref.elem.1D(v221, CAST<uint<4>>(v241)))))))));
                                            };
                                            (v233 := (( *array.ref.elem.1D(v222, CAST<uint<4>>(v243)))+(CAST<int<4>>(ceil((CAST<real<8>>((( *array.ref.elem.1D(v222, CAST<uint<4>>((v243+1))))-( *array.ref.elem.1D(v222, CAST<uint<4>>(v243)))))/CAST<real<8>>(1))))*1)));
                                        };
                                        (array.ref.elem.1D(v229, CAST<uint<4>>(v243)) := ( *composite.ref.elem(v220, sum, type<real<8>>)));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastrow, type<int<4>>))-( *composite.ref.elem(v220, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=10>for(decl int<4> v245 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v227, CAST<uint<4>>(v245)) := ( *array.ref.elem.1D(v229, CAST<uint<4>>(v245))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=11>for(decl int<4> v247 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v229, CAST<uint<4>>(v247)) := 0.0);
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=12>for(decl int<4> v249 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v220, d, type<real<8>>) := (( *composite.ref.elem(v220, d, type<real<8>>))+(( *array.ref.elem.1D(v226, CAST<uint<4>>(v249)))*( *array.ref.elem.1D(v227, CAST<uint<4>>(v249))))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=3>(composite.ref.elem(v220, alpha, type<real<8>>) := (( *composite.ref.elem(v220, rho0, type<real<8>>))/( *composite.ref.elem(v220, d, type<real<8>>))))</m>;
                                {
                                    <m id=13>for(decl int<4> v251 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v224, CAST<uint<4>>(v251)) := (( *array.ref.elem.1D(v224, CAST<uint<4>>(v251)))+(( *composite.ref.elem(v220, alpha, type<real<8>>))*( *array.ref.elem.1D(v226, CAST<uint<4>>(v251))))));
                                        (array.ref.elem.1D(v228, CAST<uint<4>>(v251)) := (( *array.ref.elem.1D(v228, CAST<uint<4>>(v251)))-(( *composite.ref.elem(v220, alpha, type<real<8>>))*( *array.ref.elem.1D(v227, CAST<uint<4>>(v251))))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=14>for(decl int<4> v253 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v220, rho, type<real<8>>) := (( *composite.ref.elem(v220, rho, type<real<8>>))+(( *array.ref.elem.1D(v228, CAST<uint<4>>(v253)))*( *array.ref.elem.1D(v228, CAST<uint<4>>(v253))))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=4>(composite.ref.elem(v220, beta, type<real<8>>) := (( *composite.ref.elem(v220, rho, type<real<8>>))/( *composite.ref.elem(v220, rho0, type<real<8>>))))</m>;
                                {
                                    <m id=15>for(decl int<4> v255 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v226, CAST<uint<4>>(v255)) := (( *array.ref.elem.1D(v228, CAST<uint<4>>(v255)))+(( *composite.ref.elem(v220, beta, type<real<8>>))*( *array.ref.elem.1D(v226, CAST<uint<4>>(v255))))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            };
                            (v234 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v235)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=5>(composite.ref.elem(v220, sum, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=16>for(decl int<4> v261 = 1 .. (((( *composite.ref.elem(v220, lastrow, type<int<4>>))-( *composite.ref.elem(v220, firstrow, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v220, d, type<real<8>>) := 0.0);
                                {
                                    for(decl int<4> v259 = ( *array.ref.elem.1D(v222, CAST<uint<4>>(v261))) .. ((( *array.ref.elem.1D(v222, CAST<uint<4>>((v261+1))))-1)+1) : 1) {
                                        (composite.ref.elem(v220, d, type<real<8>>) := (( *composite.ref.elem(v220, d, type<real<8>>))+(( *array.ref.elem.1D(v225, CAST<uint<4>>(v259)))*( *array.ref.elem.1D(v224, CAST<uint<4>>(( *array.ref.elem.1D(v221, CAST<uint<4>>(v259)))))))));
                                    };
                                    (v233 := (( *array.ref.elem.1D(v222, CAST<uint<4>>(v261)))+(CAST<int<4>>(ceil((CAST<real<8>>((((( *array.ref.elem.1D(v222, CAST<uint<4>>((v261+1))))-1)+1)-( *array.ref.elem.1D(v222, CAST<uint<4>>(v261)))))/CAST<real<8>>(1))))*1)));
                                };
                                (array.ref.elem.1D(v229, CAST<uint<4>>(v261)) := ( *composite.ref.elem(v220, d, type<real<8>>)));
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastrow, type<int<4>>))-( *composite.ref.elem(v220, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=17>for(decl int<4> v263 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (array.ref.elem.1D(v228, CAST<uint<4>>(v263)) := ( *array.ref.elem.1D(v229, CAST<uint<4>>(v263))));
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=18>for(decl int<4> v265 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v220, d, type<real<8>>) := (( *array.ref.elem.1D(v223, CAST<uint<4>>(v265)))-( *array.ref.elem.1D(v228, CAST<uint<4>>(v265)))));
                                (composite.ref.elem(v220, sum, type<real<8>>) := (( *composite.ref.elem(v220, sum, type<real<8>>))+(( *composite.ref.elem(v220, d, type<real<8>>))*( *composite.ref.elem(v220, d, type<real<8>>)))));
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=19>{
                            (array.ref.elem.1D(v230, 0) := sqrt(( *composite.ref.elem(v220, sum, type<real<8>>))));
                        }</m>;
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v67));
                    <m id=20>{
                        (v68 := 0.0);
                        (v69 := 0.0);
                    }</m>;
                    {
                        <m id=21>for(decl int<4> v268 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (v68 := (( *v68)+(( *vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v268)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v268))))));
                            (v69 := (( *v69)+(( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v268)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v268))))));
                        }</m>;
                        (v62 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    <m id=6>(v69 := (1.0/sqrt(( *v69))))</m>;
                    {
                        <m id=22>for(decl int<4> v270 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v270)) := (( *v69)*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v270)))));
                        }</m>;
                        (v62 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                };
                (v64 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((1+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                <m id=23>for(decl int<4> v274 = 1 .. ((7000+1)+1) : 1) {
                    (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v274)) := 1.0);
                }</m>;
                (v61 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((7000+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            <m id=7>(v66 := 0.0)</m>;
        }</m>;
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v53, int<4> v54){
            (vector.ref.elem(composite.ref.elem(v53, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v54)) := 0.0);
        }(v1, 1);
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v56, int<4> v57){
            (vector.ref.elem(composite.ref.elem(v56, start, type<vector<real<8>,64>>), CAST<uint<4>>(v57)) := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v42){
                decl ref<real<8>> v43 = ( var(0.0));
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v38, ref<array<real<8>,1>> v39){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v40 = ( var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>)));
                    gettimeofday(scalar.to.array(v40), ( var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>))));
                    if((( *composite.ref.elem(v38, sec, type<int<4>>))<0)) (composite.ref.elem(v38, sec, type<int<4>>) := CAST<int<4>>(( *composite.ref.elem(v40, tv_sec, type<int<8>>)))) else { };
                    (array.ref.elem.1D(v39, 0) := (CAST<real<8>>((( *composite.ref.elem(v40, tv_sec, type<int<8>>))-CAST<int<8>>(( *composite.ref.elem(v38, sec, type<int<4>>)))))+(1.0e-6*CAST<real<8>>(( *composite.ref.elem(v40, tv_usec, type<int<8>>))))));
                }(v42, scalar.to.array(v43));
                return ( *v43);
            }(v56));
        }(v1, 1);
        <m id=30>{
            {
                for(decl int<4> v280 = 1 .. (15+1) : 1) {
                    fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v220, ref<array<int<4>,1>> v221, ref<array<int<4>,1>> v222, ref<array<real<8>,1>> v223, ref<array<real<8>,1>> v224, ref<array<real<8>,1>> v225, ref<array<real<8>,1>> v226, ref<array<real<8>,1>> v227, ref<array<real<8>,1>> v228, ref<array<real<8>,1>> v229, ref<array<real<8>,1>> v230){
                        decl ref<int<4>> v231 = ( var(0));
                        decl ref<int<4>> v232 = ( var(0));
                        decl ref<int<4>> v233 = ( var(0));
                        decl ref<int<4>> v234 = ( var(0));
                        decl ref<int<4>> v235 = ( var(25));
                        <m id=2>(composite.ref.elem(v220, rho, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=6>for(decl int<4> v237 = 1 .. ((( *composite.ref.elem(v220, naa, type<int<4>>))+1)+1) : 1) {
                                (array.ref.elem.1D(v227, CAST<uint<4>>(v237)) := 0.0);
                                (array.ref.elem.1D(v224, CAST<uint<4>>(v237)) := 0.0);
                                (array.ref.elem.1D(v228, CAST<uint<4>>(v237)) := ( *array.ref.elem.1D(v223, CAST<uint<4>>(v237))));
                                (array.ref.elem.1D(v226, CAST<uint<4>>(v237)) := ( *array.ref.elem.1D(v228, CAST<uint<4>>(v237))));
                                (array.ref.elem.1D(v229, CAST<uint<4>>(v237)) := 0.0);
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((( *composite.ref.elem(v220, naa, type<int<4>>))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=7>for(decl int<4> v239 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v220, rho, type<real<8>>) := (( *composite.ref.elem(v220, rho, type<real<8>>))+(( *array.ref.elem.1D(v223, CAST<uint<4>>(v239)))*( *array.ref.elem.1D(v223, CAST<uint<4>>(v239))))));
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl int<4> v257 = 1 .. (( *v235)+1) : 1) {
                                <m id=8>{
                                    (composite.ref.elem(v220, rho0, type<real<8>>) := ( *composite.ref.elem(v220, rho, type<real<8>>)));
                                    (composite.ref.elem(v220, d, type<real<8>>) := 0.0);
                                    (composite.ref.elem(v220, rho, type<real<8>>) := 0.0);
                                }</m>;
                                {
                                    <m id=9>for(decl int<4> v243 = 1 .. (((( *composite.ref.elem(v220, lastrow, type<int<4>>))-( *composite.ref.elem(v220, firstrow, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v220, sum, type<real<8>>) := 0.0);
                                        {
                                            for(decl int<4> v241 = ( *array.ref.elem.1D(v222, CAST<uint<4>>(v243))) .. ( *array.ref.elem.1D(v222, CAST<uint<4>>((v243+1)))) : 1) {
                                                (composite.ref.elem(v220, sum, type<real<8>>) := (( *composite.ref.elem(v220, sum, type<real<8>>))+(( *array.ref.elem.1D(v225, CAST<uint<4>>(v241)))*( *array.ref.elem.1D(v226, CAST<uint<4>>(( *array.ref.elem.1D(v221, CAST<uint<4>>(v241)))))))));
                                            };
                                            (v233 := (( *array.ref.elem.1D(v222, CAST<uint<4>>(v243)))+(CAST<int<4>>(ceil((CAST<real<8>>((( *array.ref.elem.1D(v222, CAST<uint<4>>((v243+1))))-( *array.ref.elem.1D(v222, CAST<uint<4>>(v243)))))/CAST<real<8>>(1))))*1)));
                                        };
                                        (array.ref.elem.1D(v229, CAST<uint<4>>(v243)) := ( *composite.ref.elem(v220, sum, type<real<8>>)));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastrow, type<int<4>>))-( *composite.ref.elem(v220, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=10>for(decl int<4> v245 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v227, CAST<uint<4>>(v245)) := ( *array.ref.elem.1D(v229, CAST<uint<4>>(v245))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=11>for(decl int<4> v247 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v229, CAST<uint<4>>(v247)) := 0.0);
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=12>for(decl int<4> v249 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v220, d, type<real<8>>) := (( *composite.ref.elem(v220, d, type<real<8>>))+(( *array.ref.elem.1D(v226, CAST<uint<4>>(v249)))*( *array.ref.elem.1D(v227, CAST<uint<4>>(v249))))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=3>(composite.ref.elem(v220, alpha, type<real<8>>) := (( *composite.ref.elem(v220, rho0, type<real<8>>))/( *composite.ref.elem(v220, d, type<real<8>>))))</m>;
                                {
                                    <m id=13>for(decl int<4> v251 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v224, CAST<uint<4>>(v251)) := (( *array.ref.elem.1D(v224, CAST<uint<4>>(v251)))+(( *composite.ref.elem(v220, alpha, type<real<8>>))*( *array.ref.elem.1D(v226, CAST<uint<4>>(v251))))));
                                        (array.ref.elem.1D(v228, CAST<uint<4>>(v251)) := (( *array.ref.elem.1D(v228, CAST<uint<4>>(v251)))-(( *composite.ref.elem(v220, alpha, type<real<8>>))*( *array.ref.elem.1D(v227, CAST<uint<4>>(v251))))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=14>for(decl int<4> v253 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (composite.ref.elem(v220, rho, type<real<8>>) := (( *composite.ref.elem(v220, rho, type<real<8>>))+(( *array.ref.elem.1D(v228, CAST<uint<4>>(v253)))*( *array.ref.elem.1D(v228, CAST<uint<4>>(v253))))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=4>(composite.ref.elem(v220, beta, type<real<8>>) := (( *composite.ref.elem(v220, rho, type<real<8>>))/( *composite.ref.elem(v220, rho0, type<real<8>>))))</m>;
                                {
                                    <m id=15>for(decl int<4> v255 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                        (array.ref.elem.1D(v226, CAST<uint<4>>(v255)) := (( *array.ref.elem.1D(v228, CAST<uint<4>>(v255)))+(( *composite.ref.elem(v220, beta, type<real<8>>))*( *array.ref.elem.1D(v226, CAST<uint<4>>(v255))))));
                                    }</m>;
                                    (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            };
                            (v234 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v235)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=5>(composite.ref.elem(v220, sum, type<real<8>>) := 0.0)</m>;
                        {
                            <m id=16>for(decl int<4> v261 = 1 .. (((( *composite.ref.elem(v220, lastrow, type<int<4>>))-( *composite.ref.elem(v220, firstrow, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v220, d, type<real<8>>) := 0.0);
                                {
                                    for(decl int<4> v259 = ( *array.ref.elem.1D(v222, CAST<uint<4>>(v261))) .. ((( *array.ref.elem.1D(v222, CAST<uint<4>>((v261+1))))-1)+1) : 1) {
                                        (composite.ref.elem(v220, d, type<real<8>>) := (( *composite.ref.elem(v220, d, type<real<8>>))+(( *array.ref.elem.1D(v225, CAST<uint<4>>(v259)))*( *array.ref.elem.1D(v224, CAST<uint<4>>(( *array.ref.elem.1D(v221, CAST<uint<4>>(v259)))))))));
                                    };
                                    (v233 := (( *array.ref.elem.1D(v222, CAST<uint<4>>(v261)))+(CAST<int<4>>(ceil((CAST<real<8>>((((( *array.ref.elem.1D(v222, CAST<uint<4>>((v261+1))))-1)+1)-( *array.ref.elem.1D(v222, CAST<uint<4>>(v261)))))/CAST<real<8>>(1))))*1)));
                                };
                                (array.ref.elem.1D(v229, CAST<uint<4>>(v261)) := ( *composite.ref.elem(v220, d, type<real<8>>)));
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastrow, type<int<4>>))-( *composite.ref.elem(v220, firstrow, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=17>for(decl int<4> v263 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (array.ref.elem.1D(v228, CAST<uint<4>>(v263)) := ( *array.ref.elem.1D(v229, CAST<uint<4>>(v263))));
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=18>for(decl int<4> v265 = 1 .. (((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1) : 1) {
                                (composite.ref.elem(v220, d, type<real<8>>) := (( *array.ref.elem.1D(v223, CAST<uint<4>>(v265)))-( *array.ref.elem.1D(v228, CAST<uint<4>>(v265)))));
                                (composite.ref.elem(v220, sum, type<real<8>>) := (( *composite.ref.elem(v220, sum, type<real<8>>))+(( *composite.ref.elem(v220, d, type<real<8>>))*( *composite.ref.elem(v220, d, type<real<8>>)))));
                            }</m>;
                            (v232 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v220, lastcol, type<int<4>>))-( *composite.ref.elem(v220, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=19>{
                            (array.ref.elem.1D(v230, 0) := sqrt(( *composite.ref.elem(v220, sum, type<real<8>>))));
                        }</m>;
                    }(v1, ref.vector.to.ref.array(composite.ref.elem(v1, colidx, type<vector<int<4>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, rowstr, type<vector<int<4>,7002>>)), ref.vector.to.ref.array(composite.ref.elem(v1, x, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, z, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, a, type<vector<real<8>,637001>>)), ref.vector.to.ref.array(composite.ref.elem(v1, p, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, q, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, r, type<vector<real<8>,7003>>)), ref.vector.to.ref.array(composite.ref.elem(v1, w, type<vector<real<8>,7003>>)), scalar.to.array(v67));
                    <m id=25>{
                        (v68 := 0.0);
                        (v69 := 0.0);
                    }</m>;
                    {
                        <m id=26>for(decl int<4> v276 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (v68 := (( *v68)+(( *vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v276)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v276))))));
                            (v69 := (( *v69)+(( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v276)))*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v276))))));
                        }</m>;
                        (v62 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    <m id=27>{
                        (v69 := (1.0/sqrt(( *v69))));
                        (v66 := (12.0+(1.0/( *v68))));
                    }</m>;
                    <m id=28>{
                        if((v280==1)) {
                            printf(string.as.char.pointer("   iteration           ||r||                 zeta\n"), varlist.pack(()));
                        } else { };
                        printf(string.as.char.pointer("    %5d       %20.14e%20.13e\n"), varlist.pack((v280, ( *v67), ( *v66))));
                    }</m>;
                    {
                        <m id=29>for(decl int<4> v278 = 1 .. (((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1) : 1) {
                            (vector.ref.elem(composite.ref.elem(v1, x, type<vector<real<8>,7003>>), CAST<uint<4>>(v278)) := (( *v69)*( *vector.ref.elem(composite.ref.elem(v1, z, type<vector<real<8>,7003>>), CAST<uint<4>>(v278)))));
                        }</m>;
                        (v62 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *composite.ref.elem(v1, lastcol, type<int<4>>))-( *composite.ref.elem(v1, firstcol, type<int<4>>)))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                };
                (v64 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((15+1)-1))/CAST<real<8>>(1))))*1)));
            };
        }</m>;
        fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v45, int<4> v46){
            decl ref<real<8>> v47 = ( var(0.0));
            decl ref<real<8>> v48 = ( var(0.0));
            (v48 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v42){
                decl ref<real<8>> v43 = ( var(0.0));
                fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v38, ref<array<real<8>,1>> v39){
                    decl ref<struct<tv_sec:int<8>,tv_usec:int<8>>> v40 = ( var(undefined(type<struct<tv_sec:int<8>,tv_usec:int<8>>>)));
                    gettimeofday(scalar.to.array(v40), ( var(get.null(type<struct<tz_minuteswest:int<4>,tz_dsttime:int<4>>>))));
                    if((( *composite.ref.elem(v38, sec, type<int<4>>))<0)) (composite.ref.elem(v38, sec, type<int<4>>) := CAST<int<4>>(( *composite.ref.elem(v40, tv_sec, type<int<8>>)))) else { };
                    (array.ref.elem.1D(v39, 0) := (CAST<real<8>>((( *composite.ref.elem(v40, tv_sec, type<int<8>>))-CAST<int<8>>(( *composite.ref.elem(v38, sec, type<int<4>>)))))+(1.0e-6*CAST<real<8>>(( *composite.ref.elem(v40, tv_usec, type<int<8>>))))));
                }(v42, scalar.to.array(v43));
                return ( *v43);
            }(v45));
            (v47 := (( *v48)-( *vector.ref.elem(composite.ref.elem(v45, start, type<vector<real<8>,64>>), CAST<uint<4>>(v46)))));
            (vector.ref.elem(composite.ref.elem(v45, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v46)) := (( *vector.ref.elem(composite.ref.elem(v45, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v46)))+( *v47)));
        }(v1, 1);
        (v70 := fun(ref<struct<naa:int<4>,nzz:int<4>,firstrow:int<4>,lastrow:int<4>,firstcol:int<4>,lastcol:int<4>,colidx:vector<int<4>,637001>,rowstr:vector<int<4>,7002>,iv:vector<int<4>,14002>,arow:vector<int<4>,637001>,acol:vector<int<4>,637001>,v:vector<real<8>,7002>,aelt:vector<real<8>,637001>,a:vector<real<8>,637001>,x:vector<real<8>,7003>,z:vector<real<8>,7003>,p:vector<real<8>,7003>,q:vector<real<8>,7003>,r:vector<real<8>,7003>,w:vector<real<8>,7003>,amult:real<8>,tran:real<8>,d:real<8>,sum:real<8>,rho:real<8>,rho0:real<8>,alpha:real<8>,beta:real<8>,start:vector<real<8>,64>,elapsed:vector<real<8>,64>,sec:int<4>>> v50, int<4> v51){
            return ( *vector.ref.elem(composite.ref.elem(v50, elapsed, type<vector<real<8>,64>>), CAST<uint<4>>(v51)));
        }(v1, 1));
        printf(string.as.char.pointer(" Benchmark completed\n"), varlist.pack(()));
        (v75 := 1.0e-10);
        if((( *v72)!='U')) {
            if((fabs((( *v66)-( *v74)))<=( *v75))) {
                (v73 := 1);
                printf(string.as.char.pointer(" VERIFICATION SUCCESSFUL\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta is    %20.12e\n"), varlist.pack((( *v66))));
                printf(string.as.char.pointer(" Error is   %20.12e\n"), varlist.pack(((( *v66)-( *v74)))));
            } else {
                (v73 := 0);
                printf(string.as.char.pointer(" VERIFICATION FAILED\n"), varlist.pack(()));
                printf(string.as.char.pointer(" Zeta                %20.12e\n"), varlist.pack((( *v66))));
                printf(string.as.char.pointer(" The correct zeta is %20.12e\n"), varlist.pack((( *v74))));
            };
        } else {
            (v73 := 0);
            printf(string.as.char.pointer(" Problem size unknown\n"), varlist.pack(()));
            printf(string.as.char.pointer(" NO VERIFICATION PERFORMED\n"), varlist.pack(()));
        };
        if(real.ne(( *v70), 0.0)) {
            (v71 := (((((2.0*CAST<real<8>>(15))*CAST<real<8>>(7000))*(((3.0+CAST<real<8>>((8*(8+1))))+(25.0*(5.0+CAST<real<8>>((8*(8+1))))))+3.0))/( *v70))/1000000.0));
        } else {
            (v71 := 0.0);
        };
        fun(ref<array<char,1>> v14, char v15, int<4> v16, int<4> v17, int<4> v18, int<4> v19, int<4> v20, real<8> v21, real<8> v22, ref<array<char,1>> v23, int<4> v24, ref<array<char,1>> v25, ref<array<char,1>> v26, ref<array<char,1>> v27, ref<array<char,1>> v28, ref<array<char,1>> v29, ref<array<char,1>> v30, ref<array<char,1>> v31, ref<array<char,1>> v32, ref<array<char,1>> v33){
            decl ref<array<char,1>> v34 = string.as.char.pointer("1000");
            printf(string.as.char.pointer("\n\n %s Benchmark Completed\n"), varlist.pack((v14)));
            printf(string.as.char.pointer(" Class           =                        %c\n"), varlist.pack((CAST<int<4>>(v15))));
            if(((v17==0)&&bind(){fun(int<4> v35)return (v35==0)(v18)})) printf(string.as.char.pointer(" Size            =             %12d\n"), varlist.pack((v16))) else printf(string.as.char.pointer(" Size            =              %3dx%3dx%3d\n"), varlist.pack((v16, v17, v18)));
            printf(string.as.char.pointer(" Iterations      =             %12d\n"), varlist.pack((v19)));
            printf(string.as.char.pointer(" Threads         =             %12d\n"), varlist.pack((v20)));
            printf(string.as.char.pointer(" Time in seconds =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Mop/s total     =             %12.2f\n"), varlist.pack((0.0)));
            printf(string.as.char.pointer(" Operation type  = %24s\n"), varlist.pack((v23)));
            if(int.ne(v24, 0)) printf(string.as.char.pointer(" Verification    =               SUCCESSFUL\n"), varlist.pack(())) else printf(string.as.char.pointer(" Verification    =             UNSUCCESSFUL\n"), varlist.pack(()));
            printf(string.as.char.pointer(" Version         =             %12s\n"), varlist.pack((v25)));
            printf(string.as.char.pointer(" Compile date    =             %12s\n"), varlist.pack((v26)));
            printf(string.as.char.pointer("\n Compile options:\n"), varlist.pack(()));
            printf(string.as.char.pointer("    CC           = %s\n"), varlist.pack((v27)));
            printf(string.as.char.pointer("    CLINK        = %s\n"), varlist.pack((v28)));
            printf(string.as.char.pointer("    C_LIB        = %s\n"), varlist.pack((v29)));
            printf(string.as.char.pointer("    C_INC        = %s\n"), varlist.pack((v30)));
            printf(string.as.char.pointer("    CFLAGS       = %s\n"), varlist.pack((v31)));
            printf(string.as.char.pointer("    CLINKFLAGS   = %s\n"), varlist.pack((v32)));
            printf(string.as.char.pointer("    RAND         = %s\n"), varlist.pack((v33)));
        }(string.as.char.pointer("CG"), ( *v72), 7000, 0, 0, 15, ( *v65), ( *v70), ( *v71), string.as.char.pointer("          floating point"), ( *v73), string.as.char.pointer("2.3"), string.as.char.pointer("02 Dec 2010"), string.as.char.pointer("cc"), string.as.char.pointer("cc"), string.as.char.pointer("-lm"), string.as.char.pointer("-I../common"), string.as.char.pointer("-O3 "), string.as.char.pointer("-lm"), string.as.char.pointer("randdp"));
    }


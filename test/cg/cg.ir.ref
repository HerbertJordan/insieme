// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, array<ref<array<ref<char>,1>>,1> v3){
        decl ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v1 =  var(struct{naa:= var(0), nzz:= var(0), firstrow:= var(0), lastrow:= var(0), firstcol:= var(0), lastcol:= var(0), colidx:= var(array.create.1D( new(vector.initUniform( var(0), 637001)), 1)), rowstr:= var(array.create.1D( new(vector.initUniform( var(0), 7002)), 1)), iv:= var(array.create.1D( new(vector.initUniform( var(0), 14002)), 1)), arow:= var(array.create.1D( new(vector.initUniform( var(0), 637001)), 1)), acol:= var(array.create.1D( new(vector.initUniform( var(0), 637001)), 1)), v:= var(array.create.1D( new(vector.initUniform( var(0.0), 7002)), 1)), aelt:= var(array.create.1D( new(vector.initUniform( var(0.0), 637001)), 1)), a:= var(array.create.1D( new(vector.initUniform( var(0.0), 637001)), 1)), x:= var(array.create.1D( new(vector.initUniform( var(0.0), 7003)), 1)), z:= var(array.create.1D( new(vector.initUniform( var(0.0), 7003)), 1)), p:= var(array.create.1D( new(vector.initUniform( var(0.0), 7003)), 1)), q:= var(array.create.1D( new(vector.initUniform( var(0.0), 7003)), 1)), r:= var(array.create.1D( new(vector.initUniform( var(0.0), 7003)), 1)), w:= var(array.create.1D( new(vector.initUniform( var(0.0), 7003)), 1)), amult:= var(0.0), tran:= var(0.0), d:= var(0.0), sum:= var(0.0), rho:= var(0.0), rho0:= var(0.0), alpha:= var(0.0), beta:= var(0.0), start:= var(array.create.1D( new(vector.initUniform( var(0.0), 64)), 1)), elapsed:= var(array.create.1D( new(vector.initUniform( var(0.0), 64)), 1)), sec:= var(0-1)});
        decl ref<int<4>> v4 =  var(0);
        decl ref<int<4>> v5 =  var(0);
        decl ref<int<4>> v6 =  var(0);
        decl ref<int<4>> v7 =  var(0);
        decl ref<int<4>> v8 =  var(1);
        decl ref<real<8>> v9 =  var(0.0);
        decl ref<real<8>> v10 =  var(0.0);
        decl ref<real<8>> v11 =  var(0.0);
        decl ref<real<8>> v12 =  var(0.0);
        decl ref<real<8>> v13 =  var(0.0);
        decl ref<real<8>> v14 =  var(0.0);
        decl ref<char> v15 =  var('\0');
        decl ref<int<4>> v16 =  var(0);
        decl ref<real<8>> v17 =  var(0.0);
        decl ref<real<8>> v18 =  var(0.0);
        v1.firstrow := 1;
        v1.lastrow := 7000;
        v1.firstcol := 1;
        v1.lastcol := 7000;
        if(7000==1400&&fun()return 8==7&&fun()return 15==15&&fun()return 12.0==10.0) {
            v15 := 'S';
            v17 := 8.5971775078648;
        } else if(7000==7000&&fun()return 8==8&&fun()return 15==15&&fun()return 12.0==12.0) {
            v15 := 'W';
            v17 := 10.362595087124;
        } else if(7000==14000&&fun()return 8==11&&fun()return 15==15&&fun()return 12.0==20.0) {
            v15 := 'A';
            v17 := 17.130235054029;
        } else if(7000==75000&&fun()return 8==13&&fun()return 15==75&&fun()return 12.0==60.0) {
            v15 := 'B';
            v17 := 22.712745482631;
        } else if(7000==150000&&fun()return 8==15&&fun()return 15==75&&fun()return 12.0==110.0) {
            v15 := 'C';
            v17 := 28.973605592845;
        } else {
            v15 := 'U';
        };
        printf("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - CG Benchmark\n", varlist.pack(()));
        printf(" Size: %10d\n", varlist.pack((7000)));
        printf(" Iterations: %5d\n", varlist.pack((15)));
        v1.naa := 7000;
        v1.nzz := 7000*8+1*8+1+7000*8+2;
        v1.tran := 314159265.0;
        v1.amult := 1220703125.0;
        v9 := fun(array<ref<real<8>>,1> v34, real<8> v35){
            decl ref<real<8>> v36 =  var(0.0);
            decl ref<real<8>> v37 =  var(0.0);
            decl ref<real<8>> v38 =  var(0.0);
            decl ref<real<8>> v39 =  var(0.0);
            decl ref<real<8>> v40 =  var(0.0);
            decl ref<real<8>> v41 =  var(0.0);
            decl ref<real<8>> v42 =  var(0.0);
            decl ref<real<8>> v43 =  var(0.0);
            decl ref<real<8>> v44 =  var(0.0);
            v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v35;
            v40 := v36;
            v41 := v35-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v40;
            v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v34[0];
            v42 := v36;
            v43 := v34[0]-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v42;
            v36 := v40*v43+v41*v42;
            v37 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v36;
            v44 := v36-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v37;
            v38 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v44+v41*v43;
            v39 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v38;
            v34[0] := v38-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v39;
            return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v34[0];
        }([v1.tran], v1.amult);
        [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v63](int<4> v46, int<4> v47, array<ref<real<8>>,1> v48, array<ref<int<4>>,1> v49, array<ref<int<4>>,1> v50, int<4> v51, int<4> v52, int<4> v53, int<4> v54, int<4> v55, real<8> v56, array<ref<int<4>>,1> v57, array<ref<int<4>>,1> v58, array<ref<real<8>>,1> v59, array<ref<real<8>>,1> v60, array<ref<int<4>>,1> v61, real<8> v62){
            decl ref<int<4>> v64 =  var(0);
            decl ref<int<4>> v65 =  var(0);
            decl ref<int<4>> v66 =  var(0);
            decl ref<int<4>> v67 =  var(0);
            decl ref<int<4>> v68 =  var(0);
            decl ref<int<4>> v69 =  var(0);
            decl ref<int<4>> v70 =  var(0);
            decl ref<real<8>> v71 =  var(0.0);
            decl ref<real<8>> v72 =  var(0.0);
            decl ref<real<8>> v73 =  var(0.0);
            decl ref<int<4>> v74 =  var(0);
            v71 := 1.0;
            v72 := pow(v56, 1.0/v46);
            v65 := 0;
            {
                for(decl ref<int<4>> v75 =  var(1) .. v46+1 : 1) {
                    v49[v46+v75] := 0;
                };
                v64 := 1+ceil(v46+1-1/1)*1;
            };
            {
                for(decl ref<int<4>> v113 =  var(1) .. v46+1 : 1) {
                    v70 := v51;
                    [v63]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v82](int<4> v76, int<4> v77, array<ref<real<8>>,1> v78, array<ref<int<4>>,1> v79, array<ref<int<4>>,1> v80, array<ref<int<4>>,1> v81){
                        decl ref<int<4>> v83 =  var(0);
                        decl ref<int<4>> v84 =  var(0);
                        decl ref<int<4>> v85 =  var(0);
                        decl ref<int<4>> v86 =  var(0);
                        decl ref<int<4>> v87 =  var(0);
                        decl ref<real<8>> v88 =  var(0.0);
                        decl ref<real<8>> v89 =  var(0.0);
                        v85 := 0;
                        v84 := 0;
                        v83 := 1;
                        {
                            v83 := 2*v83;
                            while(v83<v76) {
                                v83 := 2*v83;
                            };
                        };
                        while(v85<v77) {
                            v88 := fun(array<ref<real<8>>,1> v34, real<8> v35){
                                decl ref<real<8>> v36 =  var(0.0);
                                decl ref<real<8>> v37 =  var(0.0);
                                decl ref<real<8>> v38 =  var(0.0);
                                decl ref<real<8>> v39 =  var(0.0);
                                decl ref<real<8>> v40 =  var(0.0);
                                decl ref<real<8>> v41 =  var(0.0);
                                decl ref<real<8>> v42 =  var(0.0);
                                decl ref<real<8>> v43 =  var(0.0);
                                decl ref<real<8>> v44 =  var(0.0);
                                v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v35;
                                v40 := v36;
                                v41 := v35-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v40;
                                v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v34[0];
                                v42 := v36;
                                v43 := v34[0]-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v42;
                                v36 := v40*v43+v41*v42;
                                v37 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v36;
                                v44 := v36-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v37;
                                v38 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v44+v41*v43;
                                v39 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v38;
                                v34[0] := v38-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v39;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v34[0];
                            }([v82.tran], v82.amult);
                            v89 := fun(array<ref<real<8>>,1> v34, real<8> v35){
                                decl ref<real<8>> v36 =  var(0.0);
                                decl ref<real<8>> v37 =  var(0.0);
                                decl ref<real<8>> v38 =  var(0.0);
                                decl ref<real<8>> v39 =  var(0.0);
                                decl ref<real<8>> v40 =  var(0.0);
                                decl ref<real<8>> v41 =  var(0.0);
                                decl ref<real<8>> v42 =  var(0.0);
                                decl ref<real<8>> v43 =  var(0.0);
                                decl ref<real<8>> v44 =  var(0.0);
                                v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v35;
                                v40 := v36;
                                v41 := v35-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v40;
                                v36 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v34[0];
                                v42 := v36;
                                v43 := v34[0]-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v42;
                                v36 := v40*v43+v41*v42;
                                v37 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v36;
                                v44 := v36-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v37;
                                v38 := 2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v44+v41*v43;
                                v39 := 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v38;
                                v34[0] := v38-2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*2.0*v39;
                                return 0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*0.5*v34[0];
                            }([v82.tran], v82.amult);
                            v87 := fun(real<8> v90, int<4> v91){
                                return v91*v90;
                            }(v89, v83)+1;
                            if(v87>v76) continue else { };
                            if(v81[v87]==0) {
                                v81[v87] := 1;
                                v84 := v84+1;
                                v80[v84] := v87;
                                v85 := v85+1;
                                v78[v85] := v88;
                                v79[v85] := v87;
                            } else { };
                        };
                        {
                            for(decl ref<int<4>> v93 =  var(1) .. v84+1 : 1) {
                                v87 := v80[v93];
                                v81[v87] := 0;
                            };
                            v86 := 1+ceil(v84+1-1/1)*1;
                        };
                    }(v46, v70, v60, v61, [v49[0]], [v49[v46]]);
                    fun(int<4> v95, array<ref<real<8>>,1> v96, array<ref<int<4>>,1> v97, array<ref<int<4>>,1> v98, int<4> v99, real<8> v100){
                        decl ref<int<4>> v101 =  var(0);
                        decl ref<int<4>> v102 =  var(0);
                        v102 := 0;
                        {
                            for(decl ref<int<4>> v103 =  var(1) .. v98[0]+1 : 1) {
                                if(v97[v103]==v99) {
                                    v96[v103] := v100;
                                    v102 := 1;
                                } else { };
                            };
                            v101 := 1+ceil(v98[0]+1-1/1)*1;
                        };
                        if(v102==0) {
                            v98[0] := v98[0]+1;
                            v96[v98[0]] := v100;
                            v97[v98[0]] := v99;
                        } else { };
                    }(v46, v60, v61, [v70], v113, 0.5);
                    {
                        for(decl ref<int<4>> v112 =  var(1) .. v70+1 : 1) {
                            v74 := v61[v112];
                            if(v74>=v54&&[v55, v74]fun[int<4> v109, ref<int<4>> v110]()return v110<=v109) {
                                v73 := v71*v60[v112];
                                {
                                    for(decl ref<int<4>> v108 =  var(1) .. v70+1 : 1) {
                                        v69 := v61[v108];
                                        if(v69>=v52&&[v53, v69]fun[int<4> v105, ref<int<4>> v106]()return v106<=v105) {
                                            v65 := v65+1;
                                            if(v65>v47) {
                                                printf("Space for matrix elements exceeded in", varlist.pack(()));
                                                printf("nnza, nzmax = %d, %d\n", varlist.pack((v65, v47)));
                                                printf("iouter = %d\n", varlist.pack((v113)));
                                                exit(1);
                                            } else { };
                                            v58[v65] := v74;
                                            v57[v65] := v69;
                                            v59[v65] := v60[v108]*v73;
                                        } else { };
                                    };
                                    v68 := 1+ceil(v70+1-1/1)*1;
                                };
                            } else { };
                        };
                        v67 := 1+ceil(v70+1-1/1)*1;
                    };
                    v71 := v71*v72;
                };
                v66 := 1+ceil(v46+1-1/1)*1;
            };
            {
                for(decl ref<int<4>> v117 =  var(v52) .. v53+1 : 1) {
                    if(v117>=v54&&[v55, v117]fun[int<4> v114, ref<int<4>> v115]()return v115<=v114) {
                        v66 := v46+v117;
                        v65 := v65+1;
                        if(v65>v47) {
                            printf("Space for matrix elements exceeded in makea\n", varlist.pack(()));
                            printf("nnza, nzmax = %d, %d\n", varlist.pack((v65, v47)));
                            printf("iouter = %d\n", varlist.pack((v66)));
                            exit(1);
                        } else { };
                        v58[v65] := v117;
                        v57[v65] := v117;
                        v59[v65] := v56-v62;
                    } else { };
                };
                v64 := v52+ceil(v53+1-v52/1)*1;
            };
            fun(array<ref<real<8>>,1> v118, array<ref<int<4>>,1> v119, array<ref<int<4>>,1> v120, int<4> v121, array<ref<int<4>>,1> v122, array<ref<int<4>>,1> v123, array<ref<real<8>>,1> v124, int<4> v125, int<4> v126, array<ref<real<8>>,1> v127, array<ref<int<4>>,1> v128, array<ref<int<4>>,1> v129, int<4> v130){
                decl ref<int<4>> v131 =  var(0);
                decl ref<int<4>> v132 =  var(0);
                decl ref<int<4>> v133 =  var(0);
                decl ref<int<4>> v134 =  var(0);
                decl ref<int<4>> v135 =  var(0);
                decl ref<int<4>> v136 =  var(0);
                decl ref<int<4>> v137 =  var(0);
                decl ref<real<8>> v138 =  var(0.0);
                v131 := v126-v125+1;
                {
                    for(decl ref<int<4>> v139 =  var(1) .. v121+1 : 1) {
                        v120[v139] := 0;
                        v128[v139] := 0;
                    };
                    v133 := 1+ceil(v121+1-1/1)*1;
                };
                v120[v121+1] := 0;
                {
                    for(decl ref<int<4>> v140 =  var(1) .. v130+1 : 1) {
                        v133 := v122[v140]-v125+1+1;
                        v120[v133] := v120[v133]+1;
                    };
                    v135 := 1+ceil(v130+1-1/1)*1;
                };
                v120[1] := 1;
                {
                    for(decl ref<int<4>> v141 =  var(2) .. v131+1+1 : 1) {
                        v120[v141] := v120[v141]+v120[v141-1];
                    };
                    v133 := 2+ceil(v131+1+1-2/1)*1;
                };
                {
                    for(decl ref<int<4>> v142 =  var(1) .. v130+1 : 1) {
                        v133 := v122[v142]-v125+1;
                        v136 := v120[v133];
                        v118[v136] := v124[v142];
                        v119[v136] := v123[v142];
                        v120[v133] := v120[v133]+1;
                    };
                    v135 := 1+ceil(v130+1-1/1)*1;
                };
                {
                    for(decl ref<int<4>> v143 =  var(0-v131) .. 0-1+1 : 1) {
                        v120[0-v143+1] := v120[0-v143];
                    };
                    v133 := v131+ceil(0-1+1-v131/1)*1;
                };
                v120[1] := 1;
                v135 := 0;
                {
                    for(decl ref<int<4>> v144 =  var(1) .. v121+1 : 1) {
                        v127[v144] := 0.0;
                        v128[v144] := 0;
                    };
                    v132 := 1+ceil(v121+1-1/1)*1;
                };
                v134 := v120[1];
                {
                    for(decl ref<int<4>> v150 =  var(1) .. v131+1 : 1) {
                        v137 := 0;
                        {
                            for(decl ref<int<4>> v148 =  var(v134) .. v120[v150+1] : 1) {
                                v132 := v119[v148];
                                v127[v132] := v127[v132]+v118[v148];
                                if(v128[v132]==0&&[v127, v132]fun[array<ref<real<8>>,1> v145, ref<int<4>> v146]()return real.ne(v145[v146], 0.0)) {
                                    v128[v132] := 1;
                                    v137 := v137+1;
                                    v129[v137] := v132;
                                } else { };
                            };
                            v136 := v134+ceil(v120[v150+1]-v134/1)*1;
                        };
                        {
                            for(decl ref<int<4>> v149 =  var(1) .. v137+1 : 1) {
                                v132 := v129[v149];
                                v128[v132] := 0;
                                v138 := v127[v132];
                                v127[v132] := 0.0;
                                if(real.ne(v138, 0.0)) {
                                    v135 := v135+1;
                                    v118[v135] := v138;
                                    v119[v135] := v132;
                                } else { };
                            };
                            v136 := 1+ceil(v137+1-1/1)*1;
                        };
                        v134 := v120[v150+1];
                        v120[v150+1] := v135+v120[1];
                    };
                    v133 := 1+ceil(v131+1-1/1)*1;
                };
            }(v48, v49, v50, v46, v57, v58, v59, v52, v53, v60, [v61[0]], [v61[v46]], v65);
        }(v1.naa, v1.nzz, v1.a[0], v1.colidx[0], v1.rowstr[0], 8, v1.firstrow, v1.lastrow, v1.firstcol, v1.lastcol, 1.0e-1, v1.arow[0], v1.acol[0], v1.aelt[0], v1.v[0], v1.iv[0], 12.0);
        {
            {
                for(decl ref<int<4>> v257 =  var(1) .. v1.lastrow-v1.firstrow+1+1 : 1) {
                    {
                        for(decl ref<int<4>> v256 =  var(v1.rowstr[0][v257]) .. v1.rowstr[0][v257+1] : 1) {
                            v1.colidx[0][v256] := v1.colidx[0][v256]-v1.firstcol+1;
                        };
                        v6 := v1.rowstr[0][v257]+ceil(v1.rowstr[0][v257+1]-v1.rowstr[0][v257]/1)*1;
                    };
                };
                v5 := 1+ceil(v1.lastrow-v1.firstrow+1+1-1/1)*1;
            };
            {
                for(decl ref<int<4>> v258 =  var(1) .. 7000+1+1 : 1) {
                    v1.x[0][v258] := 1.0;
                };
                v4 := 1+ceil(7000+1+1-1/1)*1;
            };
            v9 := 0.0;
            {
                for(decl ref<int<4>> v261 =  var(1) .. 1+1 : 1) {
                    [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v166](array<ref<int<4>>,1> v156, array<ref<int<4>>,1> v157, array<ref<real<8>>,1> v158, array<ref<real<8>>,1> v159, array<ref<real<8>>,1> v160, array<ref<real<8>>,1> v161, array<ref<real<8>>,1> v162, array<ref<real<8>>,1> v163, array<ref<real<8>>,1> v164, array<ref<real<8>>,1> v165){
                        decl ref<int<4>> v167 =  var(0);
                        decl ref<int<4>> v168 =  var(0);
                        decl ref<int<4>> v169 =  var(0);
                        decl ref<int<4>> v170 =  var(0);
                        decl ref<int<4>> v171 =  var(25);
                        v166.rho := 0.0;
                        {
                            for(decl ref<int<4>> v172 =  var(1) .. v166.naa+1+1 : 1) {
                                v162[v172] := 0.0;
                                v159[v172] := 0.0;
                                v163[v172] := v158[v172];
                                v161[v172] := v163[v172];
                                v164[v172] := 0.0;
                            };
                            v168 := 1+ceil(v166.naa+1+1-1/1)*1;
                        };
                        {
                            for(decl ref<int<4>> v173 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                v166.rho := v166.rho+v158[v173]*v158[v173];
                            };
                            v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                        };
                        {
                            for(decl ref<int<4>> v182 =  var(1) .. v171+1 : 1) {
                                {
                                    v166.rho0 := v166.rho;
                                    v166.d := 0.0;
                                    v166.rho := 0.0;
                                };
                                {
                                    for(decl ref<int<4>> v175 =  var(1) .. v166.lastrow-v166.firstrow+1+1 : 1) {
                                        v166.sum := 0.0;
                                        {
                                            for(decl ref<int<4>> v174 =  var(v157[v175]) .. v157[v175+1] : 1) {
                                                v166.sum := v166.sum+v160[v174]*v161[v156[v174]];
                                            };
                                            v169 := v157[v175]+ceil(v157[v175+1]-v157[v175]/1)*1;
                                        };
                                        v164[v175] := v166.sum;
                                    };
                                    v168 := 1+ceil(v166.lastrow-v166.firstrow+1+1-1/1)*1;
                                };
                                {
                                    for(decl ref<int<4>> v176 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v162[v176] := v164[v176];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                {
                                    for(decl ref<int<4>> v177 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v164[v177] := 0.0;
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                {
                                    for(decl ref<int<4>> v178 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v166.d := v166.d+v161[v178]*v162[v178];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                v166.alpha := v166.rho0/v166.d;
                                {
                                    for(decl ref<int<4>> v179 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v159[v179] := v159[v179]+v166.alpha*v161[v179];
                                        v163[v179] := v163[v179]-v166.alpha*v162[v179];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                {
                                    for(decl ref<int<4>> v180 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v166.rho := v166.rho+v163[v180]*v163[v180];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                v166.beta := v166.rho/v166.rho0;
                                {
                                    for(decl ref<int<4>> v181 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v161[v181] := v163[v181]+v166.beta*v161[v181];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                            };
                            v170 := 1+ceil(v171+1-1/1)*1;
                        };
                        v166.sum := 0.0;
                        {
                            for(decl ref<int<4>> v184 =  var(1) .. v166.lastrow-v166.firstrow+1+1 : 1) {
                                v166.d := 0.0;
                                {
                                    for(decl ref<int<4>> v183 =  var(v157[v184]) .. v157[v184+1]-1+1 : 1) {
                                        v166.d := v166.d+v160[v183]*v159[v156[v183]];
                                    };
                                    v169 := v157[v184]+ceil(v157[v184+1]-1+1-v157[v184]/1)*1;
                                };
                                v164[v184] := v166.d;
                            };
                            v168 := 1+ceil(v166.lastrow-v166.firstrow+1+1-1/1)*1;
                        };
                        {
                            for(decl ref<int<4>> v185 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                v163[v185] := v164[v185];
                            };
                            v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                        };
                        {
                            for(decl ref<int<4>> v186 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                v166.d := v158[v186]-v163[v186];
                                v166.sum := v166.sum+v166.d*v166.d;
                            };
                            v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                        };
                        {
                            v165[0] := sqrt(v166.sum);
                        };
                    }(v1.colidx[0], v1.rowstr[0], v1.x[0], v1.z[0], v1.a[0], v1.p[0], v1.q[0], v1.r[0], v1.w[0], [v10]);
                    {
                        v11 := 0.0;
                        v12 := 0.0;
                    };
                    {
                        for(decl ref<int<4>> v259 =  var(1) .. v1.lastcol-v1.firstcol+1+1 : 1) {
                            v11 := v11+v1.x[0][v259]*v1.z[0][v259];
                            v12 := v12+v1.z[0][v259]*v1.z[0][v259];
                        };
                        v5 := 1+ceil(v1.lastcol-v1.firstcol+1+1-1/1)*1;
                    };
                    v12 := 1.0/sqrt(v12);
                    {
                        for(decl ref<int<4>> v260 =  var(1) .. v1.lastcol-v1.firstcol+1+1 : 1) {
                            v1.x[0][v260] := v12*v1.z[0][v260];
                        };
                        v5 := 1+ceil(v1.lastcol-v1.firstcol+1+1-1/1)*1;
                    };
                };
                v7 := 1+ceil(1+1-1/1)*1;
            };
            {
                for(decl ref<int<4>> v262 =  var(1) .. 7000+1+1 : 1) {
                    v1.x[0][v262] := 1.0;
                };
                v4 := 1+ceil(7000+1+1-1/1)*1;
            };
            v9 := 0.0;
        };
        [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v193](int<4> v192){
            v193.elapsed[0][v192] := 0.0;
        }(1);
        [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v196](int<4> v195){
            v196.start[0][v195] := [v196]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v197](){
                decl ref<real<8>> v198 =  var(0.0);
                [v197]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v200](array<ref<real<8>>,1> v199){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v201 =  var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>));
                    gettimeofday([v201], null);
                    if(v200.sec<0) v200.sec := v201.tv_sec else { };
                    v199[0] := v201.tv_sec-v200.sec+1.0e-6*v201.tv_usec;
                }([v198]);
                return v198;
            }();
        }(1);
        {
            {
                for(decl ref<int<4>> v265 =  var(1) .. 15+1 : 1) {
                    [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v166](array<ref<int<4>>,1> v156, array<ref<int<4>>,1> v157, array<ref<real<8>>,1> v158, array<ref<real<8>>,1> v159, array<ref<real<8>>,1> v160, array<ref<real<8>>,1> v161, array<ref<real<8>>,1> v162, array<ref<real<8>>,1> v163, array<ref<real<8>>,1> v164, array<ref<real<8>>,1> v165){
                        decl ref<int<4>> v167 =  var(0);
                        decl ref<int<4>> v168 =  var(0);
                        decl ref<int<4>> v169 =  var(0);
                        decl ref<int<4>> v170 =  var(0);
                        decl ref<int<4>> v171 =  var(25);
                        v166.rho := 0.0;
                        {
                            for(decl ref<int<4>> v172 =  var(1) .. v166.naa+1+1 : 1) {
                                v162[v172] := 0.0;
                                v159[v172] := 0.0;
                                v163[v172] := v158[v172];
                                v161[v172] := v163[v172];
                                v164[v172] := 0.0;
                            };
                            v168 := 1+ceil(v166.naa+1+1-1/1)*1;
                        };
                        {
                            for(decl ref<int<4>> v173 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                v166.rho := v166.rho+v158[v173]*v158[v173];
                            };
                            v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                        };
                        {
                            for(decl ref<int<4>> v182 =  var(1) .. v171+1 : 1) {
                                {
                                    v166.rho0 := v166.rho;
                                    v166.d := 0.0;
                                    v166.rho := 0.0;
                                };
                                {
                                    for(decl ref<int<4>> v175 =  var(1) .. v166.lastrow-v166.firstrow+1+1 : 1) {
                                        v166.sum := 0.0;
                                        {
                                            for(decl ref<int<4>> v174 =  var(v157[v175]) .. v157[v175+1] : 1) {
                                                v166.sum := v166.sum+v160[v174]*v161[v156[v174]];
                                            };
                                            v169 := v157[v175]+ceil(v157[v175+1]-v157[v175]/1)*1;
                                        };
                                        v164[v175] := v166.sum;
                                    };
                                    v168 := 1+ceil(v166.lastrow-v166.firstrow+1+1-1/1)*1;
                                };
                                {
                                    for(decl ref<int<4>> v176 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v162[v176] := v164[v176];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                {
                                    for(decl ref<int<4>> v177 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v164[v177] := 0.0;
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                {
                                    for(decl ref<int<4>> v178 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v166.d := v166.d+v161[v178]*v162[v178];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                v166.alpha := v166.rho0/v166.d;
                                {
                                    for(decl ref<int<4>> v179 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v159[v179] := v159[v179]+v166.alpha*v161[v179];
                                        v163[v179] := v163[v179]-v166.alpha*v162[v179];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                {
                                    for(decl ref<int<4>> v180 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v166.rho := v166.rho+v163[v180]*v163[v180];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                                v166.beta := v166.rho/v166.rho0;
                                {
                                    for(decl ref<int<4>> v181 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                        v161[v181] := v163[v181]+v166.beta*v161[v181];
                                    };
                                    v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                                };
                            };
                            v170 := 1+ceil(v171+1-1/1)*1;
                        };
                        v166.sum := 0.0;
                        {
                            for(decl ref<int<4>> v184 =  var(1) .. v166.lastrow-v166.firstrow+1+1 : 1) {
                                v166.d := 0.0;
                                {
                                    for(decl ref<int<4>> v183 =  var(v157[v184]) .. v157[v184+1]-1+1 : 1) {
                                        v166.d := v166.d+v160[v183]*v159[v156[v183]];
                                    };
                                    v169 := v157[v184]+ceil(v157[v184+1]-1+1-v157[v184]/1)*1;
                                };
                                v164[v184] := v166.d;
                            };
                            v168 := 1+ceil(v166.lastrow-v166.firstrow+1+1-1/1)*1;
                        };
                        {
                            for(decl ref<int<4>> v185 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                v163[v185] := v164[v185];
                            };
                            v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                        };
                        {
                            for(decl ref<int<4>> v186 =  var(1) .. v166.lastcol-v166.firstcol+1+1 : 1) {
                                v166.d := v158[v186]-v163[v186];
                                v166.sum := v166.sum+v166.d*v166.d;
                            };
                            v168 := 1+ceil(v166.lastcol-v166.firstcol+1+1-1/1)*1;
                        };
                        {
                            v165[0] := sqrt(v166.sum);
                        };
                    }(v1.colidx[0], v1.rowstr[0], v1.x[0], v1.z[0], v1.a[0], v1.p[0], v1.q[0], v1.r[0], v1.w[0], [v10]);
                    {
                        v11 := 0.0;
                        v12 := 0.0;
                    };
                    {
                        for(decl ref<int<4>> v263 =  var(1) .. v1.lastcol-v1.firstcol+1+1 : 1) {
                            v11 := v11+v1.x[0][v263]*v1.z[0][v263];
                            v12 := v12+v1.z[0][v263]*v1.z[0][v263];
                        };
                        v5 := 1+ceil(v1.lastcol-v1.firstcol+1+1-1/1)*1;
                    };
                    {
                        v12 := 1.0/sqrt(v12);
                        v9 := 12.0+1.0/v11;
                    };
                    {
                        if(v265==1) {
                            printf("   iteration           ||r||                 zeta\n", varlist.pack(()));
                        } else { };
                        printf("    %5d       %20.14e%20.13e\n", varlist.pack((v265, v10, v9)));
                    };
                    {
                        for(decl ref<int<4>> v264 =  var(1) .. v1.lastcol-v1.firstcol+1+1 : 1) {
                            v1.x[0][v264] := v12*v1.z[0][v264];
                        };
                        v5 := 1+ceil(v1.lastcol-v1.firstcol+1+1-1/1)*1;
                    };
                };
                v7 := 1+ceil(15+1-1/1)*1;
            };
        };
        [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v209](int<4> v208){
            decl ref<real<8>> v210 =  var(0.0);
            decl ref<real<8>> v211 =  var(0.0);
            v211 := [v209]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v197](){
                decl ref<real<8>> v198 =  var(0.0);
                [v197]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v200](array<ref<real<8>>,1> v199){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v201 =  var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>));
                    gettimeofday([v201], null);
                    if(v200.sec<0) v200.sec := v201.tv_sec else { };
                    v199[0] := v201.tv_sec-v200.sec+1.0e-6*v201.tv_usec;
                }([v198]);
                return v198;
            }();
            v210 := v211-v209.start[0][v208];
            v209.elapsed[0][v208] := v209.elapsed[0][v208]+v210;
        }(1);
        v13 := [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v214](int<4> v213){
            return v214.elapsed[0][v213];
        }(1);
        printf(" Benchmark completed\n", varlist.pack(()));
        v18 := 1.0e-10;
        if(int.ne(v15, 'U')) {
            if(fabs(v9-v17)<=v18) {
                v16 := 1;
                printf(" VERIFICATION SUCCESSFUL\n", varlist.pack(()));
                printf(" Zeta is    %20.12e\n", varlist.pack((v9)));
                printf(" Error is   %20.12e\n", varlist.pack((v9-v17)));
            } else {
                v16 := 0;
                printf(" VERIFICATION FAILED\n", varlist.pack(()));
                printf(" Zeta                %20.12e\n", varlist.pack((v9)));
                printf(" The correct zeta is %20.12e\n", varlist.pack((v17)));
            };
        } else {
            v16 := 0;
            printf(" Problem size unknown\n", varlist.pack(()));
            printf(" NO VERIFICATION PERFORMED\n", varlist.pack(()));
        };
        if(real.ne(v13, 0.0)) {
            v14 := 2.0*15*7000*3.0+8*8+1+25.0*5.0+8*8+1+3.0/v13/1000000.0;
        } else {
            v14 := 0.0;
        };
        fun(array<ref<char>,1> v216, char v217, int<4> v218, int<4> v219, int<4> v220, int<4> v221, int<4> v222, real<8> v223, real<8> v224, array<ref<char>,1> v225, int<4> v226, array<ref<char>,1> v227, array<ref<char>,1> v228, array<ref<char>,1> v229, array<ref<char>,1> v230, array<ref<char>,1> v231, array<ref<char>,1> v232, array<ref<char>,1> v233, array<ref<char>,1> v234, array<ref<char>,1> v235){
            decl ref<array<ref<char>,1>> v236 =  var("1000");
            printf("\n\n %s Benchmark Completed\n", varlist.pack((v216)));
            printf(" Class           =                        %c\n", varlist.pack((v217)));
            if(v219==0&&[v220]fun[int<4> v237]()return v237==0) printf(" Size            =             %12d\n", varlist.pack((v218))) else printf(" Size            =              %3dx%3dx%3d\n", varlist.pack((v218, v219, v220)));
            printf(" Iterations      =             %12d\n", varlist.pack((v221)));
            printf(" Threads         =             %12d\n", varlist.pack((v222)));
            printf(" Time in seconds =             %12.2f\n", varlist.pack((0.0)));
            printf(" Mop/s total     =             %12.2f\n", varlist.pack((0.0)));
            printf(" Operation type  = %24s\n", varlist.pack((v225)));
            if(v226) printf(" Verification    =               SUCCESSFUL\n", varlist.pack(())) else printf(" Verification    =             UNSUCCESSFUL\n", varlist.pack(()));
            printf(" Version         =             %12s\n", varlist.pack((v227)));
            printf(" Compile date    =             %12s\n", varlist.pack((v228)));
            printf("\n Compile options:\n", varlist.pack(()));
            printf("    CC           = %s\n", varlist.pack((v229)));
            printf("    CLINK        = %s\n", varlist.pack((v230)));
            printf("    C_LIB        = %s\n", varlist.pack((v231)));
            printf("    C_INC        = %s\n", varlist.pack((v232)));
            printf("    CFLAGS       = %s\n", varlist.pack((v233)));
            printf("    CLINKFLAGS   = %s\n", varlist.pack((v234)));
            printf("    RAND         = %s\n", varlist.pack((v235)));
        }("CG", v15, 7000, 0, 0, 15, v8, v13, v14, "          floating point", v16, "2.3", "02 Dec 2010", "cc", "cc", "-lm", "-I../common", "-O3 ", "-lm", "randdp");
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v2, array<ref<array<ref<char>,1>>,1> v3){
        decl ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v1 = ( var(struct{naa:=( var(0)), nzz:=( var(0)), firstrow:=( var(0)), lastrow:=( var(0)), firstcol:=( var(0)), lastcol:=( var(0)), colidx:=( var(array.create.1D(( new(vector.initUniform(( var(0)), 637001))), 1))), rowstr:=( var(array.create.1D(( new(vector.initUniform(( var(0)), 7002))), 1))), iv:=( var(array.create.1D(( new(vector.initUniform(( var(0)), 14002))), 1))), arow:=( var(array.create.1D(( new(vector.initUniform(( var(0)), 637001))), 1))), acol:=( var(array.create.1D(( new(vector.initUniform(( var(0)), 637001))), 1))), v:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 7002))), 1))), aelt:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 637001))), 1))), a:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 637001))), 1))), x:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 7003))), 1))), z:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 7003))), 1))), p:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 7003))), 1))), q:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 7003))), 1))), r:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 7003))), 1))), w:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 7003))), 1))), amult:=( var(0.0)), tran:=( var(0.0)), d:=( var(0.0)), sum:=( var(0.0)), rho:=( var(0.0)), rho0:=( var(0.0)), alpha:=( var(0.0)), beta:=( var(0.0)), start:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 64))), 1))), elapsed:=( var(array.create.1D(( new(vector.initUniform(( var(0.0)), 64))), 1))), sec:=( var((CAST<int<4>>(0)-1)))}));
        decl ref<int<4>> v4 = ( var(0));
        decl ref<int<4>> v5 = ( var(0));
        decl ref<int<4>> v6 = ( var(0));
        decl ref<int<4>> v7 = ( var(0));
        decl ref<int<4>> v8 = ( var(1));
        decl ref<real<8>> v9 = ( var(0.0));
        decl ref<real<8>> v10 = ( var(0.0));
        decl ref<real<8>> v11 = ( var(0.0));
        decl ref<real<8>> v12 = ( var(0.0));
        decl ref<real<8>> v13 = ( var(0.0));
        decl ref<real<8>> v14 = ( var(0.0));
        decl ref<char> v15 = ( var('\0'));
        decl ref<int<4>> v16 = ( var(0));
        decl ref<real<8>> v17 = ( var(0.0));
        decl ref<real<8>> v18 = ( var(0.0));
        (( *v1).firstrow := 1);
        (( *v1).lastrow := 7000);
        (( *v1).firstcol := 1);
        (( *v1).lastcol := 7000);
        if(((((7000==1400)&&fun()return (8==7))&&fun()return (15==15))&&fun()return (12.0==10.0))) {
            (v15 := CAST<char>('S'));
            (v17 := 8.5971775078648);
        } else if(((((7000==7000)&&fun()return (8==8))&&fun()return (15==15))&&fun()return (12.0==12.0))) {
            (v15 := CAST<char>('W'));
            (v17 := 10.362595087124);
        } else if(((((7000==14000)&&fun()return (8==11))&&fun()return (15==15))&&fun()return (12.0==20.0))) {
            (v15 := CAST<char>('A'));
            (v17 := 17.130235054029);
        } else if(((((7000==75000)&&fun()return (8==13))&&fun()return (15==75))&&fun()return (12.0==60.0))) {
            (v15 := CAST<char>('B'));
            (v17 := 22.712745482631);
        } else if(((((7000==150000)&&fun()return (8==15))&&fun()return (15==75))&&fun()return (12.0==110.0))) {
            (v15 := CAST<char>('C'));
            (v17 := 28.973605592845);
        } else {
            (v15 := CAST<char>('U'));
        };
        printf("\n\n NAS Parallel Benchmarks 2.3 OpenMP C version - CG Benchmark\n", varlist.pack(()));
        printf(" Size: %10d\n", varlist.pack((7000)));
        printf(" Iterations: %5d\n", varlist.pack((15)));
        (( *v1).naa := 7000);
        (( *v1).nzz := (((7000*(8+1))*(8+1))+(7000*(8+2))));
        (( *v1).tran := 314159265.0);
        (( *v1).amult := 1220703125.0);
        (v9 := fun(array<ref<real<8>>,1> v34, real<8> v35){
            decl ref<real<8>> v36 = ( var(0.0));
            decl ref<real<8>> v37 = ( var(0.0));
            decl ref<real<8>> v38 = ( var(0.0));
            decl ref<real<8>> v39 = ( var(0.0));
            decl ref<real<8>> v40 = ( var(0.0));
            decl ref<real<8>> v41 = ( var(0.0));
            decl ref<real<8>> v42 = ( var(0.0));
            decl ref<real<8>> v43 = ( var(0.0));
            decl ref<real<8>> v44 = ( var(0.0));
            (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v35));
            (v40 := CAST<real<8>>(CAST<int<4>>(( *v36))));
            (v41 := (v35-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v40))));
            (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *(v34[0]))));
            (v42 := CAST<real<8>>(CAST<int<4>>(( *v36))));
            (v43 := (( *(v34[0]))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v42))));
            (v36 := ((( *v40)*( *v43))+(( *v41)*( *v42))));
            (v37 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v36)))));
            (v44 := (( *v36)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v37))));
            (v38 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v44))+(( *v41)*( *v43))));
            (v39 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v38)))));
            ((v34[0]) := (( *v38)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v39))));
            return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *(v34[0])));
        }([( *v1).tran], ( *( *v1).amult)));
        [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v63](int<4> v46, int<4> v47, array<ref<real<8>>,1> v48, array<ref<int<4>>,1> v49, array<ref<int<4>>,1> v50, int<4> v51, int<4> v52, int<4> v53, int<4> v54, int<4> v55, real<8> v56, array<ref<int<4>>,1> v57, array<ref<int<4>>,1> v58, array<ref<real<8>>,1> v59, array<ref<real<8>>,1> v60, array<ref<int<4>>,1> v61, real<8> v62){
            decl ref<int<4>> v64 = ( var(0));
            decl ref<int<4>> v65 = ( var(0));
            decl ref<int<4>> v66 = ( var(0));
            decl ref<int<4>> v67 = ( var(0));
            decl ref<int<4>> v68 = ( var(0));
            decl ref<int<4>> v69 = ( var(0));
            decl ref<int<4>> v70 = ( var(0));
            decl ref<real<8>> v71 = ( var(0.0));
            decl ref<real<8>> v72 = ( var(0.0));
            decl ref<real<8>> v73 = ( var(0.0));
            decl ref<int<4>> v74 = ( var(0));
            (v71 := 1.0);
            (v72 := pow(v56, (1.0/CAST<real<8>>(v46))));
            (v65 := 0);
            {
                <m id=1>for(decl ref<int<4>> v75 = ( var(1)) .. (v46+1) : 1) {
                    ((v49[CAST<uint<4>>((v46+( *v75)))]) := 0);
                }</m>;
                (v64 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v46+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                for(decl ref<int<4>> v113 = ( var(1)) .. (v46+1) : 1) {
                    (v70 := v51);
                    [v63]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v82](int<4> v76, int<4> v77, array<ref<real<8>>,1> v78, array<ref<int<4>>,1> v79, array<ref<int<4>>,1> v80, array<ref<int<4>>,1> v81){
                        decl ref<int<4>> v83 = ( var(0));
                        decl ref<int<4>> v84 = ( var(0));
                        decl ref<int<4>> v85 = ( var(0));
                        decl ref<int<4>> v86 = ( var(0));
                        decl ref<int<4>> v87 = ( var(0));
                        decl ref<real<8>> v88 = ( var(0.0));
                        decl ref<real<8>> v89 = ( var(0.0));
                        (v85 := 0);
                        (v84 := 0);
                        (v83 := 1);
                        {
                            (v83 := (2*( *v83)));
                            while((( *v83)<v76)) {
                                (v83 := (2*( *v83)));
                            };
                        };
                        while((( *v85)<v77)) {
                            (v88 := fun(array<ref<real<8>>,1> v34, real<8> v35){
                                decl ref<real<8>> v36 = ( var(0.0));
                                decl ref<real<8>> v37 = ( var(0.0));
                                decl ref<real<8>> v38 = ( var(0.0));
                                decl ref<real<8>> v39 = ( var(0.0));
                                decl ref<real<8>> v40 = ( var(0.0));
                                decl ref<real<8>> v41 = ( var(0.0));
                                decl ref<real<8>> v42 = ( var(0.0));
                                decl ref<real<8>> v43 = ( var(0.0));
                                decl ref<real<8>> v44 = ( var(0.0));
                                (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v35));
                                (v40 := CAST<real<8>>(CAST<int<4>>(( *v36))));
                                (v41 := (v35-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v40))));
                                (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *(v34[0]))));
                                (v42 := CAST<real<8>>(CAST<int<4>>(( *v36))));
                                (v43 := (( *(v34[0]))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v42))));
                                (v36 := ((( *v40)*( *v43))+(( *v41)*( *v42))));
                                (v37 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v36)))));
                                (v44 := (( *v36)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v37))));
                                (v38 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v44))+(( *v41)*( *v43))));
                                (v39 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v38)))));
                                ((v34[0]) := (( *v38)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v39))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *(v34[0])));
                            }([( *v82).tran], ( *( *v82).amult)));
                            (v89 := fun(array<ref<real<8>>,1> v34, real<8> v35){
                                decl ref<real<8>> v36 = ( var(0.0));
                                decl ref<real<8>> v37 = ( var(0.0));
                                decl ref<real<8>> v38 = ( var(0.0));
                                decl ref<real<8>> v39 = ( var(0.0));
                                decl ref<real<8>> v40 = ( var(0.0));
                                decl ref<real<8>> v41 = ( var(0.0));
                                decl ref<real<8>> v42 = ( var(0.0));
                                decl ref<real<8>> v43 = ( var(0.0));
                                decl ref<real<8>> v44 = ( var(0.0));
                                (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*v35));
                                (v40 := CAST<real<8>>(CAST<int<4>>(( *v36))));
                                (v41 := (v35-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v40))));
                                (v36 := (((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *(v34[0]))));
                                (v42 := CAST<real<8>>(CAST<int<4>>(( *v36))));
                                (v43 := (( *(v34[0]))-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v42))));
                                (v36 := ((( *v40)*( *v43))+(( *v41)*( *v42))));
                                (v37 := CAST<real<8>>(CAST<int<4>>((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*( *v36)))));
                                (v44 := (( *v36)-(((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v37))));
                                (v38 := ((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*( *v44))+(( *v41)*( *v43))));
                                (v39 := CAST<real<8>>(CAST<int<4>>(((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *v38)))));
                                ((v34[0]) := (( *v38)-((((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*((((((((((((((((((((((2.0*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0)*2.0))*( *v39))));
                                return ((((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*((((((((((((((((((((((0.5*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5)*0.5))*( *(v34[0])));
                            }([( *v82).tran], ( *( *v82).amult)));
                            (v87 := (fun(real<8> v90, int<4> v91){
                                return CAST<int<4>>((CAST<real<8>>(v91)*v90));
                            }(( *v89), ( *v83))+1));
                            if((( *v87)>v76)) continue else { };
                            if((( *(v81[CAST<uint<4>>(( *v87))]))==0)) {
                                ((v81[CAST<uint<4>>(( *v87))]) := 1);
                                (v84 := (( *v84)+1));
                                ((v80[CAST<uint<4>>(( *v84))]) := ( *v87));
                                (v85 := (( *v85)+1));
                                ((v78[CAST<uint<4>>(( *v85))]) := ( *v88));
                                ((v79[CAST<uint<4>>(( *v85))]) := ( *v87));
                            } else { };
                        };
                        {
                            for(decl ref<int<4>> v93 = ( var(1)) .. (( *v84)+1) : 1) {
                                (v87 := ( *(v80[CAST<uint<4>>(( *v93))])));
                                ((v81[CAST<uint<4>>(( *v87))]) := 0);
                            };
                            (v86 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v84)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                    }(v46, ( *v70), v60, v61, [(v49[CAST<uint<4>>(0)])], [(v49[CAST<uint<4>>(v46)])]);
                    fun(int<4> v95, array<ref<real<8>>,1> v96, array<ref<int<4>>,1> v97, array<ref<int<4>>,1> v98, int<4> v99, real<8> v100){
                        decl ref<int<4>> v101 = ( var(0));
                        decl ref<int<4>> v102 = ( var(0));
                        (v102 := 0);
                        {
                            for(decl ref<int<4>> v103 = ( var(1)) .. (( *(v98[0]))+1) : 1) {
                                if((( *(v97[CAST<uint<4>>(( *v103))]))==v99)) {
                                    ((v96[CAST<uint<4>>(( *v103))]) := v100);
                                    (v102 := 1);
                                } else { };
                            };
                            (v101 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *(v98[0]))+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        if((( *v102)==0)) {
                            ((v98[0]) := (( *(v98[0]))+1));
                            ((v96[CAST<uint<4>>(( *(v98[0])))]) := v100);
                            ((v97[CAST<uint<4>>(( *(v98[0])))]) := v99);
                        } else { };
                    }(v46, v60, v61, [v70], ( *v113), 0.5);
                    {
                        for(decl ref<int<4>> v112 = ( var(1)) .. (( *v70)+1) : 1) {
                            (v74 := ( *(v61[CAST<uint<4>>(( *v112))])));
                            if(((( *v74)>=v54)&&[v55, v74]fun[int<4> v109, ref<int<4>> v110]()return (( *v110)<=v109))) {
                                (v73 := (( *v71)*( *(v60[CAST<uint<4>>(( *v112))]))));
                                {
                                    for(decl ref<int<4>> v108 = ( var(1)) .. (( *v70)+1) : 1) {
                                        (v69 := ( *(v61[CAST<uint<4>>(( *v108))])));
                                        if(((( *v69)>=v52)&&[v53, v69]fun[int<4> v105, ref<int<4>> v106]()return (( *v106)<=v105))) {
                                            (v65 := (( *v65)+1));
                                            if((( *v65)>v47)) {
                                                printf("Space for matrix elements exceeded in", varlist.pack(()));
                                                printf("nnza, nzmax = %d, %d\n", varlist.pack((( *v65), v47)));
                                                printf("iouter = %d\n", varlist.pack((( *v113))));
                                                exit(1);
                                            } else { };
                                            ((v58[CAST<uint<4>>(( *v65))]) := ( *v74));
                                            ((v57[CAST<uint<4>>(( *v65))]) := ( *v69));
                                            ((v59[CAST<uint<4>>(( *v65))]) := (( *(v60[CAST<uint<4>>(( *v108))]))*( *v73)));
                                        } else { };
                                    };
                                    (v68 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v70)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            } else { };
                        };
                        (v67 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v70)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    (v71 := (( *v71)*( *v72)));
                };
                (v66 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v46+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                for(decl ref<int<4>> v117 = ( var(v52)) .. (v53+1) : 1) {
                    if(((( *v117)>=v54)&&[v55, v117]fun[int<4> v114, ref<int<4>> v115]()return (( *v115)<=v114))) {
                        (v66 := (v46+( *v117)));
                        (v65 := (( *v65)+1));
                        if((( *v65)>v47)) {
                            printf("Space for matrix elements exceeded in makea\n", varlist.pack(()));
                            printf("nnza, nzmax = %d, %d\n", varlist.pack((( *v65), v47)));
                            printf("iouter = %d\n", varlist.pack((( *v66))));
                            exit(1);
                        } else { };
                        ((v58[CAST<uint<4>>(( *v65))]) := ( *v117));
                        ((v57[CAST<uint<4>>(( *v65))]) := ( *v117));
                        ((v59[CAST<uint<4>>(( *v65))]) := (v56-v62));
                    } else { };
                };
                (v64 := (v52+(CAST<int<4>>(ceil((CAST<real<8>>(((v53+1)-v52))/CAST<real<8>>(1))))*1)));
            };
            fun(array<ref<real<8>>,1> v118, array<ref<int<4>>,1> v119, array<ref<int<4>>,1> v120, int<4> v121, array<ref<int<4>>,1> v122, array<ref<int<4>>,1> v123, array<ref<real<8>>,1> v124, int<4> v125, int<4> v126, array<ref<real<8>>,1> v127, array<ref<int<4>>,1> v128, array<ref<int<4>>,1> v129, int<4> v130){
                decl ref<int<4>> v131 = ( var(0));
                decl ref<int<4>> v132 = ( var(0));
                decl ref<int<4>> v133 = ( var(0));
                decl ref<int<4>> v134 = ( var(0));
                decl ref<int<4>> v135 = ( var(0));
                decl ref<int<4>> v136 = ( var(0));
                decl ref<int<4>> v137 = ( var(0));
                decl ref<real<8>> v138 = ( var(0.0));
                (v131 := ((v126-v125)+1));
                {
                    <m id=2>for(decl ref<int<4>> v139 = ( var(1)) .. (v121+1) : 1) {
                        ((v120[CAST<uint<4>>(( *v139))]) := 0);
                        ((v128[CAST<uint<4>>(( *v139))]) := 0);
                    }</m>;
                    (v133 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v121+1)-1))/CAST<real<8>>(1))))*1)));
                };
                ((v120[CAST<uint<4>>((v121+1))]) := 0);
                {
                    for(decl ref<int<4>> v140 = ( var(1)) .. (v130+1) : 1) {
                        (v133 := (((( *(v122[CAST<uint<4>>(( *v140))]))-v125)+1)+1));
                        ((v120[CAST<uint<4>>(( *v133))]) := (( *(v120[CAST<uint<4>>(( *v133))]))+1));
                    };
                    (v135 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v130+1)-1))/CAST<real<8>>(1))))*1)));
                };
                ((v120[CAST<uint<4>>(1)]) := 1);
                {
                    for(decl ref<int<4>> v141 = ( var(2)) .. ((( *v131)+1)+1) : 1) {
                        ((v120[CAST<uint<4>>(( *v141))]) := (( *(v120[CAST<uint<4>>(( *v141))]))+( *(v120[CAST<uint<4>>((( *v141)-1))]))));
                    };
                    (v133 := (2+(CAST<int<4>>(ceil((CAST<real<8>>((((( *v131)+1)+1)-2))/CAST<real<8>>(1))))*1)));
                };
                {
                    for(decl ref<int<4>> v142 = ( var(1)) .. (v130+1) : 1) {
                        (v133 := ((( *(v122[CAST<uint<4>>(( *v142))]))-v125)+1));
                        (v136 := ( *(v120[CAST<uint<4>>(( *v133))])));
                        ((v118[CAST<uint<4>>(( *v136))]) := ( *(v124[CAST<uint<4>>(( *v142))])));
                        ((v119[CAST<uint<4>>(( *v136))]) := ( *(v123[CAST<uint<4>>(( *v142))])));
                        ((v120[CAST<uint<4>>(( *v133))]) := (( *(v120[CAST<uint<4>>(( *v133))]))+1));
                    };
                    (v135 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v130+1)-1))/CAST<real<8>>(1))))*1)));
                };
                {
                    for(decl ref<int<4>> v143 = ( var((CAST<int<4>>(0)-( *v131)))) .. ((CAST<int<4>>(0)-1)+1) : 1) {
                        ((v120[CAST<uint<4>>(((CAST<int<4>>(0)-( *v143))+1))]) := ( *(v120[CAST<uint<4>>((CAST<int<4>>(0)-( *v143)))])));
                    };
                    (v133 := (( *v131)+(CAST<int<4>>(ceil((CAST<real<8>>((((CAST<int<4>>(0)-1)+1)-( *v131)))/CAST<real<8>>(1))))*1)));
                };
                ((v120[CAST<uint<4>>(1)]) := 1);
                (v135 := 0);
                {
                    <m id=3>for(decl ref<int<4>> v144 = ( var(1)) .. (v121+1) : 1) {
                        ((v127[CAST<uint<4>>(( *v144))]) := 0.0);
                        ((v128[CAST<uint<4>>(( *v144))]) := 0);
                    }</m>;
                    (v132 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((v121+1)-1))/CAST<real<8>>(1))))*1)));
                };
                (v134 := ( *(v120[CAST<uint<4>>(1)])));
                {
                    for(decl ref<int<4>> v150 = ( var(1)) .. (( *v131)+1) : 1) {
                        (v137 := 0);
                        {
                            for(decl ref<int<4>> v148 = ( var(( *v134))) .. ( *(v120[CAST<uint<4>>((( *v150)+1))])) : 1) {
                                (v132 := ( *(v119[CAST<uint<4>>(( *v148))])));
                                ((v127[CAST<uint<4>>(( *v132))]) := (( *(v127[CAST<uint<4>>(( *v132))]))+( *(v118[CAST<uint<4>>(( *v148))]))));
                                if(((( *(v128[CAST<uint<4>>(( *v132))]))==0)&&[v127, v132]fun[array<ref<real<8>>,1> v145, ref<int<4>> v146]()return real.ne(( *(v145[CAST<uint<4>>(( *v146))])), 0.0))) {
                                    ((v128[CAST<uint<4>>(( *v132))]) := 1);
                                    (v137 := (( *v137)+1));
                                    ((v129[CAST<uint<4>>(( *v137))]) := ( *v132));
                                } else { };
                            };
                            (v136 := (( *v134)+(CAST<int<4>>(ceil((CAST<real<8>>((( *(v120[CAST<uint<4>>((( *v150)+1))]))-( *v134)))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl ref<int<4>> v149 = ( var(1)) .. (( *v137)+1) : 1) {
                                (v132 := ( *(v129[CAST<uint<4>>(( *v149))])));
                                ((v128[CAST<uint<4>>(( *v132))]) := 0);
                                (v138 := ( *(v127[CAST<uint<4>>(( *v132))])));
                                ((v127[CAST<uint<4>>(( *v132))]) := 0.0);
                                if(real.ne(( *v138), 0.0)) {
                                    (v135 := (( *v135)+1));
                                    ((v118[CAST<uint<4>>(( *v135))]) := ( *v138));
                                    ((v119[CAST<uint<4>>(( *v135))]) := ( *v132));
                                } else { };
                            };
                            (v136 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v137)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        (v134 := ( *(v120[CAST<uint<4>>((( *v150)+1))])));
                        ((v120[CAST<uint<4>>((( *v150)+1))]) := (( *v135)+( *(v120[CAST<uint<4>>(1)]))));
                    };
                    (v133 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v131)+1)-1))/CAST<real<8>>(1))))*1)));
                };
            }(v48, v49, v50, v46, v57, v58, v59, v52, v53, v60, [(v61[CAST<uint<4>>(0)])], [(v61[CAST<uint<4>>(v46)])], ( *v65));
        }(( *( *v1).naa), ( *( *v1).nzz), ( *(( *( *v1).a)[0])), ( *(( *( *v1).colidx)[0])), ( *(( *( *v1).rowstr)[0])), 8, ( *( *v1).firstrow), ( *( *v1).lastrow), ( *( *v1).firstcol), ( *( *v1).lastcol), 1.0e-1, ( *(( *( *v1).arow)[0])), ( *(( *( *v1).acol)[0])), ( *(( *( *v1).aelt)[0])), ( *(( *( *v1).v)[0])), ( *(( *( *v1).iv)[0])), 12.0);
        <m id=37>{
            {
                <m id=31>for(decl ref<int<4>> v257 = ( var(1)) .. (((( *( *v1).lastrow)-( *( *v1).firstrow))+1)+1) : 1) {
                    {
                        for(decl ref<int<4>> v256 = ( var(( *(( *(( *( *v1).rowstr)[0]))[CAST<uint<4>>(( *v257))])))) .. ( *(( *(( *( *v1).rowstr)[0]))[CAST<uint<4>>((( *v257)+1))])) : 1) {
                            ((( *(( *( *v1).colidx)[0]))[CAST<uint<4>>(( *v256))]) := ((( *(( *(( *( *v1).colidx)[0]))[CAST<uint<4>>(( *v256))]))-( *( *v1).firstcol))+1));
                        };
                        (v6 := (( *(( *(( *( *v1).rowstr)[0]))[CAST<uint<4>>(( *v257))]))+(CAST<int<4>>(ceil((CAST<real<8>>((( *(( *(( *( *v1).rowstr)[0]))[CAST<uint<4>>((( *v257)+1))]))-( *(( *(( *( *v1).rowstr)[0]))[CAST<uint<4>>(( *v257))]))))/CAST<real<8>>(1))))*1)));
                    };
                }</m>;
                (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v1).lastrow)-( *( *v1).firstrow))+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                <m id=32>for(decl ref<int<4>> v258 = ( var(1)) .. ((7000+1)+1) : 1) {
                    ((( *(( *( *v1).x)[0]))[CAST<uint<4>>(( *v258))]) := 1.0);
                }</m>;
                (v4 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((7000+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            <m id=8>(v9 := 0.0)</m>;
            {
                for(decl ref<int<4>> v261 = ( var(1)) .. (1+1) : 1) {
                    [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v166](array<ref<int<4>>,1> v156, array<ref<int<4>>,1> v157, array<ref<real<8>>,1> v158, array<ref<real<8>>,1> v159, array<ref<real<8>>,1> v160, array<ref<real<8>>,1> v161, array<ref<real<8>>,1> v162, array<ref<real<8>>,1> v163, array<ref<real<8>>,1> v164, array<ref<real<8>>,1> v165){
                        decl ref<int<4>> v167 = ( var(0));
                        decl ref<int<4>> v168 = ( var(0));
                        decl ref<int<4>> v169 = ( var(0));
                        decl ref<int<4>> v170 = ( var(0));
                        decl ref<int<4>> v171 = ( var(25));
                        <m id=2>(( *v166).rho := 0.0)</m>;
                        {
                            <m id=6>for(decl ref<int<4>> v172 = ( var(1)) .. ((( *( *v166).naa)+1)+1) : 1) {
                                ((v162[CAST<uint<4>>(( *v172))]) := 0.0);
                                ((v159[CAST<uint<4>>(( *v172))]) := 0.0);
                                ((v163[CAST<uint<4>>(( *v172))]) := ( *(v158[CAST<uint<4>>(( *v172))])));
                                ((v161[CAST<uint<4>>(( *v172))]) := ( *(v163[CAST<uint<4>>(( *v172))])));
                                ((v164[CAST<uint<4>>(( *v172))]) := 0.0);
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((( *( *v166).naa)+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=7>for(decl ref<int<4>> v173 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                (( *v166).rho := (( *( *v166).rho)+(( *(v158[CAST<uint<4>>(( *v173))]))*( *(v158[CAST<uint<4>>(( *v173))])))));
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl ref<int<4>> v182 = ( var(1)) .. (( *v171)+1) : 1) {
                                <m id=8>{
                                    (( *v166).rho0 := ( *( *v166).rho));
                                    (( *v166).d := 0.0);
                                    (( *v166).rho := 0.0);
                                }</m>;
                                {
                                    <m id=9>for(decl ref<int<4>> v175 = ( var(1)) .. (((( *( *v166).lastrow)-( *( *v166).firstrow))+1)+1) : 1) {
                                        (( *v166).sum := 0.0);
                                        {
                                            for(decl ref<int<4>> v174 = ( var(( *(v157[CAST<uint<4>>(( *v175))])))) .. ( *(v157[CAST<uint<4>>((( *v175)+1))])) : 1) {
                                                (( *v166).sum := (( *( *v166).sum)+(( *(v160[CAST<uint<4>>(( *v174))]))*( *(v161[CAST<uint<4>>(( *(v156[CAST<uint<4>>(( *v174))])))])))));
                                            };
                                            (v169 := (( *(v157[CAST<uint<4>>(( *v175))]))+(CAST<int<4>>(ceil((CAST<real<8>>((( *(v157[CAST<uint<4>>((( *v175)+1))]))-( *(v157[CAST<uint<4>>(( *v175))]))))/CAST<real<8>>(1))))*1)));
                                        };
                                        ((v164[CAST<uint<4>>(( *v175))]) := ( *( *v166).sum));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastrow)-( *( *v166).firstrow))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=10>for(decl ref<int<4>> v176 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        ((v162[CAST<uint<4>>(( *v176))]) := ( *(v164[CAST<uint<4>>(( *v176))])));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=11>for(decl ref<int<4>> v177 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        ((v164[CAST<uint<4>>(( *v177))]) := 0.0);
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=12>for(decl ref<int<4>> v178 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        (( *v166).d := (( *( *v166).d)+(( *(v161[CAST<uint<4>>(( *v178))]))*( *(v162[CAST<uint<4>>(( *v178))])))));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=3>(( *v166).alpha := (( *( *v166).rho0)/( *( *v166).d)))</m>;
                                {
                                    <m id=13>for(decl ref<int<4>> v179 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        ((v159[CAST<uint<4>>(( *v179))]) := (( *(v159[CAST<uint<4>>(( *v179))]))+(( *( *v166).alpha)*( *(v161[CAST<uint<4>>(( *v179))])))));
                                        ((v163[CAST<uint<4>>(( *v179))]) := (( *(v163[CAST<uint<4>>(( *v179))]))-(( *( *v166).alpha)*( *(v162[CAST<uint<4>>(( *v179))])))));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=14>for(decl ref<int<4>> v180 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        (( *v166).rho := (( *( *v166).rho)+(( *(v163[CAST<uint<4>>(( *v180))]))*( *(v163[CAST<uint<4>>(( *v180))])))));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=4>(( *v166).beta := (( *( *v166).rho)/( *( *v166).rho0)))</m>;
                                {
                                    <m id=15>for(decl ref<int<4>> v181 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        ((v161[CAST<uint<4>>(( *v181))]) := (( *(v163[CAST<uint<4>>(( *v181))]))+(( *( *v166).beta)*( *(v161[CAST<uint<4>>(( *v181))])))));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            };
                            (v170 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v171)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=5>(( *v166).sum := 0.0)</m>;
                        {
                            <m id=16>for(decl ref<int<4>> v184 = ( var(1)) .. (((( *( *v166).lastrow)-( *( *v166).firstrow))+1)+1) : 1) {
                                (( *v166).d := 0.0);
                                {
                                    for(decl ref<int<4>> v183 = ( var(( *(v157[CAST<uint<4>>(( *v184))])))) .. ((( *(v157[CAST<uint<4>>((( *v184)+1))]))-1)+1) : 1) {
                                        (( *v166).d := (( *( *v166).d)+(( *(v160[CAST<uint<4>>(( *v183))]))*( *(v159[CAST<uint<4>>(( *(v156[CAST<uint<4>>(( *v183))])))])))));
                                    };
                                    (v169 := (( *(v157[CAST<uint<4>>(( *v184))]))+(CAST<int<4>>(ceil((CAST<real<8>>((((( *(v157[CAST<uint<4>>((( *v184)+1))]))-1)+1)-( *(v157[CAST<uint<4>>(( *v184))]))))/CAST<real<8>>(1))))*1)));
                                };
                                ((v164[CAST<uint<4>>(( *v184))]) := ( *( *v166).d));
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastrow)-( *( *v166).firstrow))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=17>for(decl ref<int<4>> v185 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                ((v163[CAST<uint<4>>(( *v185))]) := ( *(v164[CAST<uint<4>>(( *v185))])));
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=18>for(decl ref<int<4>> v186 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                (( *v166).d := (( *(v158[CAST<uint<4>>(( *v186))]))-( *(v163[CAST<uint<4>>(( *v186))]))));
                                (( *v166).sum := (( *( *v166).sum)+(( *( *v166).d)*( *( *v166).d))));
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=19>{
                            ((v165[0]) := sqrt(( *( *v166).sum)));
                        }</m>;
                    }(( *(( *( *v1).colidx)[0])), ( *(( *( *v1).rowstr)[0])), ( *(( *( *v1).x)[0])), ( *(( *( *v1).z)[0])), ( *(( *( *v1).a)[0])), ( *(( *( *v1).p)[0])), ( *(( *( *v1).q)[0])), ( *(( *( *v1).r)[0])), ( *(( *( *v1).w)[0])), [v10]);
                    <m id=33>{
                        (v11 := 0.0);
                        (v12 := 0.0);
                    }</m>;
                    {
                        <m id=34>for(decl ref<int<4>> v259 = ( var(1)) .. (((( *( *v1).lastcol)-( *( *v1).firstcol))+1)+1) : 1) {
                            (v11 := (( *v11)+(( *(( *(( *( *v1).x)[0]))[CAST<uint<4>>(( *v259))]))*( *(( *(( *( *v1).z)[0]))[CAST<uint<4>>(( *v259))])))));
                            (v12 := (( *v12)+(( *(( *(( *( *v1).z)[0]))[CAST<uint<4>>(( *v259))]))*( *(( *(( *( *v1).z)[0]))[CAST<uint<4>>(( *v259))])))));
                        }</m>;
                        (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v1).lastcol)-( *( *v1).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    <m id=9>(v12 := (1.0/sqrt(( *v12))))</m>;
                    {
                        <m id=35>for(decl ref<int<4>> v260 = ( var(1)) .. (((( *( *v1).lastcol)-( *( *v1).firstcol))+1)+1) : 1) {
                            ((( *(( *( *v1).x)[0]))[CAST<uint<4>>(( *v260))]) := (( *v12)*( *(( *(( *( *v1).z)[0]))[CAST<uint<4>>(( *v260))]))));
                        }</m>;
                        (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v1).lastcol)-( *( *v1).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                };
                (v7 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((1+1)-1))/CAST<real<8>>(1))))*1)));
            };
            {
                <m id=36>for(decl ref<int<4>> v262 = ( var(1)) .. ((7000+1)+1) : 1) {
                    ((( *(( *( *v1).x)[0]))[CAST<uint<4>>(( *v262))]) := 1.0);
                }</m>;
                (v4 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((7000+1)+1)-1))/CAST<real<8>>(1))))*1)));
            };
            <m id=10>(v9 := 0.0)</m>;
        }</m>;
        [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v193](int<4> v192){
            ((( *(( *( *v193).elapsed)[0]))[CAST<uint<4>>(v192)]) := 0.0);
        }(1);
        [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v196](int<4> v195){
            ((( *(( *( *v196).start)[0]))[CAST<uint<4>>(v195)]) := [v196]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v197](){
                decl ref<real<8>> v198 = ( var(0.0));
                [v197]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v200](array<ref<real<8>>,1> v199){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v201 = ( var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>)));
                    gettimeofday([v201], null);
                    if((( *( *v200).sec)<0)) (( *v200).sec := CAST<int<4>>(( *( *v201).tv_sec))) else { };
                    ((v199[0]) := (CAST<real<8>>((( *( *v201).tv_sec)-CAST<int<8>>(( *( *v200).sec))))+(1.0e-6*CAST<real<8>>(( *( *v201).tv_usec)))));
                }([v198]);
                return ( *v198);
            }());
        }(1);
        <m id=43>{
            {
                for(decl ref<int<4>> v265 = ( var(1)) .. (15+1) : 1) {
                    [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v166](array<ref<int<4>>,1> v156, array<ref<int<4>>,1> v157, array<ref<real<8>>,1> v158, array<ref<real<8>>,1> v159, array<ref<real<8>>,1> v160, array<ref<real<8>>,1> v161, array<ref<real<8>>,1> v162, array<ref<real<8>>,1> v163, array<ref<real<8>>,1> v164, array<ref<real<8>>,1> v165){
                        decl ref<int<4>> v167 = ( var(0));
                        decl ref<int<4>> v168 = ( var(0));
                        decl ref<int<4>> v169 = ( var(0));
                        decl ref<int<4>> v170 = ( var(0));
                        decl ref<int<4>> v171 = ( var(25));
                        <m id=2>(( *v166).rho := 0.0)</m>;
                        {
                            <m id=6>for(decl ref<int<4>> v172 = ( var(1)) .. ((( *( *v166).naa)+1)+1) : 1) {
                                ((v162[CAST<uint<4>>(( *v172))]) := 0.0);
                                ((v159[CAST<uint<4>>(( *v172))]) := 0.0);
                                ((v163[CAST<uint<4>>(( *v172))]) := ( *(v158[CAST<uint<4>>(( *v172))])));
                                ((v161[CAST<uint<4>>(( *v172))]) := ( *(v163[CAST<uint<4>>(( *v172))])));
                                ((v164[CAST<uint<4>>(( *v172))]) := 0.0);
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>((((( *( *v166).naa)+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=7>for(decl ref<int<4>> v173 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                (( *v166).rho := (( *( *v166).rho)+(( *(v158[CAST<uint<4>>(( *v173))]))*( *(v158[CAST<uint<4>>(( *v173))])))));
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            for(decl ref<int<4>> v182 = ( var(1)) .. (( *v171)+1) : 1) {
                                <m id=8>{
                                    (( *v166).rho0 := ( *( *v166).rho));
                                    (( *v166).d := 0.0);
                                    (( *v166).rho := 0.0);
                                }</m>;
                                {
                                    <m id=9>for(decl ref<int<4>> v175 = ( var(1)) .. (((( *( *v166).lastrow)-( *( *v166).firstrow))+1)+1) : 1) {
                                        (( *v166).sum := 0.0);
                                        {
                                            for(decl ref<int<4>> v174 = ( var(( *(v157[CAST<uint<4>>(( *v175))])))) .. ( *(v157[CAST<uint<4>>((( *v175)+1))])) : 1) {
                                                (( *v166).sum := (( *( *v166).sum)+(( *(v160[CAST<uint<4>>(( *v174))]))*( *(v161[CAST<uint<4>>(( *(v156[CAST<uint<4>>(( *v174))])))])))));
                                            };
                                            (v169 := (( *(v157[CAST<uint<4>>(( *v175))]))+(CAST<int<4>>(ceil((CAST<real<8>>((( *(v157[CAST<uint<4>>((( *v175)+1))]))-( *(v157[CAST<uint<4>>(( *v175))]))))/CAST<real<8>>(1))))*1)));
                                        };
                                        ((v164[CAST<uint<4>>(( *v175))]) := ( *( *v166).sum));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastrow)-( *( *v166).firstrow))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=10>for(decl ref<int<4>> v176 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        ((v162[CAST<uint<4>>(( *v176))]) := ( *(v164[CAST<uint<4>>(( *v176))])));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=11>for(decl ref<int<4>> v177 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        ((v164[CAST<uint<4>>(( *v177))]) := 0.0);
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=12>for(decl ref<int<4>> v178 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        (( *v166).d := (( *( *v166).d)+(( *(v161[CAST<uint<4>>(( *v178))]))*( *(v162[CAST<uint<4>>(( *v178))])))));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=3>(( *v166).alpha := (( *( *v166).rho0)/( *( *v166).d)))</m>;
                                {
                                    <m id=13>for(decl ref<int<4>> v179 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        ((v159[CAST<uint<4>>(( *v179))]) := (( *(v159[CAST<uint<4>>(( *v179))]))+(( *( *v166).alpha)*( *(v161[CAST<uint<4>>(( *v179))])))));
                                        ((v163[CAST<uint<4>>(( *v179))]) := (( *(v163[CAST<uint<4>>(( *v179))]))-(( *( *v166).alpha)*( *(v162[CAST<uint<4>>(( *v179))])))));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                {
                                    <m id=14>for(decl ref<int<4>> v180 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        (( *v166).rho := (( *( *v166).rho)+(( *(v163[CAST<uint<4>>(( *v180))]))*( *(v163[CAST<uint<4>>(( *v180))])))));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                                <m id=4>(( *v166).beta := (( *( *v166).rho)/( *( *v166).rho0)))</m>;
                                {
                                    <m id=15>for(decl ref<int<4>> v181 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                        ((v161[CAST<uint<4>>(( *v181))]) := (( *(v163[CAST<uint<4>>(( *v181))]))+(( *( *v166).beta)*( *(v161[CAST<uint<4>>(( *v181))])))));
                                    }</m>;
                                    (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                                };
                            };
                            (v170 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((( *v171)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=5>(( *v166).sum := 0.0)</m>;
                        {
                            <m id=16>for(decl ref<int<4>> v184 = ( var(1)) .. (((( *( *v166).lastrow)-( *( *v166).firstrow))+1)+1) : 1) {
                                (( *v166).d := 0.0);
                                {
                                    for(decl ref<int<4>> v183 = ( var(( *(v157[CAST<uint<4>>(( *v184))])))) .. ((( *(v157[CAST<uint<4>>((( *v184)+1))]))-1)+1) : 1) {
                                        (( *v166).d := (( *( *v166).d)+(( *(v160[CAST<uint<4>>(( *v183))]))*( *(v159[CAST<uint<4>>(( *(v156[CAST<uint<4>>(( *v183))])))])))));
                                    };
                                    (v169 := (( *(v157[CAST<uint<4>>(( *v184))]))+(CAST<int<4>>(ceil((CAST<real<8>>((((( *(v157[CAST<uint<4>>((( *v184)+1))]))-1)+1)-( *(v157[CAST<uint<4>>(( *v184))]))))/CAST<real<8>>(1))))*1)));
                                };
                                ((v164[CAST<uint<4>>(( *v184))]) := ( *( *v166).d));
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastrow)-( *( *v166).firstrow))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=17>for(decl ref<int<4>> v185 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                ((v163[CAST<uint<4>>(( *v185))]) := ( *(v164[CAST<uint<4>>(( *v185))])));
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        {
                            <m id=18>for(decl ref<int<4>> v186 = ( var(1)) .. (((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1) : 1) {
                                (( *v166).d := (( *(v158[CAST<uint<4>>(( *v186))]))-( *(v163[CAST<uint<4>>(( *v186))]))));
                                (( *v166).sum := (( *( *v166).sum)+(( *( *v166).d)*( *( *v166).d))));
                            }</m>;
                            (v168 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v166).lastcol)-( *( *v166).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                        };
                        <m id=19>{
                            ((v165[0]) := sqrt(( *( *v166).sum)));
                        }</m>;
                    }(( *(( *( *v1).colidx)[0])), ( *(( *( *v1).rowstr)[0])), ( *(( *( *v1).x)[0])), ( *(( *( *v1).z)[0])), ( *(( *( *v1).a)[0])), ( *(( *( *v1).p)[0])), ( *(( *( *v1).q)[0])), ( *(( *( *v1).r)[0])), ( *(( *( *v1).w)[0])), [v10]);
                    <m id=38>{
                        (v11 := 0.0);
                        (v12 := 0.0);
                    }</m>;
                    {
                        <m id=39>for(decl ref<int<4>> v263 = ( var(1)) .. (((( *( *v1).lastcol)-( *( *v1).firstcol))+1)+1) : 1) {
                            (v11 := (( *v11)+(( *(( *(( *( *v1).x)[0]))[CAST<uint<4>>(( *v263))]))*( *(( *(( *( *v1).z)[0]))[CAST<uint<4>>(( *v263))])))));
                            (v12 := (( *v12)+(( *(( *(( *( *v1).z)[0]))[CAST<uint<4>>(( *v263))]))*( *(( *(( *( *v1).z)[0]))[CAST<uint<4>>(( *v263))])))));
                        }</m>;
                        (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v1).lastcol)-( *( *v1).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                    <m id=40>{
                        (v12 := (1.0/sqrt(( *v12))));
                        (v9 := (12.0+(1.0/( *v11))));
                    }</m>;
                    <m id=41>{
                        if((( *v265)==1)) {
                            printf("   iteration           ||r||                 zeta\n", varlist.pack(()));
                        } else { };
                        printf("    %5d       %20.14e%20.13e\n", varlist.pack((( *v265), ( *v10), ( *v9))));
                    }</m>;
                    {
                        <m id=42>for(decl ref<int<4>> v264 = ( var(1)) .. (((( *( *v1).lastcol)-( *( *v1).firstcol))+1)+1) : 1) {
                            ((( *(( *( *v1).x)[0]))[CAST<uint<4>>(( *v264))]) := (( *v12)*( *(( *(( *( *v1).z)[0]))[CAST<uint<4>>(( *v264))]))));
                        }</m>;
                        (v5 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((((( *( *v1).lastcol)-( *( *v1).firstcol))+1)+1)-1))/CAST<real<8>>(1))))*1)));
                    };
                };
                (v7 := (1+(CAST<int<4>>(ceil((CAST<real<8>>(((15+1)-1))/CAST<real<8>>(1))))*1)));
            };
        }</m>;
        [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v209](int<4> v208){
            decl ref<real<8>> v210 = ( var(0.0));
            decl ref<real<8>> v211 = ( var(0.0));
            (v211 := [v209]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v197](){
                decl ref<real<8>> v198 = ( var(0.0));
                [v197]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v200](array<ref<real<8>>,1> v199){
                    decl ref<struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>> v201 = ( var(undefined(struct<tv_sec:ref<int<8>>,tv_usec:ref<int<8>>>)));
                    gettimeofday([v201], null);
                    if((( *( *v200).sec)<0)) (( *v200).sec := CAST<int<4>>(( *( *v201).tv_sec))) else { };
                    ((v199[0]) := (CAST<real<8>>((( *( *v201).tv_sec)-CAST<int<8>>(( *( *v200).sec))))+(1.0e-6*CAST<real<8>>(( *( *v201).tv_usec)))));
                }([v198]);
                return ( *v198);
            }());
            (v210 := (( *v211)-( *(( *(( *( *v209).start)[0]))[CAST<uint<4>>(v208)]))));
            ((( *(( *( *v209).elapsed)[0]))[CAST<uint<4>>(v208)]) := (( *(( *(( *( *v209).elapsed)[0]))[CAST<uint<4>>(v208)]))+( *v210)));
        }(1);
        (v13 := [v1]fun[ref<struct<naa:ref<int<4>>,nzz:ref<int<4>>,firstrow:ref<int<4>>,lastrow:ref<int<4>>,firstcol:ref<int<4>>,lastcol:ref<int<4>>,colidx:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,rowstr:ref<array<ref<vector<ref<int<4>>,7002>>,1>>,iv:ref<array<ref<vector<ref<int<4>>,14002>>,1>>,arow:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,acol:ref<array<ref<vector<ref<int<4>>,637001>>,1>>,v:ref<array<ref<vector<ref<real<8>>,7002>>,1>>,aelt:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,a:ref<array<ref<vector<ref<real<8>>,637001>>,1>>,x:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,z:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,p:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,q:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,r:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,w:ref<array<ref<vector<ref<real<8>>,7003>>,1>>,amult:ref<real<8>>,tran:ref<real<8>>,d:ref<real<8>>,sum:ref<real<8>>,rho:ref<real<8>>,rho0:ref<real<8>>,alpha:ref<real<8>>,beta:ref<real<8>>,start:ref<array<ref<vector<ref<real<8>>,64>>,1>>,elapsed:ref<array<ref<vector<ref<real<8>>,64>>,1>>,sec:ref<int<4>>>> v214](int<4> v213){
            return ( *(( *(( *( *v214).elapsed)[0]))[CAST<uint<4>>(v213)]));
        }(1));
        printf(" Benchmark completed\n", varlist.pack(()));
        (v18 := 1.0e-10);
        if(int.ne(CAST<int<4>>(( *v15)), 'U')) {
            if((fabs((( *v9)-( *v17)))<=( *v18))) {
                (v16 := 1);
                printf(" VERIFICATION SUCCESSFUL\n", varlist.pack(()));
                printf(" Zeta is    %20.12e\n", varlist.pack((( *v9))));
                printf(" Error is   %20.12e\n", varlist.pack(((( *v9)-( *v17)))));
            } else {
                (v16 := 0);
                printf(" VERIFICATION FAILED\n", varlist.pack(()));
                printf(" Zeta                %20.12e\n", varlist.pack((( *v9))));
                printf(" The correct zeta is %20.12e\n", varlist.pack((( *v17))));
            };
        } else {
            (v16 := 0);
            printf(" Problem size unknown\n", varlist.pack(()));
            printf(" NO VERIFICATION PERFORMED\n", varlist.pack(()));
        };
        if(real.ne(( *v13), 0.0)) {
            (v14 := (((((2.0*CAST<real<8>>(15))*CAST<real<8>>(7000))*(((3.0+CAST<real<8>>((8*(8+1))))+(25.0*(5.0+CAST<real<8>>((8*(8+1))))))+3.0))/( *v13))/1000000.0));
        } else {
            (v14 := 0.0);
        };
        fun(array<ref<char>,1> v216, char v217, int<4> v218, int<4> v219, int<4> v220, int<4> v221, int<4> v222, real<8> v223, real<8> v224, array<ref<char>,1> v225, int<4> v226, array<ref<char>,1> v227, array<ref<char>,1> v228, array<ref<char>,1> v229, array<ref<char>,1> v230, array<ref<char>,1> v231, array<ref<char>,1> v232, array<ref<char>,1> v233, array<ref<char>,1> v234, array<ref<char>,1> v235){
            decl ref<array<ref<char>,1>> v236 = ( var("1000"));
            printf("\n\n %s Benchmark Completed\n", varlist.pack((v216)));
            printf(" Class           =                        %c\n", varlist.pack((CAST<int<4>>(v217))));
            if(((v219==0)&&[v220]fun[int<4> v237]()return (v237==0))) printf(" Size            =             %12d\n", varlist.pack((v218))) else printf(" Size            =              %3dx%3dx%3d\n", varlist.pack((v218, v219, v220)));
            printf(" Iterations      =             %12d\n", varlist.pack((v221)));
            printf(" Threads         =             %12d\n", varlist.pack((v222)));
            printf(" Time in seconds =             %12.2f\n", varlist.pack((0.0)));
            printf(" Mop/s total     =             %12.2f\n", varlist.pack((0.0)));
            printf(" Operation type  = %24s\n", varlist.pack((v225)));
            if(CAST<bool>(v226)) printf(" Verification    =               SUCCESSFUL\n", varlist.pack(())) else printf(" Verification    =             UNSUCCESSFUL\n", varlist.pack(()));
            printf(" Version         =             %12s\n", varlist.pack((v227)));
            printf(" Compile date    =             %12s\n", varlist.pack((v228)));
            printf("\n Compile options:\n", varlist.pack(()));
            printf("    CC           = %s\n", varlist.pack((v229)));
            printf("    CLINK        = %s\n", varlist.pack((v230)));
            printf("    C_LIB        = %s\n", varlist.pack((v231)));
            printf("    C_INC        = %s\n", varlist.pack((v232)));
            printf("    CFLAGS       = %s\n", varlist.pack((v233)));
            printf("    CLINKFLAGS   = %s\n", varlist.pack((v234)));
            printf("    RAND         = %s\n", varlist.pack((v235)));
        }("CG", ( *v15), 7000, 0, 0, 15, ( *v8), ( *v13), ( *v14), "          floating point", ( *v16), "2.3", "02 Dec 2010", "cc", "cc", "-lm", "-I../common", "-O3 ", "-lm", "randdp");
    }


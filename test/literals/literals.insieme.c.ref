// --- Generated Inspire Code ---
#include <alloca.h>
#include <stddef.h>
#include <runtime.h>
#define bool int
#define true 1
#define false 0
#define null 0

// start code fragment :: array type definition of __insieme_type_1 <=> array<char,1> //
typedef struct ___insieme_type_1 { 
    char* data;
} __insieme_type_1;

// start code fragment :: array type definition of __insieme_type_0 <=> array<array<char,1>,1> //
typedef struct ___insieme_type_0 { 
    __insieme_type_1* data;
} __insieme_type_0;

// start code fragment :: Prototype for external function: printf ... type: ((ref<array<char,1>>,var_list)->int<4>) //
int printf(char*, ...);

// start code fragment :: main function //
int main(int __argc, char** __argv) {
	
	// encapsulating arguments within Insieme Types ...
	int argc = __argc;
	__insieme_type_0 argv = (__insieme_type_0){alloca(sizeof(__insieme_type_1) * argc)};
	for(int i=0; i<argc; ++i) {
		argv.data[i] = (__insieme_type_1){__argv[i]};
	}
	
	// ---- begin of actual code body ----
	{
		printf(((char*)((*(&((__insieme_type_1){"Hello"}))).data)), 0);
		printf(((char*)((*(&((__insieme_type_1){"Hello %s\n"}))).data)), "World");
		printf(((char*)((*(&((__insieme_type_1){"Integer:   %d\n"}))).data)), 14);
		printf(((char*)((*(&((__insieme_type_1){"Float:     %f\n"}))).data)), 0.54);
		printf(((char*)((*(&((__insieme_type_1){"Character: %c\n"}))).data)), 'c');
		printf(((char*)((*(&((__insieme_type_1){"Prime:     %c\n"}))).data)), '\'');
		printf(((char*)((*(&((__insieme_type_1){"NewLine:   %c"}))).data)), '\n');
		printf(((char*)((*(&((__insieme_type_1){"Signed:    %ld\n"}))).data)), (((long)(0))-2l));
		printf(((char*)((*(&((__insieme_type_1){"Unsigned:  %ld\n"}))).data)), 2ul);
		printf(((char*)((*(&((__insieme_type_1){"Full:      %lld\n"}))).data)), 0xFull);
		char c = '\0';
		printf(((char*)((*(&((__insieme_type_1){"Full:      %c\n"}))).data)), (c));
		return 0;
	}
	// ----  end of actual code body  ----
	
}


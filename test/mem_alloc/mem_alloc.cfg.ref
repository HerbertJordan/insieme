digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: ref.delete(v4)\l"];
4[shape=box,label="[B4]\l0: printf(..., ...)\l"];
5[shape=box,label="[B5]\l"];
6[shape=box,label="[B6]\l0: string.as.char.pointer(\"\n\")\l"];
7[shape=box,label="[B7]\l0: varlist.pack(())\l"];
8[shape=box,label="[B8]\l0: ((4*sizeof(type<int<4>>))/sizeof(type<int<4>>)) <CTRL>\lT: FOR( ... ; v5 < 4*sizeof(type<int<4>>)/sizeof(type<int<4>>); ...)\l"];
9[shape=box,label="[B9]\l0: uint.div(..., ...)\l"];
10[shape=box,label="[B10]\l0: printf(string.as.char.pointer(\"%d, \"), varlist.pack((( *array.ref.elem.1D(v4, CAST<uint<4>>(( *v5)))))))\l"];
11[shape=box,label="[B11]\l0: uint.mul(4, ...)\l"];
12[shape=box,label="[B12]\l0: sizeof(type<int<4>>)\l"];
13[shape=box,label="[B13]\l0: sizeof(type<int<4>>)\l"];
14[shape=box,label="[B14]\l0: v5 += 1 <LOOP_INC>\l"];
15[shape=box,label="[B15]\l"];
16[shape=box,label="[B16]\l0: string.as.char.pointer(\"%d, \")\l"];
17[shape=box,label="[B17]\l0: varlist.pack((( *array.ref.elem.1D(v4, CAST<uint<4>>(( *v5))))))\l"];
18[shape=box,label="[B18]\l0: decl ref<int<4>> v5 = ( var(0)) <LOOP_INIT>\l"];
19[shape=box,label="[B19]\l0: memcpy(..., ..., ...)\l"];
20[shape=box,label="[B20]\l0: decl v4 = ...\l"];
21[shape=box,label="[B21]\l0: ref.to.anyref(v4)\l"];
22[shape=box,label="[B22]\l0: ref.to.anyref(v3)\l"];
23[shape=box,label="[B23]\l0: uint.mul(4, ...)\l"];
24[shape=box,label="[B24]\l0: sizeof(type<int<4>>)\l"];
25[shape=box,label="[B25]\l0: ref.new(...)\l"];
26[shape=box,label="[B26]\l0: printf(..., ...)\l"];
27[shape=box,label="[B27]\l0: array.create.1D(type<int<4>>, ...)\l"];
28[shape=box,label="[B28]\l0: uint.div(..., ...)\l"];
29[shape=box,label="[B29]\l0: uint.mul(4, ...)\l"];
30[shape=box,label="[B30]\l0: sizeof(type<int<4>>)\l"];
31[shape=box,label="[B31]\l0: sizeof(type<int<4>>)\l"];
32[shape=box,label="[B32]\l0: decl v3 = ...\l"];
33[shape=box,label="[B33]\l0: string.as.char.pointer(\"%d\n\")\l"];
34[shape=box,label="[B34]\l0: varlist.pack(((4*sizeof(type<int<4>>))))\l"];
35[shape=box,label="[B35]\l0: ref.var([1, 2, 3, 4])\l"];
2->1 [label=""];
4->2 [label=""];
6->4 [label="0"];
5->6 [label=""];
7->4 [label="1"];
5->7 [label=""];
9->8 [label=""];
11->9 [label="0"];
12->11 [label="1"];
10->12 [label=""];
13->9 [label="1"];
10->13 [label=""];
14->10 [label=""];
16->14 [label="0"];
15->16 [label=""];
17->14 [label="1"];
15->17 [label=""];
8->15 [label="true"];
8->5 [label="false"];
18->10 [label=""];
19->18 [label=""];
21->19 [label="0"];
20->21 [label=""];
22->19 [label="1"];
20->22 [label=""];
23->19 [label="2"];
24->23 [label="1"];
20->24 [label=""];
25->20 [label=""];
27->25 [label="0"];
28->27 [label="1"];
29->28 [label="0"];
30->29 [label="1"];
26->30 [label=""];
31->28 [label="1"];
26->31 [label=""];
33->26 [label="0"];
32->33 [label=""];
34->26 [label="1"];
32->34 [label=""];
35->32 [label=""];
0->35 [label=""];
}

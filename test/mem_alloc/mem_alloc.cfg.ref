digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: ref.delete(...)\l"];
4[shape=box,label="[B4]\l0: ref.deref(v4)\l"];
5[shape=box,label="[B5]\l0: printf(..., ...)\l"];
6[shape=box,label="[B6]\l"];
7[shape=box,label="[B7]\l0: string.as.char.pointer(\"\n\")\l"];
8[shape=box,label="[B8]\l0: varlist.pack(())\l"];
9[shape=box,label="[B9]\l0: ((4*sizeof(type<int<4>>))/sizeof(type<int<4>>)) <CTRL>\lT: FOR( ... ; v6 < 4*sizeof(type<int<4>>)/sizeof(type<int<4>>); ...)\l"];
10[shape=box,label="[B10]\l0: uint.div(..., ...)\l"];
11[shape=box,label="[B11]\l0: printf(string.as.char.pointer(\"%d, \"), varlist.pack((( *array.ref.elem.1D(( *v4), CAST<uint<4>>(v6))))))\l"];
12[shape=box,label="[B12]\l0: uint.mul(4, ...)\l"];
13[shape=box,label="[B13]\l0: sizeof(type<int<4>>)\l"];
14[shape=box,label="[B14]\l0: sizeof(type<int<4>>)\l"];
15[shape=box,label="[B15]\l0: v6 += 1 <LOOP_INC>\l"];
16[shape=box,label="[B16]\l"];
17[shape=box,label="[B17]\l0: string.as.char.pointer(\"%d, \")\l"];
18[shape=box,label="[B18]\l0: varlist.pack((( *array.ref.elem.1D(( *v4), CAST<uint<4>>(v6)))))\l"];
19[shape=box,label="[B19]\l0: decl int<4> v6 = 0 <LOOP_INIT>\l"];
20[shape=box,label="[B20]\l0: memcpy(..., ..., ...)\l"];
21[shape=box,label="[B21]\l0: decl v4 = ...\l"];
22[shape=box,label="[B22]\l0: ref.to.anyref(...)\l"];
23[shape=box,label="[B23]\l0: ref.deref(v4)\l"];
24[shape=box,label="[B24]\l0: ref.to.anyref(v3)\l"];
25[shape=box,label="[B25]\l0: uint.mul(4, ...)\l"];
26[shape=box,label="[B26]\l0: sizeof(type<int<4>>)\l"];
27[shape=box,label="[B27]\l0: ref.var(...)\l"];
28[shape=box,label="[B28]\l0: printf(..., ...)\l"];
29[shape=box,label="[B29]\l0: ref.new(...)\l"];
30[shape=box,label="[B30]\l0: array.create.1D(type<int<4>>, ...)\l"];
31[shape=box,label="[B31]\l0: uint.div(..., ...)\l"];
32[shape=box,label="[B32]\l0: uint.mul(4, ...)\l"];
33[shape=box,label="[B33]\l0: sizeof(type<int<4>>)\l"];
34[shape=box,label="[B34]\l0: sizeof(type<int<4>>)\l"];
35[shape=box,label="[B35]\l0: decl v3 = ...\l"];
36[shape=box,label="[B36]\l0: string.as.char.pointer(\"%d\n\")\l"];
37[shape=box,label="[B37]\l0: varlist.pack(((4*sizeof(type<int<4>>))))\l"];
38[shape=box,label="[B38]\l0: ref.var([1, 2, 3, 4])\l"];
2->1 [label=""];
4->2 [label="0"];
5->4 [label=""];
7->5 [label="0"];
6->7 [label=""];
8->5 [label="1"];
6->8 [label=""];
10->9 [label=""];
12->10 [label="0"];
13->12 [label="1"];
11->13 [label=""];
14->10 [label="1"];
11->14 [label=""];
15->11 [label=""];
17->15 [label="0"];
16->17 [label=""];
18->15 [label="1"];
16->18 [label=""];
9->16 [label="true"];
9->6 [label="false"];
19->11 [label=""];
20->19 [label=""];
22->20 [label="0"];
23->22 [label="0"];
21->23 [label=""];
24->20 [label="1"];
21->24 [label=""];
25->20 [label="2"];
26->25 [label="1"];
21->26 [label=""];
27->21 [label=""];
29->27 [label="0"];
30->29 [label="0"];
31->30 [label="1"];
32->31 [label="0"];
33->32 [label="1"];
28->33 [label=""];
34->31 [label="1"];
28->34 [label=""];
36->28 [label="0"];
35->36 [label=""];
37->28 [label="1"];
35->37 [label=""];
38->35 [label=""];
0->38 [label=""];
}

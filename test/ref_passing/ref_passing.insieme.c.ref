// --- Generated Inspire Code ---
#include <alloca.h>
#include <stddef.h>
#include <runtime.h>
#define bool int
#define true 1
#define false 0
#define null 0

// start code fragment :: Definition of f ... type: ((ref<array<int<4>,1>>)->int<4>) //
int f(int* a) { return (((a[0]))++); }
static int f_wrap(void* _closure, int* a) { return f(a); }

// start code fragment :: Prototype for external function: printf ... type: ((ref<array<char,1>>,var_list)->int<4>) //
int printf(char*, ...);

// start code fragment :: Definition of main ... type: ((int<4>,ref<array<ref<array<char,1>>,1>>)->int<4>) //
int main(int argc, char** argv){
	int var_6 = argc;
	{
		int a = 0;
		f((&a));
		f((&var_6));
		printf("%d\n", (var_6));((var_6) = (a));
		printf("%d\n", (var_6));
	};
}
static int main_wrap(void* _closure, int argc, char** argv) { return main(argc, argv); }

// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v3, ref<array<array<char,1>,1>> v4){
        decl ref<int<4>> v6 =  var(v3);
        {
            decl ref<int<4>> v5 =  var(0);
            fun(ref<array<int<4>,1>> v1){
                return int.postInc(array.ref.elem.1D(v1, 0));
            }(scalar.to.array(v5));
            fun(ref<array<int<4>,1>> v1){
                return int.postInc(array.ref.elem.1D(v1, 0));
            }(scalar.to.array(v6));
            printf(string.as.char.pointer("%d\n"), varlist.pack((v6)));
            v6 := v5;
            printf(string.as.char.pointer("%d\n"), varlist.pack((v6)));
        };
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v3, ref<array<array<char,1>,1>> v4){
        decl ref<int<4>> v6 = ( var(v3));
        {
            decl ref<int<4>> v5 = ( var(0));
            fun(ref<array<int<4>,1>> v1){
                return int.postInc(array.ref.elem.1D(v1, 0));
            }(scalar.to.array(v5));
            fun(ref<array<int<4>,1>> v1){
                return int.postInc(array.ref.elem.1D(v1, 0));
            }(scalar.to.array(v6));
            printf(string.as.char.pointer("%d\n"), varlist.pack((( *v6))));
            (v6 := ( *v5));
            printf(string.as.char.pointer("%d\n"), varlist.pack((( *v6))));
        };
    }


digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: printf(..., ...)\l"];
3[shape=box,label="[B3]\l0: decl v3 = ...\l"];
4[shape=box,label="[B4]\l0: string.as.char.pointer(\"Double: %f\n\")\l"];
5[shape=box,label="[B5]\l0: varlist.pack(((CAST<real<8>>(( *v3))*( *v1))))\l"];
6[shape=box,label="[B6]\l0: ref.var(2)\l"];
8[shape=box,label="[B8]\l0: printf(..., ...)\l"];
9[shape=box,label="[B9]\l0: ref.assign(v2, ...)\l"];
10[shape=box,label="[B10]\l0: string.as.char.pointer(\"After: %f\n\")\l"];
11[shape=box,label="[B11]\l0: varlist.pack((( *v2)))\l"];
13[shape=box,label="[B13]\l0: CAST<real<8>>\l"];
14[shape=box,label="[B14]\l0: real.to.int(..., 4)\l"];
15[shape=box,label="[B15]\l0: ref.deref(v1)\l"];
16[shape=box,label="[B16]\l0: printf(..., ...)\l"];
17[shape=box,label="[B17]\l0: ref.assign(v2, ...)\l"];
18[shape=box,label="[B18]\l0: string.as.char.pointer(\"Before: %f\n\")\l"];
19[shape=box,label="[B19]\l0: varlist.pack((( *v2)))\l"];
21[shape=box,label="[B21]\l0: ref.deref(v1)\l"];
22[shape=box,label="[B22]\l0: ref.assign(v1, 12.123)\l"];
24[shape=box,label="[B24]\l0: decl v2 = ...\l"];
25[shape=box,label="[B25]\l0: ref.var(0.0)\l"];
27[shape=box,label="[B27]\l0: decl v1 = ...\l"];
28[shape=box,label="[B28]\l0: ref.var(0.0)\l"];
2->1 [label=""];
4->2 [label="0"];
3->4 [label=""];
5->2 [label="1"];
3->5 [label=""];
6->3 [label=""];
8->6 [label=""];
10->8 [label="0"];
9->10 [label=""];
11->8 [label="1"];
9->11 [label=""];
13->9 [label="1"];
14->13 [label="1"];
15->14 [label="0"];
16->15 [label=""];
18->16 [label="0"];
17->18 [label=""];
19->16 [label="1"];
17->19 [label=""];
21->17 [label="1"];
22->21 [label=""];
24->22 [label=""];
25->24 [label=""];
27->25 [label=""];
28->27 [label=""];
0->28 [label=""];
}

digraph G {
0[shape=diamond,label="ENTRY"];
1[shape=diamond,label="EXIT"];
2[shape=box,label="[B2]\l0: 0\lT: RETURN\l"];
3[shape=box,label="[B3]\l0: printf(..., ...)\l"];
4[shape=box,label="[B4]\l0: printf(..., ...)\l"];
5[shape=box,label="[B5]\l0: string.as.char.pointer(\"odd(x)=%s\n\")\l"];
6[shape=box,label="[B6]\l0: varlist.pack((ite(int.ne(fun{...}(CAST<uint<4>>(( *v15))), 0), bind(){fun{...}()}, bind(){fun{...}()})))\l"];
7[shape=box,label="[B7]\l0: printf(..., ...)\l"];
8[shape=box,label="[B8]\l0: string.as.char.pointer(\"even(x)=%s\n\")\l"];
9[shape=box,label="[B9]\l0: varlist.pack((ite(int.ne(fun{...}(CAST<uint<4>>(( *v15))), 0), bind(){fun{...}()}, bind(){fun{...}()})))\l"];
10[shape=box,label="[B10]\l0: decl v15 = ...\l"];
11[shape=box,label="[B11]\l0: string.as.char.pointer(\"x=%d\n\")\l"];
12[shape=box,label="[B12]\l0: varlist.pack((( *v15)))\l"];
13[shape=box,label="[B13]\l0: ref.var(10)\l"];
2->1 [label=""];
3->2 [label=""];
5->3 [label="0"];
4->5 [label=""];
6->3 [label="1"];
4->6 [label=""];
8->4 [label="0"];
7->8 [label=""];
9->4 [label="1"];
7->9 [label=""];
11->7 [label="0"];
10->11 [label=""];
12->7 [label="1"];
10->12 [label=""];
13->10 [label=""];
0->13 [label=""];
}

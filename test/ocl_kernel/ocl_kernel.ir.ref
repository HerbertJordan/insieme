// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(array<ref<real<4>>,1> v62, vector<uint<4>,3> v50, vector<uint<4>,3> v64){
        decl vector<uint<4>,3> v63 = vector.pointwise(uint.div)(v50, v64);
        parallel(job([vector.reduction(v63, 1, uint.mul)-vector.reduction(v63, 1, uint.mul)])[decl array<ref<real<4>>,1> v58 = v62, decl vector<uint<4>,3> v59 = v63, decl vector<uint<4>,3> v60 = v64]{
            default: [v59, v60, v58]fun[vector<uint<4>,3> v51, vector<uint<4>,3> v57, array<ref<real<4>>,1> v56](){
                parallel(job([vector.reduction(v57, 1, uint.mul)-vector.reduction(v57, 1, uint.mul)])[decl array<ref<real<4>>,1> v53 = v56, decl vector<uint<4>,3> v54 = v57]{
                    default: [v54, v53]fun[vector<uint<4>,3> v52, array<ref<real<4>>,1> v1](){
                        decl ref<real<4>> v2 =  var(v1[0]);
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v78, vector<uint<4>,3> v66, vector<uint<4>,3> v80){
        decl vector<uint<4>,3> v79 = vector.pointwise(uint.div)(v66, v80);
        parallel(job([vector.reduction(v79, 1, uint.mul)-vector.reduction(v79, 1, uint.mul)])[decl array<ref<real<4>>,1> v74 = v78, decl vector<uint<4>,3> v75 = v79, decl vector<uint<4>,3> v76 = v80]{
            default: [v76, v75, v74]fun[vector<uint<4>,3> v73, vector<uint<4>,3> v67, array<ref<real<4>>,1> v72](){
                parallel(job([vector.reduction(v73, 1, uint.mul)-vector.reduction(v73, 1, uint.mul)])[decl array<ref<real<4>>,1> v69 = v72, decl vector<uint<4>,3> v70 = v73]{
                    default: [v69, v70]fun[array<ref<real<4>>,1> v5, vector<uint<4>,3> v68](){
                        decl ref<real<4>> v6 =  var(v5[0]);
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<int<4>>,1> v90, vector<uint<4>,3> v82, vector<uint<4>,3> v95){
        decl vector<uint<4>,3> v94 = vector.pointwise(uint.div)(v82, v95);
        parallel(job([vector.reduction(v94, 1, uint.mul)-vector.reduction(v94, 1, uint.mul)])[decl vector<uint<4>,3> v91 = v94, decl vector<uint<4>,3> v92 = v95]{
            default: [v90, v92, v91]fun[array<ref<int<4>>,1> v88, vector<uint<4>,3> v89, vector<uint<4>,3> v83](){
                parallel(job([vector.reduction(v89, 1, uint.mul)-vector.reduction(v89, 1, uint.mul)])[decl array<ref<int<4>>,1> v85 = v88, decl vector<uint<4>,3> v86 = v89]{
                    default: [v86, v85]fun[vector<uint<4>,3> v84, array<ref<int<4>>,1> v9](){
                        decl ref<int<4>> v10 =  var(v9[0]);
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(int<2> v104, vector<uint<4>,3> v97, vector<uint<4>,3> v109){
        decl vector<uint<4>,3> v108 = vector.pointwise(uint.div)(v97, v109);
        parallel(job([vector.reduction(v108, 1, uint.mul)-vector.reduction(v108, 1, uint.mul)])[decl vector<uint<4>,3> v105 = v108, decl vector<uint<4>,3> v106 = v109]{
            default: [v105, v106, v104]fun[vector<uint<4>,3> v98, vector<uint<4>,3> v103, int<2> v100](){
                parallel(job([vector.reduction(v103, 1, uint.mul)-vector.reduction(v103, 1, uint.mul)])[decl vector<uint<4>,3> v101 = v103]{
                    default: [v100, v101]fun[int<2> v13, vector<uint<4>,3> v99](){
                        decl ref<int<2>> v14 =  var(v13);
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v136, array<ref<real<4>>,1> v137, array<ref<int<4>>,1> v138, array<ref<real<4>>,1> v130, uint<4> v131, int<4> v132, vector<uint<4>,3> v111, vector<uint<4>,3> v140){
        decl vector<uint<4>,3> v139 = vector.pointwise(uint.div)(v111, v140);
        parallel(job([vector.reduction(v139, 1, uint.mul)-vector.reduction(v139, 1, uint.mul)])[decl array<ref<real<4>>,1> v127 = v136, decl array<ref<real<4>>,1> v128 = v137, decl array<ref<int<4>>,1> v129 = v138, decl vector<uint<4>,3> v133 = v139, decl vector<uint<4>,3> v134 = v140]{
            default: [v129, v127, v134, v130, v128, v133, v131, v132]fun[array<ref<int<4>>,1> v124, array<ref<real<4>>,1> v122, vector<uint<4>,3> v126, array<ref<real<4>>,1> v125, array<ref<real<4>>,1> v123, vector<uint<4>,3> v112, uint<4> v118, int<4> v119](){
                parallel(job([vector.reduction(v126, 1, uint.mul)-vector.reduction(v126, 1, uint.mul)])[decl array<ref<real<4>>,1> v114 = v122, decl array<ref<real<4>>,1> v115 = v123, decl array<ref<int<4>>,1> v116 = v124, decl array<ref<real<4>>,1> v117 = v125, decl vector<uint<4>,3> v120 = v126]{
                    default: [v116, v115, v119, v114, v118, v117, v120]fun[array<ref<int<4>>,1> v19, array<ref<real<4>>,1> v18, int<4> v22, array<ref<real<4>>,1> v17, uint<4> v21, array<ref<real<4>>,1> v20, vector<uint<4>,3> v113](){
                        v18[0] := v20[0];
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v167, array<ref<real<4>>,1> v168, array<ref<int<4>>,1> v169, array<ref<real<4>>,1> v161, uint<4> v162, int<4> v163, vector<uint<4>,3> v142, vector<uint<4>,3> v171){
        decl vector<uint<4>,3> v170 = vector.pointwise(uint.div)(v142, v171);
        parallel(job([vector.reduction(v170, 1, uint.mul)-vector.reduction(v170, 1, uint.mul)])[decl array<ref<real<4>>,1> v158 = v167, decl array<ref<real<4>>,1> v159 = v168, decl array<ref<int<4>>,1> v160 = v169, decl vector<uint<4>,3> v164 = v170, decl vector<uint<4>,3> v165 = v171]{
            default: [v161, v164, v165, v163, v162, v159, v160, v158]fun[array<ref<real<4>>,1> v156, vector<uint<4>,3> v143, vector<uint<4>,3> v157, int<4> v150, uint<4> v149, array<ref<real<4>>,1> v154, array<ref<int<4>>,1> v155, array<ref<real<4>>,1> v153](){
                parallel(job([vector.reduction(v157, 1, uint.mul)-vector.reduction(v157, 1, uint.mul)])[decl array<ref<real<4>>,1> v145 = v153, decl array<ref<real<4>>,1> v146 = v154, decl array<ref<int<4>>,1> v147 = v155, decl array<ref<real<4>>,1> v148 = v156, decl vector<uint<4>,3> v151 = v157]{
                    default: [v149, v148, v147, v146, v151, v145, v150]fun[uint<4> v29, array<ref<real<4>>,1> v28, array<ref<int<4>>,1> v27, array<ref<real<4>>,1> v26, vector<uint<4>,3> v144, array<ref<real<4>>,1> v25, int<4> v30](){
                        v26[v29] := v25[v30]*v28[v27[0]];
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v206, array<ref<real<4>>,1> v207, array<ref<int<4>>,1> v208, array<ref<real<4>>,1> v200, uint<4> v201, int<4> v202, vector<uint<4>,3> v173, vector<uint<4>,3> v210){
        decl vector<uint<4>,3> v209 = vector.pointwise(uint.div)(v173, v210);
        parallel(job([vector.reduction(v209, 1, uint.mul)-vector.reduction(v209, 1, uint.mul)])[decl array<ref<real<4>>,1> v197 = v206, decl array<ref<real<4>>,1> v198 = v207, decl array<ref<int<4>>,1> v199 = v208, decl vector<uint<4>,3> v203 = v209, decl vector<uint<4>,3> v204 = v210]{
            default: [v204, v203, v199, v197, v201, v202, v198, v200]fun[vector<uint<4>,3> v196, vector<uint<4>,3> v195, array<ref<int<4>>,1> v193, array<ref<real<4>>,1> v191, uint<4> v186, int<4> v187, array<ref<real<4>>,1> v192, array<ref<real<4>>,1> v194](){
                parallel(job([vector.reduction(v196, 1, uint.mul)-vector.reduction(v196, 1, uint.mul)])[decl array<ref<real<4>>,1> v182 = v191, decl array<ref<real<4>>,1> v183 = v192, decl array<ref<int<4>>,1> v184 = v193, decl array<ref<real<4>>,1> v185 = v194, decl vector<uint<4>,3> v188 = v195, decl vector<uint<4>,3> v189 = v196]{
                    default: [v184, v189, v188, v187, v183, v182, v186, v185]fun[array<ref<int<4>>,1> v35, vector<uint<4>,3> v175, vector<uint<4>,3> v174, int<4> v38, array<ref<real<4>>,1> v34, array<ref<real<4>>,1> v33, uint<4> v37, array<ref<real<4>>,1> v36](){
                        decl ref<uint<4>> v39 =  var([v174, v175]fun[vector<uint<4>,3> v178, vector<uint<4>,3> v177](uint<4> v176){
                            decl uint<4> v179 = getThreadID(0);
                            decl uint<4> v180 = getThreadID(1);
                            switch(v176) {
                                case 0: return v179/v177[2]/v177[1]+v177[0]*v180/v178[2]/v178[1]
                                case 1: return v179/v177[2]%v177[1]+v177[1]*v180/v178[2]%v178[1]
                                case 2: return v179%v177[2]+v177[2]*v180/v178[2]%v178[1]
                                default: { }
                            };
                        }(0));
                        v34[v39] := v39;
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v237, array<ref<real<4>>,1> v238, array<ref<int<4>>,1> v239, array<ref<real<4>>,1> v231, uint<4> v232, int<4> v233, vector<uint<4>,3> v212, vector<uint<4>,3> v241){
        decl vector<uint<4>,3> v240 = vector.pointwise(uint.div)(v212, v241);
        parallel(job([vector.reduction(v240, 1, uint.mul)-vector.reduction(v240, 1, uint.mul)])[decl array<ref<real<4>>,1> v228 = v237, decl array<ref<real<4>>,1> v229 = v238, decl array<ref<int<4>>,1> v230 = v239, decl vector<uint<4>,3> v234 = v240, decl vector<uint<4>,3> v235 = v241]{
            default: [v228, v233, v230, v235, v232, v229, v234, v231]fun[array<ref<real<4>>,1> v223, int<4> v220, array<ref<int<4>>,1> v225, vector<uint<4>,3> v227, uint<4> v219, array<ref<real<4>>,1> v224, vector<uint<4>,3> v213, array<ref<real<4>>,1> v226](){
                parallel(job([vector.reduction(v227, 1, uint.mul)-vector.reduction(v227, 1, uint.mul)])[decl array<ref<real<4>>,1> v215 = v223, decl array<ref<real<4>>,1> v216 = v224, decl array<ref<int<4>>,1> v217 = v225, decl array<ref<real<4>>,1> v218 = v226, decl vector<uint<4>,3> v221 = v227]{
                    default: [v220, v218, v219, v216, v215, v217, v221]fun[int<4> v47, array<ref<real<4>>,1> v45, uint<4> v46, array<ref<real<4>>,1> v43, array<ref<real<4>>,1> v42, array<ref<int<4>>,1> v44, vector<uint<4>,3> v214](){
                        if(v46==v47) v43[0] := v42[0] else { };
                    }
                });
                mergeAll();
            }
        });
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(array<ref<real<4>>,1> v62, vector<uint<4>,3> v50, vector<uint<4>,3> v64){
        decl vector<uint<4>,3> v63 = vector.pointwise(uint.div)(v50, v64);
        parallel(job(([vector.reduction(v63, 1, uint.mul)-vector.reduction(v63, 1, uint.mul)]))[decl array<ref<real<4>>,1> v58 = v62, decl vector<uint<4>,3> v59 = v63, decl vector<uint<4>,3> v60 = v64]{
            default: [v59, v60, v58]fun[vector<uint<4>,3> v51, vector<uint<4>,3> v57, array<ref<real<4>>,1> v56](){
                parallel(job(([vector.reduction(v57, 1, uint.mul)-vector.reduction(v57, 1, uint.mul)]))[decl array<ref<real<4>>,1> v53 = v56, decl vector<uint<4>,3> v54 = v57]{
                    default: [v54, v53]fun[vector<uint<4>,3> v52, array<ref<real<4>>,1> v1](){
                        decl ref<real<4>> v2 = ( var(( *(v1[CAST<uint<4>>(0)]))));
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v78, vector<uint<4>,3> v66, vector<uint<4>,3> v80){
        decl vector<uint<4>,3> v79 = vector.pointwise(uint.div)(v66, v80);
        parallel(job(([vector.reduction(v79, 1, uint.mul)-vector.reduction(v79, 1, uint.mul)]))[decl array<ref<real<4>>,1> v74 = v78, decl vector<uint<4>,3> v75 = v79, decl vector<uint<4>,3> v76 = v80]{
            default: [v76, v75, v74]fun[vector<uint<4>,3> v73, vector<uint<4>,3> v67, array<ref<real<4>>,1> v72](){
                parallel(job(([vector.reduction(v73, 1, uint.mul)-vector.reduction(v73, 1, uint.mul)]))[decl array<ref<real<4>>,1> v69 = v72, decl vector<uint<4>,3> v70 = v73]{
                    default: [v69, v70]fun[array<ref<real<4>>,1> v5, vector<uint<4>,3> v68](){
                        decl ref<real<4>> v6 = ( var(( *(v5[CAST<uint<4>>(0)]))));
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<int<4>>,1> v90, vector<uint<4>,3> v82, vector<uint<4>,3> v95){
        decl vector<uint<4>,3> v94 = vector.pointwise(uint.div)(v82, v95);
        parallel(job(([vector.reduction(v94, 1, uint.mul)-vector.reduction(v94, 1, uint.mul)]))[decl vector<uint<4>,3> v91 = v94, decl vector<uint<4>,3> v92 = v95]{
            default: [v90, v92, v91]fun[array<ref<int<4>>,1> v88, vector<uint<4>,3> v89, vector<uint<4>,3> v83](){
                parallel(job(([vector.reduction(v89, 1, uint.mul)-vector.reduction(v89, 1, uint.mul)]))[decl array<ref<int<4>>,1> v85 = v88, decl vector<uint<4>,3> v86 = v89]{
                    default: [v86, v85]fun[vector<uint<4>,3> v84, array<ref<int<4>>,1> v9](){
                        decl ref<int<4>> v10 = ( var(( *(v9[CAST<uint<4>>(0)]))));
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(int<2> v104, vector<uint<4>,3> v97, vector<uint<4>,3> v109){
        decl vector<uint<4>,3> v108 = vector.pointwise(uint.div)(v97, v109);
        parallel(job(([vector.reduction(v108, 1, uint.mul)-vector.reduction(v108, 1, uint.mul)]))[decl vector<uint<4>,3> v105 = v108, decl vector<uint<4>,3> v106 = v109]{
            default: [v105, v106, v104]fun[vector<uint<4>,3> v98, vector<uint<4>,3> v103, int<2> v100](){
                parallel(job(([vector.reduction(v103, 1, uint.mul)-vector.reduction(v103, 1, uint.mul)]))[decl vector<uint<4>,3> v101 = v103]{
                    default: [v100, v101]fun[int<2> v13, vector<uint<4>,3> v99](){
                        decl ref<int<2>> v14 = ( var(v13));
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v136, array<ref<real<4>>,1> v137, array<ref<int<4>>,1> v138, array<ref<real<4>>,1> v130, uint<4> v131, int<4> v132, vector<uint<4>,3> v111, vector<uint<4>,3> v140){
        decl vector<uint<4>,3> v139 = vector.pointwise(uint.div)(v111, v140);
        parallel(job(([vector.reduction(v139, 1, uint.mul)-vector.reduction(v139, 1, uint.mul)]))[decl array<ref<real<4>>,1> v127 = v136, decl array<ref<real<4>>,1> v128 = v137, decl array<ref<int<4>>,1> v129 = v138, decl vector<uint<4>,3> v133 = v139, decl vector<uint<4>,3> v134 = v140]{
            default: [v129, v127, v134, v130, v128, v133, v131, v132]fun[array<ref<int<4>>,1> v124, array<ref<real<4>>,1> v122, vector<uint<4>,3> v126, array<ref<real<4>>,1> v125, array<ref<real<4>>,1> v123, vector<uint<4>,3> v112, uint<4> v118, int<4> v119](){
                parallel(job(([vector.reduction(v126, 1, uint.mul)-vector.reduction(v126, 1, uint.mul)]))[decl array<ref<real<4>>,1> v114 = v122, decl array<ref<real<4>>,1> v115 = v123, decl array<ref<int<4>>,1> v116 = v124, decl array<ref<real<4>>,1> v117 = v125, decl vector<uint<4>,3> v120 = v126]{
                    default: [v116, v115, v119, v114, v118, v117, v120]fun[array<ref<int<4>>,1> v19, array<ref<real<4>>,1> v18, int<4> v22, array<ref<real<4>>,1> v17, uint<4> v21, array<ref<real<4>>,1> v20, vector<uint<4>,3> v113](){
                        ((v18[CAST<uint<4>>(0)]) := ( *(v20[CAST<uint<4>>(0)])));
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v167, array<ref<real<4>>,1> v168, array<ref<int<4>>,1> v169, array<ref<real<4>>,1> v161, uint<4> v162, int<4> v163, vector<uint<4>,3> v142, vector<uint<4>,3> v171){
        decl vector<uint<4>,3> v170 = vector.pointwise(uint.div)(v142, v171);
        parallel(job(([vector.reduction(v170, 1, uint.mul)-vector.reduction(v170, 1, uint.mul)]))[decl array<ref<real<4>>,1> v158 = v167, decl array<ref<real<4>>,1> v159 = v168, decl array<ref<int<4>>,1> v160 = v169, decl vector<uint<4>,3> v164 = v170, decl vector<uint<4>,3> v165 = v171]{
            default: [v161, v164, v165, v163, v162, v159, v160, v158]fun[array<ref<real<4>>,1> v156, vector<uint<4>,3> v143, vector<uint<4>,3> v157, int<4> v150, uint<4> v149, array<ref<real<4>>,1> v154, array<ref<int<4>>,1> v155, array<ref<real<4>>,1> v153](){
                parallel(job(([vector.reduction(v157, 1, uint.mul)-vector.reduction(v157, 1, uint.mul)]))[decl array<ref<real<4>>,1> v145 = v153, decl array<ref<real<4>>,1> v146 = v154, decl array<ref<int<4>>,1> v147 = v155, decl array<ref<real<4>>,1> v148 = v156, decl vector<uint<4>,3> v151 = v157]{
                    default: [v149, v148, v147, v146, v151, v145, v150]fun[uint<4> v29, array<ref<real<4>>,1> v28, array<ref<int<4>>,1> v27, array<ref<real<4>>,1> v26, vector<uint<4>,3> v144, array<ref<real<4>>,1> v25, int<4> v30](){
                        ((v26[CAST<uint<4>>(v29)]) := (( *(v25[CAST<uint<4>>(v30)]))*( *(v28[CAST<uint<4>>(( *(v27[CAST<uint<4>>(0)])))]))));
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v206, array<ref<real<4>>,1> v207, array<ref<int<4>>,1> v208, array<ref<real<4>>,1> v200, uint<4> v201, int<4> v202, vector<uint<4>,3> v173, vector<uint<4>,3> v210){
        decl vector<uint<4>,3> v209 = vector.pointwise(uint.div)(v173, v210);
        parallel(job(([vector.reduction(v209, 1, uint.mul)-vector.reduction(v209, 1, uint.mul)]))[decl array<ref<real<4>>,1> v197 = v206, decl array<ref<real<4>>,1> v198 = v207, decl array<ref<int<4>>,1> v199 = v208, decl vector<uint<4>,3> v203 = v209, decl vector<uint<4>,3> v204 = v210]{
            default: [v204, v203, v199, v197, v201, v202, v198, v200]fun[vector<uint<4>,3> v196, vector<uint<4>,3> v195, array<ref<int<4>>,1> v193, array<ref<real<4>>,1> v191, uint<4> v186, int<4> v187, array<ref<real<4>>,1> v192, array<ref<real<4>>,1> v194](){
                parallel(job(([vector.reduction(v196, 1, uint.mul)-vector.reduction(v196, 1, uint.mul)]))[decl array<ref<real<4>>,1> v182 = v191, decl array<ref<real<4>>,1> v183 = v192, decl array<ref<int<4>>,1> v184 = v193, decl array<ref<real<4>>,1> v185 = v194, decl vector<uint<4>,3> v188 = v195, decl vector<uint<4>,3> v189 = v196]{
                    default: [v184, v189, v188, v187, v183, v182, v186, v185]fun[array<ref<int<4>>,1> v35, vector<uint<4>,3> v175, vector<uint<4>,3> v174, int<4> v38, array<ref<real<4>>,1> v34, array<ref<real<4>>,1> v33, uint<4> v37, array<ref<real<4>>,1> v36](){
                        decl ref<uint<4>> v39 = ( var([v174, v175]fun[vector<uint<4>,3> v178, vector<uint<4>,3> v177](uint<4> v176){
                            decl uint<4> v179 = getThreadID(0);
                            decl uint<4> v180 = getThreadID(1);
                            switch(v176) {
                                case 0: return (((v179/(v177[2]))/(v177[1]))+((v177[0])*((v180/(v178[2]))/(v178[1]))))
                                case 1: return (((v179/(v177[2]))%(v177[1]))+((v177[1])*((v180/(v178[2]))%(v178[1]))))
                                case 2: return ((v179%(v177[2]))+((v177[2])*((v180/(v178[2]))%(v178[1]))))
                                default: { }
                            };
                        }(CAST<uint<4>>(0))));
                        ((v34[CAST<uint<4>>(( *v39))]) := CAST<real<4>>(( *v39)));
                    }
                });
                mergeAll();
            }
        });
    }

//  Entry Point: 
fun(array<ref<real<4>>,1> v237, array<ref<real<4>>,1> v238, array<ref<int<4>>,1> v239, array<ref<real<4>>,1> v231, uint<4> v232, int<4> v233, vector<uint<4>,3> v212, vector<uint<4>,3> v241){
        decl vector<uint<4>,3> v240 = vector.pointwise(uint.div)(v212, v241);
        parallel(job(([vector.reduction(v240, 1, uint.mul)-vector.reduction(v240, 1, uint.mul)]))[decl array<ref<real<4>>,1> v228 = v237, decl array<ref<real<4>>,1> v229 = v238, decl array<ref<int<4>>,1> v230 = v239, decl vector<uint<4>,3> v234 = v240, decl vector<uint<4>,3> v235 = v241]{
            default: [v228, v233, v230, v235, v232, v229, v234, v231]fun[array<ref<real<4>>,1> v223, int<4> v220, array<ref<int<4>>,1> v225, vector<uint<4>,3> v227, uint<4> v219, array<ref<real<4>>,1> v224, vector<uint<4>,3> v213, array<ref<real<4>>,1> v226](){
                parallel(job(([vector.reduction(v227, 1, uint.mul)-vector.reduction(v227, 1, uint.mul)]))[decl array<ref<real<4>>,1> v215 = v223, decl array<ref<real<4>>,1> v216 = v224, decl array<ref<int<4>>,1> v217 = v225, decl array<ref<real<4>>,1> v218 = v226, decl vector<uint<4>,3> v221 = v227]{
                    default: [v220, v218, v219, v216, v215, v217, v221]fun[int<4> v47, array<ref<real<4>>,1> v45, uint<4> v46, array<ref<real<4>>,1> v43, array<ref<real<4>>,1> v42, array<ref<int<4>>,1> v44, vector<uint<4>,3> v214](){
                        if((v46==CAST<uint<4>>(v47))) ((v43[CAST<uint<4>>(0)]) := ( *(v42[CAST<uint<4>>(0)]))) else { };
                    }
                });
                mergeAll();
            }
        });
    }


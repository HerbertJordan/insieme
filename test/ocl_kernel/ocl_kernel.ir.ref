#include <alloca.h>
#include <stddef.h>
#include <stdlib.h>
#include <runtime.h>
#define bool int
#define true 1
#define false 0
#define null 0
// --- Entry Point ---

// start code fragment :: Definition of privateMemArg //
__kernel void privateMemArg(short p) {
	{
		short copy = p;
	}
}

// --- Entry Point ---

// start code fragment :: Definition of allMemArg //
__kernel void allMemArg(__global double* c, __global float* g, __local int* l, short p) {
	{
		int element = ((l[((unsigned int)(0))]));
	}
}

// --- Entry Point ---

// start code fragment :: Definition of constantMemArg //
__kernel void constantMemArg(__global double* c) {
	{
		double element = ((c[((unsigned int)(0))]));
	}
}

// --- Entry Point ---

// start code fragment :: Definition of globalMemArg //
__kernel void globalMemArg(__global float* g) {
	{
		float element = ((g[((unsigned int)(0))]));
	}
}

// --- Entry Point ---

// start code fragment :: Definition of localMemArg //
__kernel void localMemArg(__local int* l) {
	{
		int element = ((l[((unsigned int)(0))]));
	}
}


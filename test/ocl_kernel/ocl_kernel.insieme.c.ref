// --- Generated Inspire Code ---
#include <alloca.h>
#include <stddef.h>
#include <runtime.h>
#define bool int
#define true 1
#define false 0
#define null 0

// start code fragment :: vector_type_declaration of __insieme_type_1 <=> vector<uint<4>,3> //
typedef struct ___insieme_type_1 { 
    unsigned int data[3];
} __insieme_type_1;

// A constructor initializing a vector of the type __insieme_type_1 uniformly
static inline __insieme_type_1 __insieme_type_1_init_uniform(unsigned int value) {
	__insieme_type_1 res;
	for (int i=0; i<3;++i) {
	    res.data[i] = value;
	}
	return res;
}


// start code fragment :: Definition of __insieme_supp_2 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_2(__insieme_type_1 var_509, __insieme_type_1 var_510) { return ((__insieme_type_1){{(var_509.data[0]/var_510.data[0]), (var_509.data[1]/var_510.data[1]), (var_509.data[2]/var_510.data[2])}}); }
static __insieme_type_1 __insieme_supp_2_wrap(void* _closure, __insieme_type_1 var_509, __insieme_type_1 var_510) { return __insieme_supp_2(var_509, var_510); }

// start code fragment :: struct for job __insieme_job_3 //
struct __insieme_job_3 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_94;
	__insieme_type_1 var_95;
	__insieme_type_1 var_96;
	// ---- additional captured variables -----
	__insieme_type_1 var_561;
	float* var_562;
	__insieme_type_1 var_563;
};

// start code fragment :: Definitions for function type: __insieme_funType_4 //
//
// -------------------- Begin of constructs for function type (()->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_4 <-> (()->unit)
typedef struct ___insieme_funType_4 { 
    void(*call)(void*);
} __insieme_funType_4;

// Type safe function for invoking closures of type __insieme_funType_4
static inline void __insieme_funType_4_call(__insieme_funType_4* closure) {  closure->call(closure); }

// A constructor for closures wrapping pure functions of type (()->unit)
static inline __insieme_funType_4* __insieme_funType_4_ctr(__insieme_funType_4* target, void(*call)(void*)) {
	*target = (__insieme_funType_4){call};
	return target;
}
// ----------------------- end of constructs for function (()->unit)-----------------------

// start code fragment :: Definitions for function type: __insieme_funType_6 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_6 <-> ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_6 { 
    void(*call)(void*, float*, __insieme_type_1, __insieme_type_1);
} __insieme_funType_6;

// Type safe function for invoking closures of type __insieme_funType_6
static inline void __insieme_funType_6_call(__insieme_funType_6* closure, float* p1, __insieme_type_1 p2, __insieme_type_1 p3) {  closure->call(closure, p1,p2,p3); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_6* __insieme_funType_6_ctr(__insieme_funType_6* target, void(*call)(void*, float*, __insieme_type_1, __insieme_type_1)) {
	*target = (__insieme_funType_6){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_5 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_5 {
    void(*call)(void*);
    __insieme_funType_6* nested;
    float* c1;
    __insieme_type_1 c2;
    __insieme_type_1 c3;
} __insieme_closure_5;

static inline void __insieme_closure_5_bind(__insieme_closure_5* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3); }

static inline __insieme_closure_5* __insieme_closure_5_ctr(__insieme_closure_5* closure, __insieme_funType_6* nested, float* c1, __insieme_type_1 c2, __insieme_type_1 c3) {
    *closure = (__insieme_closure_5){&__insieme_closure_5_bind, nested, c1, c2, c3};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_8 //
struct __insieme_job_8 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_89;
	__insieme_type_1 var_90;
	// ---- additional captured variables -----
	__insieme_type_1 var_564;
	float* var_565;
};

// start code fragment :: Definitions for function type: __insieme_funType_10 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_10 <-> ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_10 { 
    void(*call)(void*, float*, __insieme_type_1);
} __insieme_funType_10;

// Type safe function for invoking closures of type __insieme_funType_10
static inline void __insieme_funType_10_call(__insieme_funType_10* closure, float* p1, __insieme_type_1 p2) {  closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_10* __insieme_funType_10_ctr(__insieme_funType_10* target, void(*call)(void*, float*, __insieme_type_1)) {
	*target = (__insieme_funType_10){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_9 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_9 {
    void(*call)(void*);
    __insieme_funType_10* nested;
    float* c1;
    __insieme_type_1 c2;
} __insieme_closure_9;

static inline void __insieme_closure_9_bind(__insieme_closure_9* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2); }

static inline __insieme_closure_9* __insieme_closure_9_ctr(__insieme_closure_9* closure, __insieme_funType_10* nested, float* c1, __insieme_type_1 c2) {
    *closure = (__insieme_closure_9){&__insieme_closure_9_bind, nested, c1, c2};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_11 ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit) //
void __insieme_supp_11(float* c, __insieme_type_1 var_88) { float element = ((c[((unsigned int)(0))])); }
static void __insieme_supp_11_wrap(void* _closure, float* c, __insieme_type_1 var_88) { __insieme_supp_11(c, var_88); }

// start code fragment :: function for job __insieme_job_8 //
void fun__insieme_job_8(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_89 = ((struct __insieme_job_8*)args)->var_89;
	__insieme_type_1 var_90 = ((struct __insieme_job_8*)args)->var_90;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_564 = ((struct __insieme_job_8*)args)->var_564;
	float* var_565 = ((struct __insieme_job_8*)args)->var_565;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_9_ctr((__insieme_closure_9*)alloca(sizeof(__insieme_closure_9)),(__insieme_funType_10*)__insieme_funType_10_ctr((__insieme_funType_10*)alloca(sizeof(__insieme_funType_10)),&__insieme_supp_11_wrap), var_89, var_90));
}

// start code fragment :: Prototype for external function: mergeAll ... type: (()->unit) //
void mergeAll();
static void mergeAll_wrap(void* _closure) { mergeAll(); }

// start code fragment :: Definition of __insieme_supp_7 ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_7(float* var_92, __insieme_type_1 var_87, __insieme_type_1 var_93){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_8)),&((struct __insieme_job_8){sizeof(struct __insieme_job_8),((((1*var_93.data[0])*var_93.data[1])*var_93.data[2])),((((1*var_93.data[0])*var_93.data[1])*var_93.data[2])),&fun__insieme_job_8,var_92,var_93,var_93,var_92}),sizeof(struct __insieme_job_8)));
	mergeAll();
}
static void __insieme_supp_7_wrap(void* _closure, float* var_92, __insieme_type_1 var_87, __insieme_type_1 var_93) { __insieme_supp_7(var_92, var_87, var_93); }

// start code fragment :: function for job __insieme_job_3 //
void fun__insieme_job_3(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_94 = ((struct __insieme_job_3*)args)->var_94;
	__insieme_type_1 var_95 = ((struct __insieme_job_3*)args)->var_95;
	__insieme_type_1 var_96 = ((struct __insieme_job_3*)args)->var_96;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_561 = ((struct __insieme_job_3*)args)->var_561;
	float* var_562 = ((struct __insieme_job_3*)args)->var_562;
	__insieme_type_1 var_563 = ((struct __insieme_job_3*)args)->var_563;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_5_ctr((__insieme_closure_5*)alloca(sizeof(__insieme_closure_5)),(__insieme_funType_6*)__insieme_funType_6_ctr((__insieme_funType_6*)alloca(sizeof(__insieme_funType_6)),&__insieme_supp_7_wrap), var_94, var_95, var_96));
}

// start code fragment :: Definition of constantMemArg ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int constantMemArg(float* var_98, __insieme_type_1 var_86, __insieme_type_1 var_100){
	__insieme_type_1 var_99 = __insieme_supp_2(var_86, var_100);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_3)),&((struct __insieme_job_3){sizeof(struct __insieme_job_3),((((1*var_99.data[0])*var_99.data[1])*var_99.data[2])),((((1*var_99.data[0])*var_99.data[1])*var_99.data[2])),&fun__insieme_job_3,var_98,var_99,var_100,var_99,var_98,var_100}),sizeof(struct __insieme_job_3)));
	mergeAll();
	return 0;
}
static int constantMemArg_wrap(void* _closure, float* var_98, __insieme_type_1 var_86, __insieme_type_1 var_100) { return constantMemArg(var_98, var_86, var_100); }

// start code fragment :: Definition of __insieme_supp_12 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_12(__insieme_type_1 var_513, __insieme_type_1 var_514) { return ((__insieme_type_1){{(var_513.data[0]/var_514.data[0]), (var_513.data[1]/var_514.data[1]), (var_513.data[2]/var_514.data[2])}}); }
static __insieme_type_1 __insieme_supp_12_wrap(void* _closure, __insieme_type_1 var_513, __insieme_type_1 var_514) { return __insieme_supp_12(var_513, var_514); }

// start code fragment :: struct for job __insieme_job_13 //
struct __insieme_job_13 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_110;
	__insieme_type_1 var_111;
	__insieme_type_1 var_112;
	// ---- additional captured variables -----
	__insieme_type_1 var_566;
	float* var_567;
	__insieme_type_1 var_568;
};

// start code fragment :: Definition of __insieme_closure_14 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_14 {
    void(*call)(void*);
    __insieme_funType_6* nested;
    float* c1;
    __insieme_type_1 c2;
    __insieme_type_1 c3;
} __insieme_closure_14;

static inline void __insieme_closure_14_bind(__insieme_closure_14* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3); }

static inline __insieme_closure_14* __insieme_closure_14_ctr(__insieme_closure_14* closure, __insieme_funType_6* nested, float* c1, __insieme_type_1 c2, __insieme_type_1 c3) {
    *closure = (__insieme_closure_14){&__insieme_closure_14_bind, nested, c1, c2, c3};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_16 //
struct __insieme_job_16 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_105;
	__insieme_type_1 var_106;
	// ---- additional captured variables -----
	__insieme_type_1 var_569;
	float* var_570;
};

// start code fragment :: Definition of __insieme_closure_17 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_17 {
    void(*call)(void*);
    __insieme_funType_10* nested;
    float* c1;
    __insieme_type_1 c2;
} __insieme_closure_17;

static inline void __insieme_closure_17_bind(__insieme_closure_17* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2); }

static inline __insieme_closure_17* __insieme_closure_17_ctr(__insieme_closure_17* closure, __insieme_funType_10* nested, float* c1, __insieme_type_1 c2) {
    *closure = (__insieme_closure_17){&__insieme_closure_17_bind, nested, c1, c2};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_18 ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit) //
void __insieme_supp_18(float* g, __insieme_type_1 var_104) { float element = ((g[((unsigned int)(0))])); }
static void __insieme_supp_18_wrap(void* _closure, float* g, __insieme_type_1 var_104) { __insieme_supp_18(g, var_104); }

// start code fragment :: function for job __insieme_job_16 //
void fun__insieme_job_16(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_105 = ((struct __insieme_job_16*)args)->var_105;
	__insieme_type_1 var_106 = ((struct __insieme_job_16*)args)->var_106;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_569 = ((struct __insieme_job_16*)args)->var_569;
	float* var_570 = ((struct __insieme_job_16*)args)->var_570;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_17_ctr((__insieme_closure_17*)alloca(sizeof(__insieme_closure_17)),(__insieme_funType_10*)__insieme_funType_10_ctr((__insieme_funType_10*)alloca(sizeof(__insieme_funType_10)),&__insieme_supp_18_wrap), var_105, var_106));
}

// start code fragment :: Definition of __insieme_supp_15 ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_15(float* var_108, __insieme_type_1 var_103, __insieme_type_1 var_109){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_16)),&((struct __insieme_job_16){sizeof(struct __insieme_job_16),((((1*var_109.data[0])*var_109.data[1])*var_109.data[2])),((((1*var_109.data[0])*var_109.data[1])*var_109.data[2])),&fun__insieme_job_16,var_108,var_109,var_109,var_108}),sizeof(struct __insieme_job_16)));
	mergeAll();
}
static void __insieme_supp_15_wrap(void* _closure, float* var_108, __insieme_type_1 var_103, __insieme_type_1 var_109) { __insieme_supp_15(var_108, var_103, var_109); }

// start code fragment :: function for job __insieme_job_13 //
void fun__insieme_job_13(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_110 = ((struct __insieme_job_13*)args)->var_110;
	__insieme_type_1 var_111 = ((struct __insieme_job_13*)args)->var_111;
	__insieme_type_1 var_112 = ((struct __insieme_job_13*)args)->var_112;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_566 = ((struct __insieme_job_13*)args)->var_566;
	float* var_567 = ((struct __insieme_job_13*)args)->var_567;
	__insieme_type_1 var_568 = ((struct __insieme_job_13*)args)->var_568;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_14_ctr((__insieme_closure_14*)alloca(sizeof(__insieme_closure_14)),(__insieme_funType_6*)__insieme_funType_6_ctr((__insieme_funType_6*)alloca(sizeof(__insieme_funType_6)),&__insieme_supp_15_wrap), var_110, var_111, var_112));
}

// start code fragment :: Definition of globalMemArg ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int globalMemArg(float* var_114, __insieme_type_1 var_102, __insieme_type_1 var_116){
	__insieme_type_1 var_115 = __insieme_supp_12(var_102, var_116);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_13)),&((struct __insieme_job_13){sizeof(struct __insieme_job_13),((((1*var_115.data[0])*var_115.data[1])*var_115.data[2])),((((1*var_115.data[0])*var_115.data[1])*var_115.data[2])),&fun__insieme_job_13,var_114,var_115,var_116,var_115,var_114,var_116}),sizeof(struct __insieme_job_13)));
	mergeAll();
	return 0;
}
static int globalMemArg_wrap(void* _closure, float* var_114, __insieme_type_1 var_102, __insieme_type_1 var_116) { return globalMemArg(var_114, var_102, var_116); }

// start code fragment :: Definition of __insieme_supp_20 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_20(__insieme_type_1 var_517, __insieme_type_1 var_518) { return ((__insieme_type_1){{(var_517.data[0]/var_518.data[0]), (var_517.data[1]/var_518.data[1]), (var_517.data[2]/var_518.data[2])}}); }
static __insieme_type_1 __insieme_supp_20_wrap(void* _closure, __insieme_type_1 var_517, __insieme_type_1 var_518) { return __insieme_supp_20(var_517, var_518); }

// start code fragment :: struct for job __insieme_job_21 //
struct __insieme_job_21 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1 var_127;
	__insieme_type_1 var_128;
	// ---- additional captured variables -----
	__insieme_type_1 var_571;
	__insieme_type_1 var_572;
	int* var_573;
};

// start code fragment :: Definitions for function type: __insieme_funType_23 //
//
// -------------------- Begin of constructs for function type ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_23 <-> ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_23 { 
    void(*call)(void*, int*, __insieme_type_1, __insieme_type_1);
} __insieme_funType_23;

// Type safe function for invoking closures of type __insieme_funType_23
static inline void __insieme_funType_23_call(__insieme_funType_23* closure, int* p1, __insieme_type_1 p2, __insieme_type_1 p3) {  closure->call(closure, p1,p2,p3); }

// A constructor for closures wrapping pure functions of type ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_23* __insieme_funType_23_ctr(__insieme_funType_23* target, void(*call)(void*, int*, __insieme_type_1, __insieme_type_1)) {
	*target = (__insieme_funType_23){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_22 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_22 {
    void(*call)(void*);
    __insieme_funType_23* nested;
    int* c1;
    __insieme_type_1 c2;
    __insieme_type_1 c3;
} __insieme_closure_22;

static inline void __insieme_closure_22_bind(__insieme_closure_22* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3); }

static inline __insieme_closure_22* __insieme_closure_22_ctr(__insieme_closure_22* closure, __insieme_funType_23* nested, int* c1, __insieme_type_1 c2, __insieme_type_1 c3) {
    *closure = (__insieme_closure_22){&__insieme_closure_22_bind, nested, c1, c2, c3};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_25 //
struct __insieme_job_25 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	int* var_121;
	__insieme_type_1 var_122;
	// ---- additional captured variables -----
	__insieme_type_1 var_574;
	int* var_575;
};

// start code fragment :: Definitions for function type: __insieme_funType_27 //
//
// -------------------- Begin of constructs for function type ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_27 <-> ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_27 { 
    void(*call)(void*, int*, __insieme_type_1);
} __insieme_funType_27;

// Type safe function for invoking closures of type __insieme_funType_27
static inline void __insieme_funType_27_call(__insieme_funType_27* closure, int* p1, __insieme_type_1 p2) {  closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_27* __insieme_funType_27_ctr(__insieme_funType_27* target, void(*call)(void*, int*, __insieme_type_1)) {
	*target = (__insieme_funType_27){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_26 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_26 {
    void(*call)(void*);
    __insieme_funType_27* nested;
    int* c1;
    __insieme_type_1 c2;
} __insieme_closure_26;

static inline void __insieme_closure_26_bind(__insieme_closure_26* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2); }

static inline __insieme_closure_26* __insieme_closure_26_ctr(__insieme_closure_26* closure, __insieme_funType_27* nested, int* c1, __insieme_type_1 c2) {
    *closure = (__insieme_closure_26){&__insieme_closure_26_bind, nested, c1, c2};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_28 ... type: ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit) //
void __insieme_supp_28(int* l, __insieme_type_1 var_120) { int element = ((l[((unsigned int)(0))])); }
static void __insieme_supp_28_wrap(void* _closure, int* l, __insieme_type_1 var_120) { __insieme_supp_28(l, var_120); }

// start code fragment :: function for job __insieme_job_25 //
void fun__insieme_job_25(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	int* var_121 = ((struct __insieme_job_25*)args)->var_121;
	__insieme_type_1 var_122 = ((struct __insieme_job_25*)args)->var_122;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_574 = ((struct __insieme_job_25*)args)->var_574;
	int* var_575 = ((struct __insieme_job_25*)args)->var_575;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_26_ctr((__insieme_closure_26*)alloca(sizeof(__insieme_closure_26)),(__insieme_funType_27*)__insieme_funType_27_ctr((__insieme_funType_27*)alloca(sizeof(__insieme_funType_27)),&__insieme_supp_28_wrap), var_121, var_122));
}

// start code fragment :: Definition of __insieme_supp_24 ... type: ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_24(int* var_124, __insieme_type_1 var_119, __insieme_type_1 var_125){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_25)),&((struct __insieme_job_25){sizeof(struct __insieme_job_25),((((1*var_125.data[0])*var_125.data[1])*var_125.data[2])),((((1*var_125.data[0])*var_125.data[1])*var_125.data[2])),&fun__insieme_job_25,var_124,var_125,var_125,var_124}),sizeof(struct __insieme_job_25)));
	mergeAll();
}
static void __insieme_supp_24_wrap(void* _closure, int* var_124, __insieme_type_1 var_119, __insieme_type_1 var_125) { __insieme_supp_24(var_124, var_119, var_125); }

// start code fragment :: function for job __insieme_job_21 //
void fun__insieme_job_21(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1 var_127 = ((struct __insieme_job_21*)args)->var_127;
	__insieme_type_1 var_128 = ((struct __insieme_job_21*)args)->var_128;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_571 = ((struct __insieme_job_21*)args)->var_571;
	__insieme_type_1 var_572 = ((struct __insieme_job_21*)args)->var_572;
	int* var_573 = ((struct __insieme_job_21*)args)->var_573;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_22_ctr((__insieme_closure_22*)alloca(sizeof(__insieme_closure_22)),(__insieme_funType_23*)__insieme_funType_23_ctr((__insieme_funType_23*)alloca(sizeof(__insieme_funType_23)),&__insieme_supp_24_wrap), var_573, var_127, var_128));
}

// start code fragment :: Definition of localMemArg ... type: ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int localMemArg(int* var_126, __insieme_type_1 var_118, __insieme_type_1 var_131){
	__insieme_type_1 var_130 = __insieme_supp_20(var_118, var_131);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_21)),&((struct __insieme_job_21){sizeof(struct __insieme_job_21),((((1*var_130.data[0])*var_130.data[1])*var_130.data[2])),((((1*var_130.data[0])*var_130.data[1])*var_130.data[2])),&fun__insieme_job_21,var_130,var_131,var_130,var_131,var_126}),sizeof(struct __insieme_job_21)));
	mergeAll();
	return 0;
}
static int localMemArg_wrap(void* _closure, int* var_126, __insieme_type_1 var_118, __insieme_type_1 var_131) { return localMemArg(var_126, var_118, var_131); }

// start code fragment :: Definition of __insieme_supp_30 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_30(__insieme_type_1 var_521, __insieme_type_1 var_522) { return ((__insieme_type_1){{(var_521.data[0]/var_522.data[0]), (var_521.data[1]/var_522.data[1]), (var_521.data[2]/var_522.data[2])}}); }
static __insieme_type_1 __insieme_supp_30_wrap(void* _closure, __insieme_type_1 var_521, __insieme_type_1 var_522) { return __insieme_supp_30(var_521, var_522); }

// start code fragment :: struct for job __insieme_job_31 //
struct __insieme_job_31 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1 var_141;
	__insieme_type_1 var_142;
	// ---- additional captured variables -----
	__insieme_type_1 var_576;
	__insieme_type_1 var_577;
	short var_578;
};

// start code fragment :: Definitions for function type: __insieme_funType_33 //
//
// -------------------- Begin of constructs for function type ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_33 <-> ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_33 { 
    void(*call)(void*, short, __insieme_type_1, __insieme_type_1);
} __insieme_funType_33;

// Type safe function for invoking closures of type __insieme_funType_33
static inline void __insieme_funType_33_call(__insieme_funType_33* closure, short p1, __insieme_type_1 p2, __insieme_type_1 p3) {  closure->call(closure, p1,p2,p3); }

// A constructor for closures wrapping pure functions of type ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_33* __insieme_funType_33_ctr(__insieme_funType_33* target, void(*call)(void*, short, __insieme_type_1, __insieme_type_1)) {
	*target = (__insieme_funType_33){call};
	return target;
}
// ----------------------- end of constructs for function ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_32 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_32 {
    void(*call)(void*);
    __insieme_funType_33* nested;
    short c1;
    __insieme_type_1 c2;
    __insieme_type_1 c3;
} __insieme_closure_32;

static inline void __insieme_closure_32_bind(__insieme_closure_32* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3); }

static inline __insieme_closure_32* __insieme_closure_32_ctr(__insieme_closure_32* closure, __insieme_funType_33* nested, short c1, __insieme_type_1 c2, __insieme_type_1 c3) {
    *closure = (__insieme_closure_32){&__insieme_closure_32_bind, nested, c1, c2, c3};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_35 //
struct __insieme_job_35 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1 var_137;
	// ---- additional captured variables -----
	__insieme_type_1 var_579;
	short var_580;
};

// start code fragment :: Definitions for function type: __insieme_funType_37 //
//
// -------------------- Begin of constructs for function type ((int<2>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_37 <-> ((int<2>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_37 { 
    void(*call)(void*, short, __insieme_type_1);
} __insieme_funType_37;

// Type safe function for invoking closures of type __insieme_funType_37
static inline void __insieme_funType_37_call(__insieme_funType_37* closure, short p1, __insieme_type_1 p2) {  closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type ((int<2>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_37* __insieme_funType_37_ctr(__insieme_funType_37* target, void(*call)(void*, short, __insieme_type_1)) {
	*target = (__insieme_funType_37){call};
	return target;
}
// ----------------------- end of constructs for function ((int<2>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_36 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_36 {
    void(*call)(void*);
    __insieme_funType_37* nested;
    short c1;
    __insieme_type_1 c2;
} __insieme_closure_36;

static inline void __insieme_closure_36_bind(__insieme_closure_36* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2); }

static inline __insieme_closure_36* __insieme_closure_36_ctr(__insieme_closure_36* closure, __insieme_funType_37* nested, short c1, __insieme_type_1 c2) {
    *closure = (__insieme_closure_36){&__insieme_closure_36_bind, nested, c1, c2};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_38 ... type: ((int<2>,vector<uint<4>,3>)->unit) //
void __insieme_supp_38(short p, __insieme_type_1 var_135) { short copy = p; }
static void __insieme_supp_38_wrap(void* _closure, short p, __insieme_type_1 var_135) { __insieme_supp_38(p, var_135); }

// start code fragment :: function for job __insieme_job_35 //
void fun__insieme_job_35(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1 var_137 = ((struct __insieme_job_35*)args)->var_137;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_579 = ((struct __insieme_job_35*)args)->var_579;
	short var_580 = ((struct __insieme_job_35*)args)->var_580;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_36_ctr((__insieme_closure_36*)alloca(sizeof(__insieme_closure_36)),(__insieme_funType_37*)__insieme_funType_37_ctr((__insieme_funType_37*)alloca(sizeof(__insieme_funType_37)),&__insieme_supp_38_wrap), var_580, var_137));
}

// start code fragment :: Definition of __insieme_supp_34 ... type: ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_34(short var_136, __insieme_type_1 var_134, __insieme_type_1 var_139){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_35)),&((struct __insieme_job_35){sizeof(struct __insieme_job_35),((((1*var_139.data[0])*var_139.data[1])*var_139.data[2])),((((1*var_139.data[0])*var_139.data[1])*var_139.data[2])),&fun__insieme_job_35,var_139,var_139,var_136}),sizeof(struct __insieme_job_35)));
	mergeAll();
}
static void __insieme_supp_34_wrap(void* _closure, short var_136, __insieme_type_1 var_134, __insieme_type_1 var_139) { __insieme_supp_34(var_136, var_134, var_139); }

// start code fragment :: function for job __insieme_job_31 //
void fun__insieme_job_31(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1 var_141 = ((struct __insieme_job_31*)args)->var_141;
	__insieme_type_1 var_142 = ((struct __insieme_job_31*)args)->var_142;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_576 = ((struct __insieme_job_31*)args)->var_576;
	__insieme_type_1 var_577 = ((struct __insieme_job_31*)args)->var_577;
	short var_578 = ((struct __insieme_job_31*)args)->var_578;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_32_ctr((__insieme_closure_32*)alloca(sizeof(__insieme_closure_32)),(__insieme_funType_33*)__insieme_funType_33_ctr((__insieme_funType_33*)alloca(sizeof(__insieme_funType_33)),&__insieme_supp_34_wrap), var_578, var_141, var_142));
}

// start code fragment :: Definition of privateMemArg ... type: ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int privateMemArg(short var_140, __insieme_type_1 var_133, __insieme_type_1 var_145){
	__insieme_type_1 var_144 = __insieme_supp_30(var_133, var_145);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_31)),&((struct __insieme_job_31){sizeof(struct __insieme_job_31),((((1*var_144.data[0])*var_144.data[1])*var_144.data[2])),((((1*var_144.data[0])*var_144.data[1])*var_144.data[2])),&fun__insieme_job_31,var_144,var_145,var_144,var_145,var_140}),sizeof(struct __insieme_job_31)));
	mergeAll();
	return 0;
}
static int privateMemArg_wrap(void* _closure, short var_140, __insieme_type_1 var_133, __insieme_type_1 var_145) { return privateMemArg(var_140, var_133, var_145); }

// start code fragment :: Definition of __insieme_supp_40 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_40(__insieme_type_1 var_525, __insieme_type_1 var_526) { return ((__insieme_type_1){{(var_525.data[0]/var_526.data[0]), (var_525.data[1]/var_526.data[1]), (var_525.data[2]/var_526.data[2])}}); }
static __insieme_type_1 __insieme_supp_40_wrap(void* _closure, __insieme_type_1 var_525, __insieme_type_1 var_526) { return __insieme_supp_40(var_525, var_526); }

// start code fragment :: struct for job __insieme_job_41 //
struct __insieme_job_41 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_163;
	float* var_164;
	int* var_165;
	__insieme_type_1 var_169;
	__insieme_type_1 var_170;
	// ---- additional captured variables -----
	__insieme_type_1 var_581;
	float* var_582;
	float* var_583;
	int* var_584;
	__insieme_type_1 var_585;
	float* var_586;
	unsigned int var_587;
	int var_588;
};

// start code fragment :: Definitions for function type: __insieme_funType_43 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_43 <-> ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_43 { 
    void(*call)(void*, float*, float*, int*, float*, unsigned int, int, __insieme_type_1, __insieme_type_1);
} __insieme_funType_43;

// Type safe function for invoking closures of type __insieme_funType_43
static inline void __insieme_funType_43_call(__insieme_funType_43* closure, float* p1, float* p2, int* p3, float* p4, unsigned int p5, int p6, __insieme_type_1 p7, __insieme_type_1 p8) {  closure->call(closure, p1,p2,p3,p4,p5,p6,p7,p8); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_43* __insieme_funType_43_ctr(__insieme_funType_43* target, void(*call)(void*, float*, float*, int*, float*, unsigned int, int, __insieme_type_1, __insieme_type_1)) {
	*target = (__insieme_funType_43){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_42 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_42 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_42;

static inline void __insieme_closure_42_bind(__insieme_closure_42* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_42* __insieme_closure_42_ctr(__insieme_closure_42* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_42){&__insieme_closure_42_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_45 //
struct __insieme_job_45 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_150;
	float* var_151;
	int* var_152;
	float* var_153;
	__insieme_type_1 var_156;
	// ---- additional captured variables -----
	__insieme_type_1 var_589;
	float* var_590;
	float* var_591;
	int* var_592;
	float* var_593;
	unsigned int var_594;
	int var_595;
};

// start code fragment :: Definitions for function type: __insieme_funType_47 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_47 <-> ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_47 { 
    void(*call)(void*, float*, float*, int*, float*, unsigned int, int, __insieme_type_1);
} __insieme_funType_47;

// Type safe function for invoking closures of type __insieme_funType_47
static inline void __insieme_funType_47_call(__insieme_funType_47* closure, float* p1, float* p2, int* p3, float* p4, unsigned int p5, int p6, __insieme_type_1 p7) {  closure->call(closure, p1,p2,p3,p4,p5,p6,p7); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_47* __insieme_funType_47_ctr(__insieme_funType_47* target, void(*call)(void*, float*, float*, int*, float*, unsigned int, int, __insieme_type_1)) {
	*target = (__insieme_funType_47){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_46 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_46 {
    void(*call)(void*);
    __insieme_funType_47* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
} __insieme_closure_46;

static inline void __insieme_closure_46_bind(__insieme_closure_46* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7); }

static inline __insieme_closure_46* __insieme_closure_46_ctr(__insieme_closure_46* closure, __insieme_funType_47* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7) {
    *closure = (__insieme_closure_46){&__insieme_closure_46_bind, nested, c1, c2, c3, c4, c5, c6, c7};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_48 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit) //
void __insieme_supp_48(float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_149) { (((ga[((unsigned int)(0))])) = ((float)(((gb[((unsigned int)(0))]))))); }
static void __insieme_supp_48_wrap(void* _closure, float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_149) { __insieme_supp_48(c, ga, gb, l, pa, pb, var_149); }

// start code fragment :: function for job __insieme_job_45 //
void fun__insieme_job_45(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_150 = ((struct __insieme_job_45*)args)->var_150;
	float* var_151 = ((struct __insieme_job_45*)args)->var_151;
	int* var_152 = ((struct __insieme_job_45*)args)->var_152;
	float* var_153 = ((struct __insieme_job_45*)args)->var_153;
	__insieme_type_1 var_156 = ((struct __insieme_job_45*)args)->var_156;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_589 = ((struct __insieme_job_45*)args)->var_589;
	float* var_590 = ((struct __insieme_job_45*)args)->var_590;
	float* var_591 = ((struct __insieme_job_45*)args)->var_591;
	int* var_592 = ((struct __insieme_job_45*)args)->var_592;
	float* var_593 = ((struct __insieme_job_45*)args)->var_593;
	unsigned int var_594 = ((struct __insieme_job_45*)args)->var_594;
	int var_595 = ((struct __insieme_job_45*)args)->var_595;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_46_ctr((__insieme_closure_46*)alloca(sizeof(__insieme_closure_46)),(__insieme_funType_47*)__insieme_funType_47_ctr((__insieme_funType_47*)alloca(sizeof(__insieme_funType_47)),&__insieme_supp_48_wrap), var_150, var_151, var_152, var_153, var_594, var_595, var_156));
}

// start code fragment :: Definition of __insieme_supp_44 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_44(float* var_158, float* var_159, int* var_160, float* var_161, unsigned int var_154, int var_155, __insieme_type_1 var_148, __insieme_type_1 var_162){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_45)),&((struct __insieme_job_45){sizeof(struct __insieme_job_45),((((1*var_162.data[0])*var_162.data[1])*var_162.data[2])),((((1*var_162.data[0])*var_162.data[1])*var_162.data[2])),&fun__insieme_job_45,var_158,var_159,var_160,var_161,var_162,var_162,var_158,var_159,var_160,var_161,var_154,var_155}),sizeof(struct __insieme_job_45)));
	mergeAll();
}
static void __insieme_supp_44_wrap(void* _closure, float* var_158, float* var_159, int* var_160, float* var_161, unsigned int var_154, int var_155, __insieme_type_1 var_148, __insieme_type_1 var_162) { __insieme_supp_44(var_158, var_159, var_160, var_161, var_154, var_155, var_148, var_162); }

// start code fragment :: function for job __insieme_job_41 //
void fun__insieme_job_41(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_163 = ((struct __insieme_job_41*)args)->var_163;
	float* var_164 = ((struct __insieme_job_41*)args)->var_164;
	int* var_165 = ((struct __insieme_job_41*)args)->var_165;
	__insieme_type_1 var_169 = ((struct __insieme_job_41*)args)->var_169;
	__insieme_type_1 var_170 = ((struct __insieme_job_41*)args)->var_170;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_581 = ((struct __insieme_job_41*)args)->var_581;
	float* var_582 = ((struct __insieme_job_41*)args)->var_582;
	float* var_583 = ((struct __insieme_job_41*)args)->var_583;
	int* var_584 = ((struct __insieme_job_41*)args)->var_584;
	__insieme_type_1 var_585 = ((struct __insieme_job_41*)args)->var_585;
	float* var_586 = ((struct __insieme_job_41*)args)->var_586;
	unsigned int var_587 = ((struct __insieme_job_41*)args)->var_587;
	int var_588 = ((struct __insieme_job_41*)args)->var_588;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_42_ctr((__insieme_closure_42*)alloca(sizeof(__insieme_closure_42)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_44_wrap), var_163, var_164, var_165, var_586, var_587, var_588, var_169, var_170));
}

// start code fragment :: Definition of allMemArg ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int allMemArg(float* var_172, float* var_173, int* var_174, float* var_166, unsigned int var_167, int var_168, __insieme_type_1 var_147, __insieme_type_1 var_176){
	__insieme_type_1 var_175 = __insieme_supp_40(var_147, var_176);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_41)),&((struct __insieme_job_41){sizeof(struct __insieme_job_41),((((1*var_175.data[0])*var_175.data[1])*var_175.data[2])),((((1*var_175.data[0])*var_175.data[1])*var_175.data[2])),&fun__insieme_job_41,var_172,var_173,var_174,var_175,var_176,var_175,var_172,var_173,var_174,var_176,var_166,var_167,var_168}),sizeof(struct __insieme_job_41)));
	mergeAll();
	return 0;
}
static int allMemArg_wrap(void* _closure, float* var_172, float* var_173, int* var_174, float* var_166, unsigned int var_167, int var_168, __insieme_type_1 var_147, __insieme_type_1 var_176) { return allMemArg(var_172, var_173, var_174, var_166, var_167, var_168, var_147, var_176); }

// start code fragment :: Definition of __insieme_supp_49 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_49(__insieme_type_1 var_529, __insieme_type_1 var_530) { return ((__insieme_type_1){{(var_529.data[0]/var_530.data[0]), (var_529.data[1]/var_530.data[1]), (var_529.data[2]/var_530.data[2])}}); }
static __insieme_type_1 __insieme_supp_49_wrap(void* _closure, __insieme_type_1 var_529, __insieme_type_1 var_530) { return __insieme_supp_49(var_529, var_530); }

// start code fragment :: struct for job __insieme_job_50 //
struct __insieme_job_50 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_194;
	float* var_195;
	int* var_196;
	__insieme_type_1 var_200;
	__insieme_type_1 var_201;
	// ---- additional captured variables -----
	__insieme_type_1 var_596;
	float* var_597;
	float* var_598;
	int* var_599;
	__insieme_type_1 var_600;
	float* var_601;
	unsigned int var_602;
	int var_603;
};

// start code fragment :: Definition of __insieme_closure_51 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_51 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_51;

static inline void __insieme_closure_51_bind(__insieme_closure_51* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_51* __insieme_closure_51_ctr(__insieme_closure_51* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_51){&__insieme_closure_51_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_53 //
struct __insieme_job_53 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_181;
	float* var_182;
	int* var_183;
	float* var_184;
	__insieme_type_1 var_187;
	// ---- additional captured variables -----
	__insieme_type_1 var_604;
	float* var_605;
	float* var_606;
	int* var_607;
	float* var_608;
	unsigned int var_609;
	int var_610;
};

// start code fragment :: Definition of __insieme_closure_54 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_54 {
    void(*call)(void*);
    __insieme_funType_47* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
} __insieme_closure_54;

static inline void __insieme_closure_54_bind(__insieme_closure_54* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7); }

static inline __insieme_closure_54* __insieme_closure_54_ctr(__insieme_closure_54* closure, __insieme_funType_47* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7) {
    *closure = (__insieme_closure_54){&__insieme_closure_54_bind, nested, c1, c2, c3, c4, c5, c6, c7};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_55 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit) //
void __insieme_supp_55(float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_180){
	(((l[((unsigned int)(((gb[((unsigned int)(0))]))))])) = 3.3f);
	(((ga[pa])) = (((c[((unsigned int)(1))]))*((l[((unsigned int)(((gb[((unsigned int)(0))]))))]))));
}
static void __insieme_supp_55_wrap(void* _closure, float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_180) { __insieme_supp_55(c, ga, gb, l, pa, pb, var_180); }

// start code fragment :: function for job __insieme_job_53 //
void fun__insieme_job_53(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_181 = ((struct __insieme_job_53*)args)->var_181;
	float* var_182 = ((struct __insieme_job_53*)args)->var_182;
	int* var_183 = ((struct __insieme_job_53*)args)->var_183;
	float* var_184 = ((struct __insieme_job_53*)args)->var_184;
	__insieme_type_1 var_187 = ((struct __insieme_job_53*)args)->var_187;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_604 = ((struct __insieme_job_53*)args)->var_604;
	float* var_605 = ((struct __insieme_job_53*)args)->var_605;
	float* var_606 = ((struct __insieme_job_53*)args)->var_606;
	int* var_607 = ((struct __insieme_job_53*)args)->var_607;
	float* var_608 = ((struct __insieme_job_53*)args)->var_608;
	unsigned int var_609 = ((struct __insieme_job_53*)args)->var_609;
	int var_610 = ((struct __insieme_job_53*)args)->var_610;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_54_ctr((__insieme_closure_54*)alloca(sizeof(__insieme_closure_54)),(__insieme_funType_47*)__insieme_funType_47_ctr((__insieme_funType_47*)alloca(sizeof(__insieme_funType_47)),&__insieme_supp_55_wrap), var_181, var_182, var_183, var_184, var_609, var_610, var_187));
}

// start code fragment :: Definition of __insieme_supp_52 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_52(float* var_189, float* var_190, int* var_191, float* var_192, unsigned int var_185, int var_186, __insieme_type_1 var_179, __insieme_type_1 var_193){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_53)),&((struct __insieme_job_53){sizeof(struct __insieme_job_53),((((1*var_193.data[0])*var_193.data[1])*var_193.data[2])),((((1*var_193.data[0])*var_193.data[1])*var_193.data[2])),&fun__insieme_job_53,var_189,var_190,var_191,var_192,var_193,var_193,var_189,var_190,var_191,var_192,var_185,var_186}),sizeof(struct __insieme_job_53)));
	mergeAll();
}
static void __insieme_supp_52_wrap(void* _closure, float* var_189, float* var_190, int* var_191, float* var_192, unsigned int var_185, int var_186, __insieme_type_1 var_179, __insieme_type_1 var_193) { __insieme_supp_52(var_189, var_190, var_191, var_192, var_185, var_186, var_179, var_193); }

// start code fragment :: function for job __insieme_job_50 //
void fun__insieme_job_50(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_194 = ((struct __insieme_job_50*)args)->var_194;
	float* var_195 = ((struct __insieme_job_50*)args)->var_195;
	int* var_196 = ((struct __insieme_job_50*)args)->var_196;
	__insieme_type_1 var_200 = ((struct __insieme_job_50*)args)->var_200;
	__insieme_type_1 var_201 = ((struct __insieme_job_50*)args)->var_201;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_596 = ((struct __insieme_job_50*)args)->var_596;
	float* var_597 = ((struct __insieme_job_50*)args)->var_597;
	float* var_598 = ((struct __insieme_job_50*)args)->var_598;
	int* var_599 = ((struct __insieme_job_50*)args)->var_599;
	__insieme_type_1 var_600 = ((struct __insieme_job_50*)args)->var_600;
	float* var_601 = ((struct __insieme_job_50*)args)->var_601;
	unsigned int var_602 = ((struct __insieme_job_50*)args)->var_602;
	int var_603 = ((struct __insieme_job_50*)args)->var_603;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_51_ctr((__insieme_closure_51*)alloca(sizeof(__insieme_closure_51)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_52_wrap), var_194, var_195, var_196, var_601, var_602, var_603, var_200, var_201));
}

// start code fragment :: Definition of simpleCalc ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int simpleCalc(float* var_203, float* var_204, int* var_205, float* var_197, unsigned int var_198, int var_199, __insieme_type_1 var_178, __insieme_type_1 var_207){
	__insieme_type_1 var_206 = __insieme_supp_49(var_178, var_207);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_50)),&((struct __insieme_job_50){sizeof(struct __insieme_job_50),((((1*var_206.data[0])*var_206.data[1])*var_206.data[2])),((((1*var_206.data[0])*var_206.data[1])*var_206.data[2])),&fun__insieme_job_50,var_203,var_204,var_205,var_206,var_207,var_206,var_203,var_204,var_205,var_207,var_197,var_198,var_199}),sizeof(struct __insieme_job_50)));
	mergeAll();
	return 0;
}
static int simpleCalc_wrap(void* _closure, float* var_203, float* var_204, int* var_205, float* var_197, unsigned int var_198, int var_199, __insieme_type_1 var_178, __insieme_type_1 var_207) { return simpleCalc(var_203, var_204, var_205, var_197, var_198, var_199, var_178, var_207); }

// start code fragment :: Definition of __insieme_supp_56 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_56(__insieme_type_1 var_533, __insieme_type_1 var_534) { return ((__insieme_type_1){{(var_533.data[0]/var_534.data[0]), (var_533.data[1]/var_534.data[1]), (var_533.data[2]/var_534.data[2])}}); }
static __insieme_type_1 __insieme_supp_56_wrap(void* _closure, __insieme_type_1 var_533, __insieme_type_1 var_534) { return __insieme_supp_56(var_533, var_534); }

// start code fragment :: struct for job __insieme_job_57 //
struct __insieme_job_57 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_233;
	float* var_234;
	int* var_235;
	__insieme_type_1 var_239;
	__insieme_type_1 var_240;
	// ---- additional captured variables -----
	__insieme_type_1 var_611;
	float* var_612;
	float* var_613;
	int* var_614;
	__insieme_type_1 var_615;
	float* var_616;
	unsigned int var_617;
	int var_618;
};

// start code fragment :: Definition of __insieme_closure_58 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_58 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_58;

static inline void __insieme_closure_58_bind(__insieme_closure_58* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_58* __insieme_closure_58_ctr(__insieme_closure_58* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_58){&__insieme_closure_58_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_60 //
struct __insieme_job_60 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_218;
	float* var_219;
	int* var_220;
	float* var_221;
	__insieme_type_1 var_224;
	__insieme_type_1 var_225;
	// ---- additional captured variables -----
	__insieme_type_1 var_619;
	float* var_620;
	float* var_621;
	int* var_622;
	float* var_623;
	__insieme_type_1 var_624;
	unsigned int var_625;
	int var_626;
};

// start code fragment :: Definition of __insieme_closure_61 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_61 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_61;

static inline void __insieme_closure_61_bind(__insieme_closure_61* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_61* __insieme_closure_61_ctr(__insieme_closure_61* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_61){&__insieme_closure_61_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_63 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_63(unsigned int var_212, __insieme_type_1 var_214, __insieme_type_1 var_213){
	unsigned int var_215 = isbr_getThreadId(0);
	unsigned int var_216 = isbr_getThreadId(1);
	switch(var_212) {
	case 0:
		return (((var_215/var_213.data[2])/var_213.data[1])+(var_213.data[0]*((var_216/var_214.data[2])/var_214.data[1]))); break;
	case 1:
		return (((var_215/var_213.data[2])%var_213.data[1])+(var_213.data[1]*((var_216/var_214.data[2])%var_214.data[1]))); break;
	case 2:
		return ((var_215%var_213.data[2])+(var_213.data[2]*((var_216/var_214.data[2])%var_214.data[1]))); break;
	};
}
static unsigned int __insieme_supp_63_wrap(void* _closure, unsigned int var_212, __insieme_type_1 var_214, __insieme_type_1 var_213) { return __insieme_supp_63(var_212, var_214, var_213); }

// start code fragment :: Definition of __insieme_supp_62 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_62(float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_210, __insieme_type_1 var_211){
	unsigned int gid = __insieme_supp_63(((unsigned int)(0)), var_210, var_211);
	(((ga[(gid)])) = ((float)((gid))));
}
static void __insieme_supp_62_wrap(void* _closure, float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_210, __insieme_type_1 var_211) { __insieme_supp_62(c, ga, gb, l, pa, pb, var_210, var_211); }

// start code fragment :: function for job __insieme_job_60 //
void fun__insieme_job_60(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_218 = ((struct __insieme_job_60*)args)->var_218;
	float* var_219 = ((struct __insieme_job_60*)args)->var_219;
	int* var_220 = ((struct __insieme_job_60*)args)->var_220;
	float* var_221 = ((struct __insieme_job_60*)args)->var_221;
	__insieme_type_1 var_224 = ((struct __insieme_job_60*)args)->var_224;
	__insieme_type_1 var_225 = ((struct __insieme_job_60*)args)->var_225;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_619 = ((struct __insieme_job_60*)args)->var_619;
	float* var_620 = ((struct __insieme_job_60*)args)->var_620;
	float* var_621 = ((struct __insieme_job_60*)args)->var_621;
	int* var_622 = ((struct __insieme_job_60*)args)->var_622;
	float* var_623 = ((struct __insieme_job_60*)args)->var_623;
	__insieme_type_1 var_624 = ((struct __insieme_job_60*)args)->var_624;
	unsigned int var_625 = ((struct __insieme_job_60*)args)->var_625;
	int var_626 = ((struct __insieme_job_60*)args)->var_626;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_61_ctr((__insieme_closure_61*)alloca(sizeof(__insieme_closure_61)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_62_wrap), var_218, var_219, var_220, var_221, var_625, var_626, var_224, var_225));
}

// start code fragment :: Definition of __insieme_supp_59 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_59(float* var_227, float* var_228, int* var_229, float* var_230, unsigned int var_222, int var_223, __insieme_type_1 var_231, __insieme_type_1 var_232){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_60)),&((struct __insieme_job_60){sizeof(struct __insieme_job_60),((((1*var_232.data[0])*var_232.data[1])*var_232.data[2])),((((1*var_232.data[0])*var_232.data[1])*var_232.data[2])),&fun__insieme_job_60,var_227,var_228,var_229,var_230,var_231,var_232,var_232,var_227,var_228,var_229,var_230,var_231,var_222,var_223}),sizeof(struct __insieme_job_60)));
	mergeAll();
}
static void __insieme_supp_59_wrap(void* _closure, float* var_227, float* var_228, int* var_229, float* var_230, unsigned int var_222, int var_223, __insieme_type_1 var_231, __insieme_type_1 var_232) { __insieme_supp_59(var_227, var_228, var_229, var_230, var_222, var_223, var_231, var_232); }

// start code fragment :: function for job __insieme_job_57 //
void fun__insieme_job_57(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_233 = ((struct __insieme_job_57*)args)->var_233;
	float* var_234 = ((struct __insieme_job_57*)args)->var_234;
	int* var_235 = ((struct __insieme_job_57*)args)->var_235;
	__insieme_type_1 var_239 = ((struct __insieme_job_57*)args)->var_239;
	__insieme_type_1 var_240 = ((struct __insieme_job_57*)args)->var_240;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_611 = ((struct __insieme_job_57*)args)->var_611;
	float* var_612 = ((struct __insieme_job_57*)args)->var_612;
	float* var_613 = ((struct __insieme_job_57*)args)->var_613;
	int* var_614 = ((struct __insieme_job_57*)args)->var_614;
	__insieme_type_1 var_615 = ((struct __insieme_job_57*)args)->var_615;
	float* var_616 = ((struct __insieme_job_57*)args)->var_616;
	unsigned int var_617 = ((struct __insieme_job_57*)args)->var_617;
	int var_618 = ((struct __insieme_job_57*)args)->var_618;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_58_ctr((__insieme_closure_58*)alloca(sizeof(__insieme_closure_58)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_59_wrap), var_233, var_234, var_235, var_616, var_617, var_618, var_239, var_240));
}

// start code fragment :: Definition of getId ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int getId(float* var_242, float* var_243, int* var_244, float* var_236, unsigned int var_237, int var_238, __insieme_type_1 var_209, __insieme_type_1 var_246){
	__insieme_type_1 var_245 = __insieme_supp_56(var_209, var_246);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_57)),&((struct __insieme_job_57){sizeof(struct __insieme_job_57),((((1*var_245.data[0])*var_245.data[1])*var_245.data[2])),((((1*var_245.data[0])*var_245.data[1])*var_245.data[2])),&fun__insieme_job_57,var_242,var_243,var_244,var_245,var_246,var_245,var_242,var_243,var_244,var_246,var_236,var_237,var_238}),sizeof(struct __insieme_job_57)));
	mergeAll();
	return 0;
}
static int getId_wrap(void* _closure, float* var_242, float* var_243, int* var_244, float* var_236, unsigned int var_237, int var_238, __insieme_type_1 var_209, __insieme_type_1 var_246) { return getId(var_242, var_243, var_244, var_236, var_237, var_238, var_209, var_246); }

// start code fragment :: Definition of __insieme_supp_64 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_64(__insieme_type_1 var_537, __insieme_type_1 var_538) { return ((__insieme_type_1){{(var_537.data[0]/var_538.data[0]), (var_537.data[1]/var_538.data[1]), (var_537.data[2]/var_538.data[2])}}); }
static __insieme_type_1 __insieme_supp_64_wrap(void* _closure, __insieme_type_1 var_537, __insieme_type_1 var_538) { return __insieme_supp_64(var_537, var_538); }

// start code fragment :: struct for job __insieme_job_65 //
struct __insieme_job_65 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_268;
	float* var_269;
	int* var_270;
	__insieme_type_1 var_274;
	__insieme_type_1 var_275;
	__insieme_type_1 var_276;
	// ---- additional captured variables -----
	__insieme_type_1 var_627;
	float* var_628;
	float* var_629;
	int* var_630;
	__insieme_type_1 var_631;
	__insieme_type_1 var_632;
	float* var_633;
	unsigned int var_634;
	int var_635;
};

// start code fragment :: Definitions for function type: __insieme_funType_67 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_67 <-> ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_67 { 
    void(*call)(void*, float*, float*, int*, float*, unsigned int, int, __insieme_type_1, __insieme_type_1, __insieme_type_1);
} __insieme_funType_67;

// Type safe function for invoking closures of type __insieme_funType_67
static inline void __insieme_funType_67_call(__insieme_funType_67* closure, float* p1, float* p2, int* p3, float* p4, unsigned int p5, int p6, __insieme_type_1 p7, __insieme_type_1 p8, __insieme_type_1 p9) {  closure->call(closure, p1,p2,p3,p4,p5,p6,p7,p8,p9); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_67* __insieme_funType_67_ctr(__insieme_funType_67* target, void(*call)(void*, float*, float*, int*, float*, unsigned int, int, __insieme_type_1, __insieme_type_1, __insieme_type_1)) {
	*target = (__insieme_funType_67){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_66 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_66 {
    void(*call)(void*);
    __insieme_funType_67* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
    __insieme_type_1 c9;
} __insieme_closure_66;

static inline void __insieme_closure_66_bind(__insieme_closure_66* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8,closure->c9); }

static inline __insieme_closure_66* __insieme_closure_66_ctr(__insieme_closure_66* closure, __insieme_funType_67* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8, __insieme_type_1 c9) {
    *closure = (__insieme_closure_66){&__insieme_closure_66_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8, c9};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_69 //
struct __insieme_job_69 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_251;
	float* var_252;
	int* var_253;
	float* var_254;
	__insieme_type_1 var_257;
	__insieme_type_1 var_258;
	__insieme_type_1 var_259;
	// ---- additional captured variables -----
	__insieme_type_1 var_636;
	float* var_637;
	float* var_638;
	int* var_639;
	float* var_640;
	__insieme_type_1 var_641;
	__insieme_type_1 var_642;
	unsigned int var_643;
	int var_644;
};

// start code fragment :: Definition of __insieme_closure_70 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_70 {
    void(*call)(void*);
    __insieme_funType_67* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
    __insieme_type_1 c9;
} __insieme_closure_70;

static inline void __insieme_closure_70_bind(__insieme_closure_70* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8,closure->c9); }

static inline __insieme_closure_70* __insieme_closure_70_ctr(__insieme_closure_70* closure, __insieme_funType_67* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8, __insieme_type_1 c9) {
    *closure = (__insieme_closure_70){&__insieme_closure_70_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8, c9};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_71 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_71(float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_248, __insieme_type_1 var_249, __insieme_type_1 var_250){
	(((ga[((unsigned int)(0))])) = ((float)(var_248.data[((unsigned int)(0))])));
	(((ga[((unsigned int)(1))])) = ((float)(var_248.data[((unsigned int)(1))])));
	(((ga[((unsigned int)(2))])) = ((float)(var_248.data[((unsigned int)(2))])));
	(((ga[((unsigned int)(3))])) = ((float)(var_250.data[((unsigned int)(0))])));
	(((ga[((unsigned int)(4))])) = ((float)(var_250.data[((unsigned int)(1))])));
	(((ga[((unsigned int)(5))])) = ((float)(var_250.data[((unsigned int)(2))])));
	(((ga[((unsigned int)(6))])) = ((float)(var_249.data[((unsigned int)(0))])));
	(((ga[((unsigned int)(7))])) = ((float)(var_249.data[((unsigned int)(1))])));
	(((ga[((unsigned int)(8))])) = ((float)(var_249.data[((unsigned int)(2))])));
}
static void __insieme_supp_71_wrap(void* _closure, float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_248, __insieme_type_1 var_249, __insieme_type_1 var_250) { __insieme_supp_71(c, ga, gb, l, pa, pb, var_248, var_249, var_250); }

// start code fragment :: function for job __insieme_job_69 //
void fun__insieme_job_69(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_251 = ((struct __insieme_job_69*)args)->var_251;
	float* var_252 = ((struct __insieme_job_69*)args)->var_252;
	int* var_253 = ((struct __insieme_job_69*)args)->var_253;
	float* var_254 = ((struct __insieme_job_69*)args)->var_254;
	__insieme_type_1 var_257 = ((struct __insieme_job_69*)args)->var_257;
	__insieme_type_1 var_258 = ((struct __insieme_job_69*)args)->var_258;
	__insieme_type_1 var_259 = ((struct __insieme_job_69*)args)->var_259;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_636 = ((struct __insieme_job_69*)args)->var_636;
	float* var_637 = ((struct __insieme_job_69*)args)->var_637;
	float* var_638 = ((struct __insieme_job_69*)args)->var_638;
	int* var_639 = ((struct __insieme_job_69*)args)->var_639;
	float* var_640 = ((struct __insieme_job_69*)args)->var_640;
	__insieme_type_1 var_641 = ((struct __insieme_job_69*)args)->var_641;
	__insieme_type_1 var_642 = ((struct __insieme_job_69*)args)->var_642;
	unsigned int var_643 = ((struct __insieme_job_69*)args)->var_643;
	int var_644 = ((struct __insieme_job_69*)args)->var_644;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_70_ctr((__insieme_closure_70*)alloca(sizeof(__insieme_closure_70)),(__insieme_funType_67*)__insieme_funType_67_ctr((__insieme_funType_67*)alloca(sizeof(__insieme_funType_67)),&__insieme_supp_71_wrap), var_251, var_252, var_253, var_254, var_643, var_644, var_257, var_258, var_259));
}

// start code fragment :: Definition of __insieme_supp_68 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_68(float* var_261, float* var_262, int* var_263, float* var_264, unsigned int var_255, int var_256, __insieme_type_1 var_265, __insieme_type_1 var_266, __insieme_type_1 var_267){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_69)),&((struct __insieme_job_69){sizeof(struct __insieme_job_69),((((1*var_267.data[0])*var_267.data[1])*var_267.data[2])),((((1*var_267.data[0])*var_267.data[1])*var_267.data[2])),&fun__insieme_job_69,var_261,var_262,var_263,var_264,var_265,var_266,var_267,var_267,var_261,var_262,var_263,var_264,var_265,var_266,var_255,var_256}),sizeof(struct __insieme_job_69)));
	mergeAll();
}
static void __insieme_supp_68_wrap(void* _closure, float* var_261, float* var_262, int* var_263, float* var_264, unsigned int var_255, int var_256, __insieme_type_1 var_265, __insieme_type_1 var_266, __insieme_type_1 var_267) { __insieme_supp_68(var_261, var_262, var_263, var_264, var_255, var_256, var_265, var_266, var_267); }

// start code fragment :: function for job __insieme_job_65 //
void fun__insieme_job_65(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_268 = ((struct __insieme_job_65*)args)->var_268;
	float* var_269 = ((struct __insieme_job_65*)args)->var_269;
	int* var_270 = ((struct __insieme_job_65*)args)->var_270;
	__insieme_type_1 var_274 = ((struct __insieme_job_65*)args)->var_274;
	__insieme_type_1 var_275 = ((struct __insieme_job_65*)args)->var_275;
	__insieme_type_1 var_276 = ((struct __insieme_job_65*)args)->var_276;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_627 = ((struct __insieme_job_65*)args)->var_627;
	float* var_628 = ((struct __insieme_job_65*)args)->var_628;
	float* var_629 = ((struct __insieme_job_65*)args)->var_629;
	int* var_630 = ((struct __insieme_job_65*)args)->var_630;
	__insieme_type_1 var_631 = ((struct __insieme_job_65*)args)->var_631;
	__insieme_type_1 var_632 = ((struct __insieme_job_65*)args)->var_632;
	float* var_633 = ((struct __insieme_job_65*)args)->var_633;
	unsigned int var_634 = ((struct __insieme_job_65*)args)->var_634;
	int var_635 = ((struct __insieme_job_65*)args)->var_635;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_66_ctr((__insieme_closure_66*)alloca(sizeof(__insieme_closure_66)),(__insieme_funType_67*)__insieme_funType_67_ctr((__insieme_funType_67*)alloca(sizeof(__insieme_funType_67)),&__insieme_supp_68_wrap), var_268, var_269, var_270, var_633, var_634, var_635, var_274, var_275, var_276));
}

// start code fragment :: Definition of getSize ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int getSize(float* var_278, float* var_279, int* var_280, float* var_271, unsigned int var_272, int var_273, __insieme_type_1 var_281, __insieme_type_1 var_283){
	__insieme_type_1 var_282 = __insieme_supp_64(var_281, var_283);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_65)),&((struct __insieme_job_65){sizeof(struct __insieme_job_65),((((1*var_282.data[0])*var_282.data[1])*var_282.data[2])),((((1*var_282.data[0])*var_282.data[1])*var_282.data[2])),&fun__insieme_job_65,var_278,var_279,var_280,var_281,var_282,var_283,var_282,var_278,var_279,var_280,var_281,var_283,var_271,var_272,var_273}),sizeof(struct __insieme_job_65)));
	mergeAll();
	return 0;
}
static int getSize_wrap(void* _closure, float* var_278, float* var_279, int* var_280, float* var_271, unsigned int var_272, int var_273, __insieme_type_1 var_281, __insieme_type_1 var_283) { return getSize(var_278, var_279, var_280, var_271, var_272, var_273, var_281, var_283); }

// start code fragment :: Definition of __insieme_supp_72 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_72(__insieme_type_1 var_541, __insieme_type_1 var_542) { return ((__insieme_type_1){{(var_541.data[0]/var_542.data[0]), (var_541.data[1]/var_542.data[1]), (var_541.data[2]/var_542.data[2])}}); }
static __insieme_type_1 __insieme_supp_72_wrap(void* _closure, __insieme_type_1 var_541, __insieme_type_1 var_542) { return __insieme_supp_72(var_541, var_542); }

// start code fragment :: struct for job __insieme_job_73 //
struct __insieme_job_73 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_301;
	float* var_302;
	int* var_303;
	__insieme_type_1 var_307;
	__insieme_type_1 var_308;
	// ---- additional captured variables -----
	__insieme_type_1 var_645;
	float* var_646;
	float* var_647;
	int* var_648;
	__insieme_type_1 var_649;
	float* var_650;
	unsigned int var_651;
	int var_652;
};

// start code fragment :: Definition of __insieme_closure_74 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_74 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_74;

static inline void __insieme_closure_74_bind(__insieme_closure_74* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_74* __insieme_closure_74_ctr(__insieme_closure_74* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_74){&__insieme_closure_74_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_76 //
struct __insieme_job_76 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_288;
	float* var_289;
	int* var_290;
	float* var_291;
	__insieme_type_1 var_294;
	// ---- additional captured variables -----
	__insieme_type_1 var_653;
	float* var_654;
	float* var_655;
	int* var_656;
	float* var_657;
	unsigned int var_658;
	int var_659;
};

// start code fragment :: Definition of __insieme_closure_77 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_77 {
    void(*call)(void*);
    __insieme_funType_47* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
} __insieme_closure_77;

static inline void __insieme_closure_77_bind(__insieme_closure_77* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7); }

static inline __insieme_closure_77* __insieme_closure_77_ctr(__insieme_closure_77* closure, __insieme_funType_47* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7) {
    *closure = (__insieme_closure_77){&__insieme_closure_77_bind, nested, c1, c2, c3, c4, c5, c6, c7};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_78 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit) //
void __insieme_supp_78(float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_287) { if((pa==((unsigned int)(pb)))) { (((ga[((unsigned int)(0))])) = ((c[((unsigned int)(0))]))); }; }
static void __insieme_supp_78_wrap(void* _closure, float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_287) { __insieme_supp_78(c, ga, gb, l, pa, pb, var_287); }

// start code fragment :: function for job __insieme_job_76 //
void fun__insieme_job_76(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_288 = ((struct __insieme_job_76*)args)->var_288;
	float* var_289 = ((struct __insieme_job_76*)args)->var_289;
	int* var_290 = ((struct __insieme_job_76*)args)->var_290;
	float* var_291 = ((struct __insieme_job_76*)args)->var_291;
	__insieme_type_1 var_294 = ((struct __insieme_job_76*)args)->var_294;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_653 = ((struct __insieme_job_76*)args)->var_653;
	float* var_654 = ((struct __insieme_job_76*)args)->var_654;
	float* var_655 = ((struct __insieme_job_76*)args)->var_655;
	int* var_656 = ((struct __insieme_job_76*)args)->var_656;
	float* var_657 = ((struct __insieme_job_76*)args)->var_657;
	unsigned int var_658 = ((struct __insieme_job_76*)args)->var_658;
	int var_659 = ((struct __insieme_job_76*)args)->var_659;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_77_ctr((__insieme_closure_77*)alloca(sizeof(__insieme_closure_77)),(__insieme_funType_47*)__insieme_funType_47_ctr((__insieme_funType_47*)alloca(sizeof(__insieme_funType_47)),&__insieme_supp_78_wrap), var_288, var_289, var_290, var_291, var_658, var_659, var_294));
}

// start code fragment :: Definition of __insieme_supp_75 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_75(float* var_296, float* var_297, int* var_298, float* var_299, unsigned int var_292, int var_293, __insieme_type_1 var_286, __insieme_type_1 var_300){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_76)),&((struct __insieme_job_76){sizeof(struct __insieme_job_76),((((1*var_300.data[0])*var_300.data[1])*var_300.data[2])),((((1*var_300.data[0])*var_300.data[1])*var_300.data[2])),&fun__insieme_job_76,var_296,var_297,var_298,var_299,var_300,var_300,var_296,var_297,var_298,var_299,var_292,var_293}),sizeof(struct __insieme_job_76)));
	mergeAll();
}
static void __insieme_supp_75_wrap(void* _closure, float* var_296, float* var_297, int* var_298, float* var_299, unsigned int var_292, int var_293, __insieme_type_1 var_286, __insieme_type_1 var_300) { __insieme_supp_75(var_296, var_297, var_298, var_299, var_292, var_293, var_286, var_300); }

// start code fragment :: function for job __insieme_job_73 //
void fun__insieme_job_73(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_301 = ((struct __insieme_job_73*)args)->var_301;
	float* var_302 = ((struct __insieme_job_73*)args)->var_302;
	int* var_303 = ((struct __insieme_job_73*)args)->var_303;
	__insieme_type_1 var_307 = ((struct __insieme_job_73*)args)->var_307;
	__insieme_type_1 var_308 = ((struct __insieme_job_73*)args)->var_308;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_645 = ((struct __insieme_job_73*)args)->var_645;
	float* var_646 = ((struct __insieme_job_73*)args)->var_646;
	float* var_647 = ((struct __insieme_job_73*)args)->var_647;
	int* var_648 = ((struct __insieme_job_73*)args)->var_648;
	__insieme_type_1 var_649 = ((struct __insieme_job_73*)args)->var_649;
	float* var_650 = ((struct __insieme_job_73*)args)->var_650;
	unsigned int var_651 = ((struct __insieme_job_73*)args)->var_651;
	int var_652 = ((struct __insieme_job_73*)args)->var_652;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_74_ctr((__insieme_closure_74*)alloca(sizeof(__insieme_closure_74)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_75_wrap), var_301, var_302, var_303, var_650, var_651, var_652, var_307, var_308));
}

// start code fragment :: Definition of branch ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int branch(float* var_310, float* var_311, int* var_312, float* var_304, unsigned int var_305, int var_306, __insieme_type_1 var_285, __insieme_type_1 var_314){
	__insieme_type_1 var_313 = __insieme_supp_72(var_285, var_314);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_73)),&((struct __insieme_job_73){sizeof(struct __insieme_job_73),((((1*var_313.data[0])*var_313.data[1])*var_313.data[2])),((((1*var_313.data[0])*var_313.data[1])*var_313.data[2])),&fun__insieme_job_73,var_310,var_311,var_312,var_313,var_314,var_313,var_310,var_311,var_312,var_314,var_304,var_305,var_306}),sizeof(struct __insieme_job_73)));
	mergeAll();
	return 0;
}
static int branch_wrap(void* _closure, float* var_310, float* var_311, int* var_312, float* var_304, unsigned int var_305, int var_306, __insieme_type_1 var_285, __insieme_type_1 var_314) { return branch(var_310, var_311, var_312, var_304, var_305, var_306, var_285, var_314); }

// start code fragment :: Definition of __insieme_supp_79 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_79(__insieme_type_1 var_545, __insieme_type_1 var_546) { return ((__insieme_type_1){{(var_545.data[0]/var_546.data[0]), (var_545.data[1]/var_546.data[1]), (var_545.data[2]/var_546.data[2])}}); }
static __insieme_type_1 __insieme_supp_79_wrap(void* _closure, __insieme_type_1 var_545, __insieme_type_1 var_546) { return __insieme_supp_79(var_545, var_546); }

// start code fragment :: struct for job __insieme_job_80 //
struct __insieme_job_80 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_352;
	float* var_353;
	int* var_354;
	__insieme_type_1 var_358;
	__insieme_type_1 var_359;
	// ---- additional captured variables -----
	__insieme_type_1 var_660;
	float* var_661;
	float* var_662;
	int* var_663;
	__insieme_type_1 var_664;
	float* var_665;
	unsigned int var_666;
	int var_667;
};

// start code fragment :: Definition of __insieme_closure_81 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_81 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_81;

static inline void __insieme_closure_81_bind(__insieme_closure_81* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_81* __insieme_closure_81_ctr(__insieme_closure_81* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_81){&__insieme_closure_81_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_83 //
struct __insieme_job_83 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_337;
	float* var_338;
	int* var_339;
	float* var_340;
	__insieme_type_1 var_343;
	__insieme_type_1 var_344;
	// ---- additional captured variables -----
	__insieme_type_1 var_668;
	float* var_669;
	float* var_670;
	int* var_671;
	float* var_672;
	__insieme_type_1 var_673;
	unsigned int var_674;
	int var_675;
};

// start code fragment :: Definition of __insieme_closure_84 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_84 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_84;

static inline void __insieme_closure_84_bind(__insieme_closure_84* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_84* __insieme_closure_84_ctr(__insieme_closure_84* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_84){&__insieme_closure_84_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_86 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_86(unsigned int var_319, __insieme_type_1 var_321, __insieme_type_1 var_320){
	unsigned int var_322 = isbr_getThreadId(0);
	unsigned int var_323 = isbr_getThreadId(1);
	switch(var_319) {
	case 0:
		return (((var_322/var_320.data[2])/var_320.data[1])+(var_320.data[0]*((var_323/var_321.data[2])/var_321.data[1]))); break;
	case 1:
		return (((var_322/var_320.data[2])%var_320.data[1])+(var_320.data[1]*((var_323/var_321.data[2])%var_321.data[1]))); break;
	case 2:
		return ((var_322%var_320.data[2])+(var_320.data[2]*((var_323/var_321.data[2])%var_321.data[1]))); break;
	};
}
static unsigned int __insieme_supp_86_wrap(void* _closure, unsigned int var_319, __insieme_type_1 var_321, __insieme_type_1 var_320) { return __insieme_supp_86(var_319, var_321, var_320); }

// start code fragment :: Definition of __insieme_supp_87 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_87(unsigned int var_325, __insieme_type_1 var_327, __insieme_type_1 var_326){
	unsigned int var_328 = isbr_getThreadId(0);
	unsigned int var_329 = isbr_getThreadId(1);
	switch(var_325) {
	case 0:
		return (((var_328/var_326.data[2])/var_326.data[1])+(var_326.data[0]*((var_329/var_327.data[2])/var_327.data[1]))); break;
	case 1:
		return (((var_328/var_326.data[2])%var_326.data[1])+(var_326.data[1]*((var_329/var_327.data[2])%var_327.data[1]))); break;
	case 2:
		return ((var_328%var_326.data[2])+(var_326.data[2]*((var_329/var_327.data[2])%var_327.data[1]))); break;
	};
}
static unsigned int __insieme_supp_87_wrap(void* _closure, unsigned int var_325, __insieme_type_1 var_327, __insieme_type_1 var_326) { return __insieme_supp_87(var_325, var_327, var_326); }

// start code fragment :: Definition of __insieme_supp_88 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_88(unsigned int var_331, __insieme_type_1 var_333, __insieme_type_1 var_332){
	unsigned int var_334 = isbr_getThreadId(0);
	unsigned int var_335 = isbr_getThreadId(1);
	switch(var_331) {
	case 0:
		return (((var_334/var_332.data[2])/var_332.data[1])+(var_332.data[0]*((var_335/var_333.data[2])/var_333.data[1]))); break;
	case 1:
		return (((var_334/var_332.data[2])%var_332.data[1])+(var_332.data[1]*((var_335/var_333.data[2])%var_333.data[1]))); break;
	case 2:
		return ((var_334%var_332.data[2])+(var_332.data[2]*((var_335/var_333.data[2])%var_333.data[1]))); break;
	};
}
static unsigned int __insieme_supp_88_wrap(void* _closure, unsigned int var_331, __insieme_type_1 var_333, __insieme_type_1 var_332) { return __insieme_supp_88(var_331, var_333, var_332); }

// start code fragment :: Definition of __insieme_supp_85 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_85(float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_317, __insieme_type_1 var_318){
	__insieme_type_1 gid;
	((((gid).data[((unsigned int)(0))])) = __insieme_supp_86(((unsigned int)(0)), var_317, var_318));
	((((gid).data[((unsigned int)(1))])) = __insieme_supp_87(((unsigned int)(1)), var_317, var_318));
	((((gid).data[((unsigned int)(2))])) = __insieme_supp_88(((unsigned int)(2)), var_317, var_318));
	unsigned int gid3 = (((((((gid).data[((unsigned int)(0))]))*((unsigned int)(((gb[((unsigned int)(2))])))))*((unsigned int)(((gb[((unsigned int)(1))])))))+((((gid).data[((unsigned int)(1))]))*((unsigned int)(((gb[((unsigned int)(2))]))))))+(((gid).data[((unsigned int)(2))])));
	(((ga[(gid3)])) = ((c[(gid3)])));
}
static void __insieme_supp_85_wrap(void* _closure, float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_317, __insieme_type_1 var_318) { __insieme_supp_85(c, ga, gb, l, pa, pb, var_317, var_318); }

// start code fragment :: function for job __insieme_job_83 //
void fun__insieme_job_83(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_337 = ((struct __insieme_job_83*)args)->var_337;
	float* var_338 = ((struct __insieme_job_83*)args)->var_338;
	int* var_339 = ((struct __insieme_job_83*)args)->var_339;
	float* var_340 = ((struct __insieme_job_83*)args)->var_340;
	__insieme_type_1 var_343 = ((struct __insieme_job_83*)args)->var_343;
	__insieme_type_1 var_344 = ((struct __insieme_job_83*)args)->var_344;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_668 = ((struct __insieme_job_83*)args)->var_668;
	float* var_669 = ((struct __insieme_job_83*)args)->var_669;
	float* var_670 = ((struct __insieme_job_83*)args)->var_670;
	int* var_671 = ((struct __insieme_job_83*)args)->var_671;
	float* var_672 = ((struct __insieme_job_83*)args)->var_672;
	__insieme_type_1 var_673 = ((struct __insieme_job_83*)args)->var_673;
	unsigned int var_674 = ((struct __insieme_job_83*)args)->var_674;
	int var_675 = ((struct __insieme_job_83*)args)->var_675;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_84_ctr((__insieme_closure_84*)alloca(sizeof(__insieme_closure_84)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_85_wrap), var_337, var_338, var_339, var_340, var_674, var_675, var_343, var_344));
}

// start code fragment :: Definition of __insieme_supp_82 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_82(float* var_346, float* var_347, int* var_348, float* var_349, unsigned int var_341, int var_342, __insieme_type_1 var_350, __insieme_type_1 var_351){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_83)),&((struct __insieme_job_83){sizeof(struct __insieme_job_83),((((1*var_351.data[0])*var_351.data[1])*var_351.data[2])),((((1*var_351.data[0])*var_351.data[1])*var_351.data[2])),&fun__insieme_job_83,var_346,var_347,var_348,var_349,var_350,var_351,var_351,var_346,var_347,var_348,var_349,var_350,var_341,var_342}),sizeof(struct __insieme_job_83)));
	mergeAll();
}
static void __insieme_supp_82_wrap(void* _closure, float* var_346, float* var_347, int* var_348, float* var_349, unsigned int var_341, int var_342, __insieme_type_1 var_350, __insieme_type_1 var_351) { __insieme_supp_82(var_346, var_347, var_348, var_349, var_341, var_342, var_350, var_351); }

// start code fragment :: function for job __insieme_job_80 //
void fun__insieme_job_80(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_352 = ((struct __insieme_job_80*)args)->var_352;
	float* var_353 = ((struct __insieme_job_80*)args)->var_353;
	int* var_354 = ((struct __insieme_job_80*)args)->var_354;
	__insieme_type_1 var_358 = ((struct __insieme_job_80*)args)->var_358;
	__insieme_type_1 var_359 = ((struct __insieme_job_80*)args)->var_359;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_660 = ((struct __insieme_job_80*)args)->var_660;
	float* var_661 = ((struct __insieme_job_80*)args)->var_661;
	float* var_662 = ((struct __insieme_job_80*)args)->var_662;
	int* var_663 = ((struct __insieme_job_80*)args)->var_663;
	__insieme_type_1 var_664 = ((struct __insieme_job_80*)args)->var_664;
	float* var_665 = ((struct __insieme_job_80*)args)->var_665;
	unsigned int var_666 = ((struct __insieme_job_80*)args)->var_666;
	int var_667 = ((struct __insieme_job_80*)args)->var_667;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_81_ctr((__insieme_closure_81*)alloca(sizeof(__insieme_closure_81)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_82_wrap), var_352, var_353, var_354, var_665, var_666, var_667, var_358, var_359));
}

// start code fragment :: Definition of access3D ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int access3D(float* var_361, float* var_362, int* var_363, float* var_355, unsigned int var_356, int var_357, __insieme_type_1 var_316, __insieme_type_1 var_365){
	__insieme_type_1 var_364 = __insieme_supp_79(var_316, var_365);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_80)),&((struct __insieme_job_80){sizeof(struct __insieme_job_80),((((1*var_364.data[0])*var_364.data[1])*var_364.data[2])),((((1*var_364.data[0])*var_364.data[1])*var_364.data[2])),&fun__insieme_job_80,var_361,var_362,var_363,var_364,var_365,var_364,var_361,var_362,var_363,var_365,var_355,var_356,var_357}),sizeof(struct __insieme_job_80)));
	mergeAll();
	return 0;
}
static int access3D_wrap(void* _closure, float* var_361, float* var_362, int* var_363, float* var_355, unsigned int var_356, int var_357, __insieme_type_1 var_316, __insieme_type_1 var_365) { return access3D(var_361, var_362, var_363, var_355, var_356, var_357, var_316, var_365); }

// start code fragment :: Definition of __insieme_supp_89 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_89(__insieme_type_1 var_549, __insieme_type_1 var_550) { return ((__insieme_type_1){{(var_549.data[0]/var_550.data[0]), (var_549.data[1]/var_550.data[1]), (var_549.data[2]/var_550.data[2])}}); }
static __insieme_type_1 __insieme_supp_89_wrap(void* _closure, __insieme_type_1 var_549, __insieme_type_1 var_550) { return __insieme_supp_89(var_549, var_550); }

// start code fragment :: struct for job __insieme_job_90 //
struct __insieme_job_90 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_397;
	float* var_398;
	int* var_399;
	__insieme_type_1 var_403;
	__insieme_type_1 var_404;
	// ---- additional captured variables -----
	__insieme_type_1 var_676;
	float* var_677;
	float* var_678;
	int* var_679;
	__insieme_type_1 var_680;
	float* var_681;
	unsigned int var_682;
	int var_683;
};

// start code fragment :: Definition of __insieme_closure_91 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_91 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_91;

static inline void __insieme_closure_91_bind(__insieme_closure_91* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_91* __insieme_closure_91_ctr(__insieme_closure_91* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_91){&__insieme_closure_91_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_93 //
struct __insieme_job_93 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_382;
	float* var_383;
	int* var_384;
	float* var_385;
	__insieme_type_1 var_388;
	__insieme_type_1 var_389;
	// ---- additional captured variables -----
	__insieme_type_1 var_684;
	float* var_685;
	float* var_686;
	int* var_687;
	float* var_688;
	__insieme_type_1 var_689;
	unsigned int var_690;
	int var_691;
};

// start code fragment :: Definition of __insieme_closure_94 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_94 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_94;

static inline void __insieme_closure_94_bind(__insieme_closure_94* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_94* __insieme_closure_94_ctr(__insieme_closure_94* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_94){&__insieme_closure_94_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_96 ... type: ((uint<4>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_96(unsigned int var_370, __insieme_type_1 var_371){
	unsigned int var_373 = isbr_getThreadId(0);
	switch(var_370) {
	case 0:
		return ((var_373/var_371.data[2])/var_371.data[1]); break;
	case 1:
		return ((var_373/var_371.data[2])%var_371.data[1]); break;
	case 2:
		return (var_373%var_371.data[2]); break;
	};
}
static unsigned int __insieme_supp_96_wrap(void* _closure, unsigned int var_370, __insieme_type_1 var_371) { return __insieme_supp_96(var_370, var_371); }

// start code fragment :: Definition of __insieme_supp_97 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_97(unsigned int var_376, __insieme_type_1 var_378, __insieme_type_1 var_377){
	unsigned int var_379 = isbr_getThreadId(0);
	unsigned int var_380 = isbr_getThreadId(1);
	switch(var_376) {
	case 0:
		return (((var_379/var_377.data[2])/var_377.data[1])+(var_377.data[0]*((var_380/var_378.data[2])/var_378.data[1]))); break;
	case 1:
		return (((var_379/var_377.data[2])%var_377.data[1])+(var_377.data[1]*((var_380/var_378.data[2])%var_378.data[1]))); break;
	case 2:
		return ((var_379%var_377.data[2])+(var_377.data[2]*((var_380/var_378.data[2])%var_378.data[1]))); break;
	};
}
static unsigned int __insieme_supp_97_wrap(void* _closure, unsigned int var_376, __insieme_type_1 var_378, __insieme_type_1 var_377) { return __insieme_supp_97(var_376, var_378, var_377); }

// start code fragment :: Definition of __insieme_supp_95 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_95(float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_368, __insieme_type_1 var_369){
	unsigned int lid = __insieme_supp_96(((unsigned int)(0)), var_369);
	unsigned int gid = __insieme_supp_97(((unsigned int)(0)), var_368, var_369);
	(((l[(lid)])) = ((c[(gid)])));
	isbr_barrier(isbr_getThreadGroup(0));
	(((ga[(gid)])) = ((l[(lid)])));
}
static void __insieme_supp_95_wrap(void* _closure, float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_368, __insieme_type_1 var_369) { __insieme_supp_95(c, ga, gb, l, pa, pb, var_368, var_369); }

// start code fragment :: function for job __insieme_job_93 //
void fun__insieme_job_93(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_382 = ((struct __insieme_job_93*)args)->var_382;
	float* var_383 = ((struct __insieme_job_93*)args)->var_383;
	int* var_384 = ((struct __insieme_job_93*)args)->var_384;
	float* var_385 = ((struct __insieme_job_93*)args)->var_385;
	__insieme_type_1 var_388 = ((struct __insieme_job_93*)args)->var_388;
	__insieme_type_1 var_389 = ((struct __insieme_job_93*)args)->var_389;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_684 = ((struct __insieme_job_93*)args)->var_684;
	float* var_685 = ((struct __insieme_job_93*)args)->var_685;
	float* var_686 = ((struct __insieme_job_93*)args)->var_686;
	int* var_687 = ((struct __insieme_job_93*)args)->var_687;
	float* var_688 = ((struct __insieme_job_93*)args)->var_688;
	__insieme_type_1 var_689 = ((struct __insieme_job_93*)args)->var_689;
	unsigned int var_690 = ((struct __insieme_job_93*)args)->var_690;
	int var_691 = ((struct __insieme_job_93*)args)->var_691;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_94_ctr((__insieme_closure_94*)alloca(sizeof(__insieme_closure_94)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_95_wrap), var_382, var_383, var_384, var_385, var_690, var_691, var_388, var_389));
}

// start code fragment :: Definition of __insieme_supp_92 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_92(float* var_391, float* var_392, int* var_393, float* var_394, unsigned int var_386, int var_387, __insieme_type_1 var_395, __insieme_type_1 var_396){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_93)),&((struct __insieme_job_93){sizeof(struct __insieme_job_93),((((1*var_396.data[0])*var_396.data[1])*var_396.data[2])),((((1*var_396.data[0])*var_396.data[1])*var_396.data[2])),&fun__insieme_job_93,var_391,var_392,var_393,var_394,var_395,var_396,var_396,var_391,var_392,var_393,var_394,var_395,var_386,var_387}),sizeof(struct __insieme_job_93)));
	mergeAll();
}
static void __insieme_supp_92_wrap(void* _closure, float* var_391, float* var_392, int* var_393, float* var_394, unsigned int var_386, int var_387, __insieme_type_1 var_395, __insieme_type_1 var_396) { __insieme_supp_92(var_391, var_392, var_393, var_394, var_386, var_387, var_395, var_396); }

// start code fragment :: function for job __insieme_job_90 //
void fun__insieme_job_90(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_397 = ((struct __insieme_job_90*)args)->var_397;
	float* var_398 = ((struct __insieme_job_90*)args)->var_398;
	int* var_399 = ((struct __insieme_job_90*)args)->var_399;
	__insieme_type_1 var_403 = ((struct __insieme_job_90*)args)->var_403;
	__insieme_type_1 var_404 = ((struct __insieme_job_90*)args)->var_404;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_676 = ((struct __insieme_job_90*)args)->var_676;
	float* var_677 = ((struct __insieme_job_90*)args)->var_677;
	float* var_678 = ((struct __insieme_job_90*)args)->var_678;
	int* var_679 = ((struct __insieme_job_90*)args)->var_679;
	__insieme_type_1 var_680 = ((struct __insieme_job_90*)args)->var_680;
	float* var_681 = ((struct __insieme_job_90*)args)->var_681;
	unsigned int var_682 = ((struct __insieme_job_90*)args)->var_682;
	int var_683 = ((struct __insieme_job_90*)args)->var_683;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_91_ctr((__insieme_closure_91*)alloca(sizeof(__insieme_closure_91)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_92_wrap), var_397, var_398, var_399, var_681, var_682, var_683, var_403, var_404));
}

// start code fragment :: Definition of barriers ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int barriers(float* var_406, float* var_407, int* var_408, float* var_400, unsigned int var_401, int var_402, __insieme_type_1 var_367, __insieme_type_1 var_410){
	__insieme_type_1 var_409 = __insieme_supp_89(var_367, var_410);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_90)),&((struct __insieme_job_90){sizeof(struct __insieme_job_90),((((1*var_409.data[0])*var_409.data[1])*var_409.data[2])),((((1*var_409.data[0])*var_409.data[1])*var_409.data[2])),&fun__insieme_job_90,var_406,var_407,var_408,var_409,var_410,var_409,var_406,var_407,var_408,var_410,var_400,var_401,var_402}),sizeof(struct __insieme_job_90)));
	mergeAll();
	return 0;
}
static int barriers_wrap(void* _closure, float* var_406, float* var_407, int* var_408, float* var_400, unsigned int var_401, int var_402, __insieme_type_1 var_367, __insieme_type_1 var_410) { return barriers(var_406, var_407, var_408, var_400, var_401, var_402, var_367, var_410); }

// start code fragment :: Definition of __insieme_supp_98 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_98(__insieme_type_1 var_553, __insieme_type_1 var_554) { return ((__insieme_type_1){{(var_553.data[0]/var_554.data[0]), (var_553.data[1]/var_554.data[1]), (var_553.data[2]/var_554.data[2])}}); }
static __insieme_type_1 __insieme_supp_98_wrap(void* _closure, __insieme_type_1 var_553, __insieme_type_1 var_554) { return __insieme_supp_98(var_553, var_554); }

// start code fragment :: struct for job __insieme_job_99 //
struct __insieme_job_99 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_443;
	float* var_444;
	int* var_445;
	__insieme_type_1 var_449;
	__insieme_type_1 var_450;
	// ---- additional captured variables -----
	__insieme_type_1 var_692;
	float* var_693;
	float* var_694;
	int* var_695;
	__insieme_type_1 var_696;
	float* var_697;
	unsigned int var_698;
	int var_699;
};

// start code fragment :: Definition of __insieme_closure_100 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_100 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_100;

static inline void __insieme_closure_100_bind(__insieme_closure_100* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_100* __insieme_closure_100_ctr(__insieme_closure_100* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_100){&__insieme_closure_100_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: vector_type_declaration of __insieme_type_103 <=> vector<int<4>,258> //
typedef struct ___insieme_type_103 { 
    int data[258];
} __insieme_type_103;

// A constructor initializing a vector of the type __insieme_type_103 uniformly
static inline __insieme_type_103 __insieme_type_103_init_uniform(int value) {
	__insieme_type_103 res;
	for (int i=0; i<258;++i) {
	    res.data[i] = value;
	}
	return res;
}


// start code fragment :: struct for job __insieme_job_102 //
struct __insieme_job_102 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_427;
	float* var_428;
	int* var_429;
	float* var_430;
	__insieme_type_103* var_433;
	__insieme_type_1 var_434;
	__insieme_type_1 var_435;
	// ---- additional captured variables -----
	__insieme_type_1 var_700;
	float* var_701;
	float* var_702;
	int* var_703;
	float* var_704;
	__insieme_type_1 var_705;
	unsigned int var_706;
	int var_707;
};

// start code fragment :: Definitions for function type: __insieme_funType_105 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_105 <-> ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_105 { 
    void(*call)(void*, float*, float*, int*, float*, unsigned int, int, __insieme_type_103*, __insieme_type_1, __insieme_type_1);
} __insieme_funType_105;

// Type safe function for invoking closures of type __insieme_funType_105
static inline void __insieme_funType_105_call(__insieme_funType_105* closure, float* p1, float* p2, int* p3, float* p4, unsigned int p5, int p6, __insieme_type_103* p7, __insieme_type_1 p8, __insieme_type_1 p9) {  closure->call(closure, p1,p2,p3,p4,p5,p6,p7,p8,p9); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_105* __insieme_funType_105_ctr(__insieme_funType_105* target, void(*call)(void*, float*, float*, int*, float*, unsigned int, int, __insieme_type_103*, __insieme_type_1, __insieme_type_1)) {
	*target = (__insieme_funType_105){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_104 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_104 {
    void(*call)(void*);
    __insieme_funType_105* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_103* c7;
    __insieme_type_1 c8;
    __insieme_type_1 c9;
} __insieme_closure_104;

static inline void __insieme_closure_104_bind(__insieme_closure_104* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8,closure->c9); }

static inline __insieme_closure_104* __insieme_closure_104_ctr(__insieme_closure_104* closure, __insieme_funType_105* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_103* c7, __insieme_type_1 c8, __insieme_type_1 c9) {
    *closure = (__insieme_closure_104){&__insieme_closure_104_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8, c9};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_107 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_107(unsigned int var_415, __insieme_type_1 var_417, __insieme_type_1 var_416){
	unsigned int var_418 = isbr_getThreadId(0);
	unsigned int var_419 = isbr_getThreadId(1);
	switch(var_415) {
	case 0:
		return (((var_418/var_416.data[2])/var_416.data[1])+(var_416.data[0]*((var_419/var_417.data[2])/var_417.data[1]))); break;
	case 1:
		return (((var_418/var_416.data[2])%var_416.data[1])+(var_416.data[1]*((var_419/var_417.data[2])%var_417.data[1]))); break;
	case 2:
		return ((var_418%var_416.data[2])+(var_416.data[2]*((var_419/var_417.data[2])%var_417.data[1]))); break;
	};
}
static unsigned int __insieme_supp_107_wrap(void* _closure, unsigned int var_415, __insieme_type_1 var_417, __insieme_type_1 var_416) { return __insieme_supp_107(var_415, var_417, var_416); }

// start code fragment :: Definition of __insieme_supp_108 ... type: ((uint<4>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_108(unsigned int var_421, __insieme_type_1 var_422){
	unsigned int var_424 = isbr_getThreadId(0);
	switch(var_421) {
	case 0:
		return ((var_424/var_422.data[2])/var_422.data[1]); break;
	case 1:
		return ((var_424/var_422.data[2])%var_422.data[1]); break;
	case 2:
		return (var_424%var_422.data[2]); break;
	};
}
static unsigned int __insieme_supp_108_wrap(void* _closure, unsigned int var_421, __insieme_type_1 var_422) { return __insieme_supp_108(var_421, var_422); }

// start code fragment :: Definition of __insieme_supp_106 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_106(float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_103* inKernelLocal, __insieme_type_1 var_413, __insieme_type_1 var_414){
	unsigned int gid = __insieme_supp_107(((unsigned int)(0)), var_413, var_414);
	unsigned int lid = __insieme_supp_108(((unsigned int)(0)), var_414);
	{};
	(((l[(lid)])) = ((c[(gid)])));
	((((*inKernelLocal).data[((lid)-((unsigned int)(1)))])) = ((gb[(gid)])));
	isbr_barrier(isbr_getThreadGroup(0));
	(((ga[(gid)])) = (((l[((gid)+((unsigned int)(1)))]))+((float)((((*inKernelLocal).data[(gid)]))))));
}
static void __insieme_supp_106_wrap(void* _closure, float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_103* inKernelLocal, __insieme_type_1 var_413, __insieme_type_1 var_414) { __insieme_supp_106(c, ga, gb, l, pa, pb, inKernelLocal, var_413, var_414); }

// start code fragment :: function for job __insieme_job_102 //
void fun__insieme_job_102(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_427 = ((struct __insieme_job_102*)args)->var_427;
	float* var_428 = ((struct __insieme_job_102*)args)->var_428;
	int* var_429 = ((struct __insieme_job_102*)args)->var_429;
	float* var_430 = ((struct __insieme_job_102*)args)->var_430;
	__insieme_type_103* var_433 = ((struct __insieme_job_102*)args)->var_433;
	__insieme_type_1 var_434 = ((struct __insieme_job_102*)args)->var_434;
	__insieme_type_1 var_435 = ((struct __insieme_job_102*)args)->var_435;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_700 = ((struct __insieme_job_102*)args)->var_700;
	float* var_701 = ((struct __insieme_job_102*)args)->var_701;
	float* var_702 = ((struct __insieme_job_102*)args)->var_702;
	int* var_703 = ((struct __insieme_job_102*)args)->var_703;
	float* var_704 = ((struct __insieme_job_102*)args)->var_704;
	__insieme_type_1 var_705 = ((struct __insieme_job_102*)args)->var_705;
	unsigned int var_706 = ((struct __insieme_job_102*)args)->var_706;
	int var_707 = ((struct __insieme_job_102*)args)->var_707;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_104_ctr((__insieme_closure_104*)alloca(sizeof(__insieme_closure_104)),(__insieme_funType_105*)__insieme_funType_105_ctr((__insieme_funType_105*)alloca(sizeof(__insieme_funType_105)),&__insieme_supp_106_wrap), var_427, var_428, var_429, var_430, var_706, var_707, var_433, var_434, var_435));
}

// start code fragment :: Definition of __insieme_supp_101 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_101(float* var_437, float* var_438, int* var_439, float* var_440, unsigned int var_431, int var_432, __insieme_type_1 var_441, __insieme_type_1 var_442){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_102)),&((struct __insieme_job_102){sizeof(struct __insieme_job_102),((((1*var_442.data[0])*var_442.data[1])*var_442.data[2])),((((1*var_442.data[0])*var_442.data[1])*var_442.data[2])),&fun__insieme_job_102,var_437,var_438,var_439,var_440,alloca(sizeof(__insieme_type_103)),var_441,var_442,var_442,var_437,var_438,var_439,var_440,var_441,var_431,var_432}),sizeof(struct __insieme_job_102)));
	mergeAll();
}
static void __insieme_supp_101_wrap(void* _closure, float* var_437, float* var_438, int* var_439, float* var_440, unsigned int var_431, int var_432, __insieme_type_1 var_441, __insieme_type_1 var_442) { __insieme_supp_101(var_437, var_438, var_439, var_440, var_431, var_432, var_441, var_442); }

// start code fragment :: function for job __insieme_job_99 //
void fun__insieme_job_99(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_443 = ((struct __insieme_job_99*)args)->var_443;
	float* var_444 = ((struct __insieme_job_99*)args)->var_444;
	int* var_445 = ((struct __insieme_job_99*)args)->var_445;
	__insieme_type_1 var_449 = ((struct __insieme_job_99*)args)->var_449;
	__insieme_type_1 var_450 = ((struct __insieme_job_99*)args)->var_450;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_692 = ((struct __insieme_job_99*)args)->var_692;
	float* var_693 = ((struct __insieme_job_99*)args)->var_693;
	float* var_694 = ((struct __insieme_job_99*)args)->var_694;
	int* var_695 = ((struct __insieme_job_99*)args)->var_695;
	__insieme_type_1 var_696 = ((struct __insieme_job_99*)args)->var_696;
	float* var_697 = ((struct __insieme_job_99*)args)->var_697;
	unsigned int var_698 = ((struct __insieme_job_99*)args)->var_698;
	int var_699 = ((struct __insieme_job_99*)args)->var_699;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_100_ctr((__insieme_closure_100*)alloca(sizeof(__insieme_closure_100)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_101_wrap), var_443, var_444, var_445, var_697, var_698, var_699, var_449, var_450));
}

// start code fragment :: Definition of localMem ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int localMem(float* var_452, float* var_453, int* var_454, float* var_446, unsigned int var_447, int var_448, __insieme_type_1 var_412, __insieme_type_1 var_456){
	__insieme_type_1 var_455 = __insieme_supp_98(var_412, var_456);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_99)),&((struct __insieme_job_99){sizeof(struct __insieme_job_99),((((1*var_455.data[0])*var_455.data[1])*var_455.data[2])),((((1*var_455.data[0])*var_455.data[1])*var_455.data[2])),&fun__insieme_job_99,var_452,var_453,var_454,var_455,var_456,var_455,var_452,var_453,var_454,var_456,var_446,var_447,var_448}),sizeof(struct __insieme_job_99)));
	mergeAll();
	return 0;
}
static int localMem_wrap(void* _closure, float* var_452, float* var_453, int* var_454, float* var_446, unsigned int var_447, int var_448, __insieme_type_1 var_412, __insieme_type_1 var_456) { return localMem(var_452, var_453, var_454, var_446, var_447, var_448, var_412, var_456); }

// start code fragment :: Definition of __insieme_supp_109 ... type: ((vector<uint<4>,3>,vector<uint<4>,3>)->vector<uint<4>,3>) //
__insieme_type_1 __insieme_supp_109(__insieme_type_1 var_557, __insieme_type_1 var_558) { return ((__insieme_type_1){{(var_557.data[0]/var_558.data[0]), (var_557.data[1]/var_558.data[1]), (var_557.data[2]/var_558.data[2])}}); }
static __insieme_type_1 __insieme_supp_109_wrap(void* _closure, __insieme_type_1 var_557, __insieme_type_1 var_558) { return __insieme_supp_109(var_557, var_558); }

// start code fragment :: struct for job __insieme_job_110 //
struct __insieme_job_110 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_494;
	float* var_495;
	int* var_496;
	__insieme_type_1 var_500;
	__insieme_type_1 var_501;
	// ---- additional captured variables -----
	__insieme_type_1 var_708;
	float* var_709;
	float* var_710;
	int* var_711;
	__insieme_type_1 var_712;
	float* var_713;
	unsigned int var_714;
	int var_715;
};

// start code fragment :: Definition of __insieme_closure_111 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_111 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_111;

static inline void __insieme_closure_111_bind(__insieme_closure_111* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_111* __insieme_closure_111_ctr(__insieme_closure_111* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_111){&__insieme_closure_111_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_113 //
struct __insieme_job_113 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	float* var_479;
	float* var_480;
	int* var_481;
	float* var_482;
	__insieme_type_1 var_485;
	__insieme_type_1 var_486;
	// ---- additional captured variables -----
	__insieme_type_1 var_716;
	float* var_717;
	float* var_718;
	int* var_719;
	float* var_720;
	__insieme_type_1 var_721;
	unsigned int var_722;
	int var_723;
};

// start code fragment :: Definition of __insieme_closure_114 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_114 {
    void(*call)(void*);
    __insieme_funType_43* nested;
    float* c1;
    float* c2;
    int* c3;
    float* c4;
    unsigned int c5;
    int c6;
    __insieme_type_1 c7;
    __insieme_type_1 c8;
} __insieme_closure_114;

static inline void __insieme_closure_114_bind(__insieme_closure_114* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_114* __insieme_closure_114_ctr(__insieme_closure_114* closure, __insieme_funType_43* nested, float* c1, float* c2, int* c3, float* c4, unsigned int c5, int c6, __insieme_type_1 c7, __insieme_type_1 c8) {
    *closure = (__insieme_closure_114){&__insieme_closure_114_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_116 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_116(unsigned int var_461, __insieme_type_1 var_463, __insieme_type_1 var_462){
	unsigned int var_464 = isbr_getThreadId(0);
	unsigned int var_465 = isbr_getThreadId(1);
	switch(var_461) {
	case 0:
		return (((var_464/var_462.data[2])/var_462.data[1])+(var_462.data[0]*((var_465/var_463.data[2])/var_463.data[1]))); break;
	case 1:
		return (((var_464/var_462.data[2])%var_462.data[1])+(var_462.data[1]*((var_465/var_463.data[2])%var_463.data[1]))); break;
	case 2:
		return ((var_464%var_462.data[2])+(var_462.data[2]*((var_465/var_463.data[2])%var_463.data[1]))); break;
	};
}
static unsigned int __insieme_supp_116_wrap(void* _closure, unsigned int var_461, __insieme_type_1 var_463, __insieme_type_1 var_462) { return __insieme_supp_116(var_461, var_463, var_462); }

// start code fragment :: Definition of __insieme_supp_117 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_117(unsigned int var_467, __insieme_type_1 var_469, __insieme_type_1 var_468){
	unsigned int var_470 = isbr_getThreadId(0);
	unsigned int var_471 = isbr_getThreadId(1);
	switch(var_467) {
	case 0:
		return (((var_470/var_468.data[2])/var_468.data[1])+(var_468.data[0]*((var_471/var_469.data[2])/var_469.data[1]))); break;
	case 1:
		return (((var_470/var_468.data[2])%var_468.data[1])+(var_468.data[1]*((var_471/var_469.data[2])%var_469.data[1]))); break;
	case 2:
		return ((var_470%var_468.data[2])+(var_468.data[2]*((var_471/var_469.data[2])%var_469.data[1]))); break;
	};
}
static unsigned int __insieme_supp_117_wrap(void* _closure, unsigned int var_467, __insieme_type_1 var_469, __insieme_type_1 var_468) { return __insieme_supp_117(var_467, var_469, var_468); }

// start code fragment :: Definition of __insieme_supp_118 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_118(unsigned int var_473, __insieme_type_1 var_475, __insieme_type_1 var_474){
	unsigned int var_476 = isbr_getThreadId(0);
	unsigned int var_477 = isbr_getThreadId(1);
	switch(var_473) {
	case 0:
		return (((var_476/var_474.data[2])/var_474.data[1])+(var_474.data[0]*((var_477/var_475.data[2])/var_475.data[1]))); break;
	case 1:
		return (((var_476/var_474.data[2])%var_474.data[1])+(var_474.data[1]*((var_477/var_475.data[2])%var_475.data[1]))); break;
	case 2:
		return ((var_476%var_474.data[2])+(var_474.data[2]*((var_477/var_475.data[2])%var_475.data[1]))); break;
	};
}
static unsigned int __insieme_supp_118_wrap(void* _closure, unsigned int var_473, __insieme_type_1 var_475, __insieme_type_1 var_474) { return __insieme_supp_118(var_473, var_475, var_474); }

// start code fragment :: Definition of __insieme_supp_115 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_115(float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_459, __insieme_type_1 var_460){
	int iGID = ((int)(((((__insieme_supp_116(((unsigned int)(0)), var_459, var_460)*((unsigned int)(((gb[((unsigned int)(1))])))))*((unsigned int)(((gb[((unsigned int)(2))])))))+(__insieme_supp_117(((unsigned int)(1)), var_459, var_460)*((unsigned int)(((gb[((unsigned int)(2))]))))))+__insieme_supp_118(((unsigned int)(2)), var_459, var_460))));
	int iNumElements = (((((gb[((unsigned int)(0))]))*((gb[((unsigned int)(1))])))*((gb[((unsigned int)(2))])))-17);
	if(((iGID)>=(iNumElements))) { return; };
	(((ga[((unsigned int)((iGID)))])) = (((c[((unsigned int)((iGID)))]))+((float)(((gb[((unsigned int)((iGID)))]))))));
}
static void __insieme_supp_115_wrap(void* _closure, float* c, float* ga, int* gb, float* l, unsigned int pa, int pb, __insieme_type_1 var_459, __insieme_type_1 var_460) { __insieme_supp_115(c, ga, gb, l, pa, pb, var_459, var_460); }

// start code fragment :: function for job __insieme_job_113 //
void fun__insieme_job_113(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_479 = ((struct __insieme_job_113*)args)->var_479;
	float* var_480 = ((struct __insieme_job_113*)args)->var_480;
	int* var_481 = ((struct __insieme_job_113*)args)->var_481;
	float* var_482 = ((struct __insieme_job_113*)args)->var_482;
	__insieme_type_1 var_485 = ((struct __insieme_job_113*)args)->var_485;
	__insieme_type_1 var_486 = ((struct __insieme_job_113*)args)->var_486;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_716 = ((struct __insieme_job_113*)args)->var_716;
	float* var_717 = ((struct __insieme_job_113*)args)->var_717;
	float* var_718 = ((struct __insieme_job_113*)args)->var_718;
	int* var_719 = ((struct __insieme_job_113*)args)->var_719;
	float* var_720 = ((struct __insieme_job_113*)args)->var_720;
	__insieme_type_1 var_721 = ((struct __insieme_job_113*)args)->var_721;
	unsigned int var_722 = ((struct __insieme_job_113*)args)->var_722;
	int var_723 = ((struct __insieme_job_113*)args)->var_723;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_114_ctr((__insieme_closure_114*)alloca(sizeof(__insieme_closure_114)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_115_wrap), var_479, var_480, var_481, var_482, var_722, var_723, var_485, var_486));
}

// start code fragment :: Definition of __insieme_supp_112 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_112(float* var_488, float* var_489, int* var_490, float* var_491, unsigned int var_483, int var_484, __insieme_type_1 var_492, __insieme_type_1 var_493){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_113)),&((struct __insieme_job_113){sizeof(struct __insieme_job_113),((((1*var_493.data[0])*var_493.data[1])*var_493.data[2])),((((1*var_493.data[0])*var_493.data[1])*var_493.data[2])),&fun__insieme_job_113,var_488,var_489,var_490,var_491,var_492,var_493,var_493,var_488,var_489,var_490,var_491,var_492,var_483,var_484}),sizeof(struct __insieme_job_113)));
	mergeAll();
}
static void __insieme_supp_112_wrap(void* _closure, float* var_488, float* var_489, int* var_490, float* var_491, unsigned int var_483, int var_484, __insieme_type_1 var_492, __insieme_type_1 var_493) { __insieme_supp_112(var_488, var_489, var_490, var_491, var_483, var_484, var_492, var_493); }

// start code fragment :: function for job __insieme_job_110 //
void fun__insieme_job_110(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	float* var_494 = ((struct __insieme_job_110*)args)->var_494;
	float* var_495 = ((struct __insieme_job_110*)args)->var_495;
	int* var_496 = ((struct __insieme_job_110*)args)->var_496;
	__insieme_type_1 var_500 = ((struct __insieme_job_110*)args)->var_500;
	__insieme_type_1 var_501 = ((struct __insieme_job_110*)args)->var_501;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_1 var_708 = ((struct __insieme_job_110*)args)->var_708;
	float* var_709 = ((struct __insieme_job_110*)args)->var_709;
	float* var_710 = ((struct __insieme_job_110*)args)->var_710;
	int* var_711 = ((struct __insieme_job_110*)args)->var_711;
	__insieme_type_1 var_712 = ((struct __insieme_job_110*)args)->var_712;
	float* var_713 = ((struct __insieme_job_110*)args)->var_713;
	unsigned int var_714 = ((struct __insieme_job_110*)args)->var_714;
	int var_715 = ((struct __insieme_job_110*)args)->var_715;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_4_call((__insieme_funType_4*)__insieme_closure_111_ctr((__insieme_closure_111*)alloca(sizeof(__insieme_closure_111)),(__insieme_funType_43*)__insieme_funType_43_ctr((__insieme_funType_43*)alloca(sizeof(__insieme_funType_43)),&__insieme_supp_112_wrap), var_494, var_495, var_496, var_713, var_714, var_715, var_500, var_501));
}

// start code fragment :: Definition of VectorAdd ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int VectorAdd(float* var_503, float* var_504, int* var_505, float* var_497, unsigned int var_498, int var_499, __insieme_type_1 var_458, __insieme_type_1 var_507){
	__insieme_type_1 var_506 = __insieme_supp_109(var_458, var_507);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_110)),&((struct __insieme_job_110){sizeof(struct __insieme_job_110),((((1*var_506.data[0])*var_506.data[1])*var_506.data[2])),((((1*var_506.data[0])*var_506.data[1])*var_506.data[2])),&fun__insieme_job_110,var_503,var_504,var_505,var_506,var_507,var_506,var_503,var_504,var_505,var_507,var_497,var_498,var_499}),sizeof(struct __insieme_job_110)));
	mergeAll();
	return 0;
}
static int VectorAdd_wrap(void* _closure, float* var_503, float* var_504, int* var_505, float* var_497, unsigned int var_498, int var_499, __insieme_type_1 var_458, __insieme_type_1 var_507) { return VectorAdd(var_503, var_504, var_505, var_497, var_498, var_499, var_458, var_507); }

// --- Generated Inspire Code ---

// start code fragment :: array type definition of __insieme_type_1 <=> array<real<4>,1> //
typedef struct ___insieme_type_1 { 
    float* data;
} __insieme_type_1;

// start code fragment :: vector_type_declaration of __insieme_type_3 <=> vector<uint<4>,3> //
typedef struct ___insieme_type_3 { 
    unsigned int data[3];
} __insieme_type_3;

// A constructor initializing a vector of the type __insieme_type_3 uniformly
static inline __insieme_type_3 __insieme_type_3_init_uniform(unsigned int value) {
	__insieme_type_3 res;
	for (int i=0; i<3;++i) {
	    res.data[i] = value;
	}
	return res;
}


// start code fragment :: vector_type_declaration of __insieme_type_5 <=> vector<uint<#a>,#l> //
typedef struct ___insieme_type_5 { 
    uint<#a> data[#l];
} __insieme_type_5;

// A constructor initializing a vector of the type __insieme_type_5 uniformly
static inline __insieme_type_5 __insieme_type_5_init_uniform(uint<#a> value) {
	__insieme_type_5 res;
	for (int i=0; i<#l;++i) {
	    res.data[i] = value;
	}
	return res;
}


// start code fragment :: Definitions for function type: __insieme_funType_4 //
//
// -------------------- Begin of constructs for function type ((vector<uint<#a>,#l>,vector<uint<#a>,#l>)->vector<uint<#a>,#l>)---------------------
// Base-struct of describing closures of type __insieme_funType_4 <-> ((vector<uint<#a>,#l>,vector<uint<#a>,#l>)->vector<uint<#a>,#l>)
typedef struct ___insieme_funType_4 { 
    __insieme_type_5(*call)(void*, __insieme_type_5, __insieme_type_5);
} __insieme_funType_4;

// Type safe function for invoking closures of type __insieme_funType_4
static inline __insieme_type_5 __insieme_funType_4_call(__insieme_funType_4* closure, __insieme_type_5 p1, __insieme_type_5 p2) { return closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type ((vector<uint<#a>,#l>,vector<uint<#a>,#l>)->vector<uint<#a>,#l>)
static inline __insieme_funType_4* __insieme_funType_4_ctr(__insieme_funType_4* target, __insieme_type_5(*call)(void*, __insieme_type_5, __insieme_type_5)) {
	*target = (__insieme_funType_4){call};
	return target;
}
// ----------------------- end of constructs for function ((vector<uint<#a>,#l>,vector<uint<#a>,#l>)->vector<uint<#a>,#l>)-----------------------

// start code fragment :: vector_type_declaration of __insieme_type_7 <=> vector<'res,#l> //
typedef struct ___insieme_type_7 { 
    <?>'res</?> data[#l];
} __insieme_type_7;

// A constructor initializing a vector of the type __insieme_type_7 uniformly
static inline __insieme_type_7 __insieme_type_7_init_uniform(<?>'res</?> value) {
	__insieme_type_7 res;
	for (int i=0; i<#l;++i) {
	    res.data[i] = value;
	}
	return res;
}


// start code fragment :: vector_type_declaration of __insieme_type_8 <=> vector<'elem,#l> //
typedef struct ___insieme_type_8 { 
    <?>'elem</?> data[#l];
} __insieme_type_8;

// A constructor initializing a vector of the type __insieme_type_8 uniformly
static inline __insieme_type_8 __insieme_type_8_init_uniform(<?>'elem</?> value) {
	__insieme_type_8 res;
	for (int i=0; i<#l;++i) {
	    res.data[i] = value;
	}
	return res;
}


// start code fragment :: Definitions for function type: __insieme_funType_6 //
//
// -------------------- Begin of constructs for function type ((vector<'elem,#l>,vector<'elem,#l>)->vector<'res,#l>)---------------------
// Base-struct of describing closures of type __insieme_funType_6 <-> ((vector<'elem,#l>,vector<'elem,#l>)->vector<'res,#l>)
typedef struct ___insieme_funType_6 { 
    __insieme_type_7(*call)(void*, __insieme_type_8, __insieme_type_8);
} __insieme_funType_6;

// Type safe function for invoking closures of type __insieme_funType_6
static inline __insieme_type_7 __insieme_funType_6_call(__insieme_funType_6* closure, __insieme_type_8 p1, __insieme_type_8 p2) { return closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type ((vector<'elem,#l>,vector<'elem,#l>)->vector<'res,#l>)
static inline __insieme_funType_6* __insieme_funType_6_ctr(__insieme_funType_6* target, __insieme_type_7(*call)(void*, __insieme_type_8, __insieme_type_8)) {
	*target = (__insieme_funType_6){call};
	return target;
}
// ----------------------- end of constructs for function ((vector<'elem,#l>,vector<'elem,#l>)->vector<'res,#l>)-----------------------

// start code fragment :: Definitions for function type: __insieme_funType_9 //
//
// -------------------- Begin of constructs for function type (('elem,'elem)->'res)---------------------
// Base-struct of describing closures of type __insieme_funType_9 <-> (('elem,'elem)->'res)
typedef struct ___insieme_funType_9 { 
    <?>'res</?>(*call)(void*, <?>'elem</?>, <?>'elem</?>);
} __insieme_funType_9;

// Type safe function for invoking closures of type __insieme_funType_9
static inline <?>'res</?> __insieme_funType_9_call(__insieme_funType_9* closure, <?>'elem</?> p1, <?>'elem</?> p2) { return closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type (('elem,'elem)->'res)
static inline __insieme_funType_9* __insieme_funType_9_ctr(__insieme_funType_9* target, <?>'res</?>(*call)(void*, <?>'elem</?>, <?>'elem</?>)) {
	*target = (__insieme_funType_9){call};
	return target;
}
// ----------------------- end of constructs for function (('elem,'elem)->'res)-----------------------

// start code fragment :: Prototype for external function: vector.pointwise ... type: (((('elem,'elem)->'res))->((vector<'elem,#l>,vector<'elem,#l>)->vector<'res,#l>)) //
__insieme_funType_6* vector.pointwise(__insieme_funType_9*);
static __insieme_funType_6* vector.pointwise_wrap(void* _closure, __insieme_funType_9* var_509) { return vector.pointwise(var_509); }

// start code fragment :: Definitions for function type: __insieme_funType_10 //
//
// -------------------- Begin of constructs for function type ((uint<#a>,uint<#a>)->uint<#a>)---------------------
// Base-struct of describing closures of type __insieme_funType_10 <-> ((uint<#a>,uint<#a>)->uint<#a>)
typedef struct ___insieme_funType_10 { 
    uint<#a>(*call)(void*, uint<#a>, uint<#a>);
} __insieme_funType_10;

// Type safe function for invoking closures of type __insieme_funType_10
static inline uint<#a> __insieme_funType_10_call(__insieme_funType_10* closure, uint<#a> p1, uint<#a> p2) { return closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type ((uint<#a>,uint<#a>)->uint<#a>)
static inline __insieme_funType_10* __insieme_funType_10_ctr(__insieme_funType_10* target, uint<#a>(*call)(void*, uint<#a>, uint<#a>)) {
	*target = (__insieme_funType_10){call};
	return target;
}
// ----------------------- end of constructs for function ((uint<#a>,uint<#a>)->uint<#a>)-----------------------

// start code fragment :: struct for job __insieme_job_11 //
struct __insieme_job_11 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_94;
	__insieme_type_3 var_95;
	__insieme_type_3 var_96;
	// ---- additional captured variables -----
	__insieme_type_3 var_510;
	__insieme_type_1* var_511;
	__insieme_type_3 var_512;
};

// start code fragment :: Definitions for function type: __insieme_funType_12 //
//
// -------------------- Begin of constructs for function type (()->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_12 <-> (()->unit)
typedef struct ___insieme_funType_12 { 
    void(*call)(void*);
} __insieme_funType_12;

// Type safe function for invoking closures of type __insieme_funType_12
static inline void __insieme_funType_12_call(__insieme_funType_12* closure) {  closure->call(closure); }

// A constructor for closures wrapping pure functions of type (()->unit)
static inline __insieme_funType_12* __insieme_funType_12_ctr(__insieme_funType_12* target, void(*call)(void*)) {
	*target = (__insieme_funType_12){call};
	return target;
}
// ----------------------- end of constructs for function (()->unit)-----------------------

// start code fragment :: Definitions for function type: __insieme_funType_14 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_14 <-> ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_14 { 
    void(*call)(void*, __insieme_type_1*, __insieme_type_3, __insieme_type_3);
} __insieme_funType_14;

// Type safe function for invoking closures of type __insieme_funType_14
static inline void __insieme_funType_14_call(__insieme_funType_14* closure, __insieme_type_1* p1, __insieme_type_3 p2, __insieme_type_3 p3) {  closure->call(closure, p1,p2,p3); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_14* __insieme_funType_14_ctr(__insieme_funType_14* target, void(*call)(void*, __insieme_type_1*, __insieme_type_3, __insieme_type_3)) {
	*target = (__insieme_funType_14){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_13 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_13 {
    void(*call)(void*);
    __insieme_funType_14* nested;
    __insieme_type_1* c1;
    __insieme_type_3 c2;
    __insieme_type_3 c3;
} __insieme_closure_13;

static inline void __insieme_closure_13_bind(__insieme_closure_13* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3); }

static inline __insieme_closure_13* __insieme_closure_13_ctr(__insieme_closure_13* closure, __insieme_funType_14* nested, __insieme_type_1* c1, __insieme_type_3 c2, __insieme_type_3 c3) {
    *closure = (__insieme_closure_13){&__insieme_closure_13_bind, nested, c1, c2, c3};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_16 //
struct __insieme_job_16 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_89;
	__insieme_type_3 var_90;
	// ---- additional captured variables -----
	__insieme_type_3 var_513;
	__insieme_type_1* var_514;
};

// start code fragment :: Definitions for function type: __insieme_funType_18 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_18 <-> ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_18 { 
    void(*call)(void*, __insieme_type_1*, __insieme_type_3);
} __insieme_funType_18;

// Type safe function for invoking closures of type __insieme_funType_18
static inline void __insieme_funType_18_call(__insieme_funType_18* closure, __insieme_type_1* p1, __insieme_type_3 p2) {  closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_18* __insieme_funType_18_ctr(__insieme_funType_18* target, void(*call)(void*, __insieme_type_1*, __insieme_type_3)) {
	*target = (__insieme_funType_18){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_17 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_17 {
    void(*call)(void*);
    __insieme_funType_18* nested;
    __insieme_type_1* c1;
    __insieme_type_3 c2;
} __insieme_closure_17;

static inline void __insieme_closure_17_bind(__insieme_closure_17* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2); }

static inline __insieme_closure_17* __insieme_closure_17_ctr(__insieme_closure_17* closure, __insieme_funType_18* nested, __insieme_type_1* c1, __insieme_type_3 c2) {
    *closure = (__insieme_closure_17){&__insieme_closure_17_bind, nested, c1, c2};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_19 ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit) //
void __insieme_supp_19(__insieme_type_1* c, __insieme_type_3 var_88) { float element = ((*c).data[((unsigned int)(0))]); }
static void __insieme_supp_19_wrap(void* _closure, __insieme_type_1* c, __insieme_type_3 var_88) { __insieme_supp_19(c, var_88); }

// start code fragment :: function for job __insieme_job_16 //
void fun__insieme_job_16(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_89 = ((struct __insieme_job_16*)args)->var_89;
	__insieme_type_3 var_90 = ((struct __insieme_job_16*)args)->var_90;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_513 = ((struct __insieme_job_16*)args)->var_513;
	__insieme_type_1* var_514 = ((struct __insieme_job_16*)args)->var_514;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_17_ctr((__insieme_closure_17*)alloca(sizeof(__insieme_closure_17)),(__insieme_funType_18*)__insieme_funType_18_ctr((__insieme_funType_18*)alloca(sizeof(__insieme_funType_18)),&__insieme_supp_19_wrap), var_89, var_90));
}

// start code fragment :: Prototype for external function: mergeAll ... type: (()->unit) //
void mergeAll();
static void mergeAll_wrap(void* _closure) { mergeAll(); }

// start code fragment :: Definition of __insieme_supp_15 ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_15(__insieme_type_1* var_92, __insieme_type_3 var_87, __insieme_type_3 var_93){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_16)),&((struct __insieme_job_16){sizeof(struct __insieme_job_16),((((1*var_93[0])*var_93[1])*var_93[2])),((((1*var_93[0])*var_93[1])*var_93[2])),&fun__insieme_job_16,var_92,var_93,var_93,var_92}),sizeof(struct __insieme_job_16)));
	mergeAll();
}
static void __insieme_supp_15_wrap(void* _closure, __insieme_type_1* var_92, __insieme_type_3 var_87, __insieme_type_3 var_93) { __insieme_supp_15(var_92, var_87, var_93); }

// start code fragment :: function for job __insieme_job_11 //
void fun__insieme_job_11(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_94 = ((struct __insieme_job_11*)args)->var_94;
	__insieme_type_3 var_95 = ((struct __insieme_job_11*)args)->var_95;
	__insieme_type_3 var_96 = ((struct __insieme_job_11*)args)->var_96;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_510 = ((struct __insieme_job_11*)args)->var_510;
	__insieme_type_1* var_511 = ((struct __insieme_job_11*)args)->var_511;
	__insieme_type_3 var_512 = ((struct __insieme_job_11*)args)->var_512;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_13_ctr((__insieme_closure_13*)alloca(sizeof(__insieme_closure_13)),(__insieme_funType_14*)__insieme_funType_14_ctr((__insieme_funType_14*)alloca(sizeof(__insieme_funType_14)),&__insieme_supp_15_wrap), var_94, var_95, var_96));
}

// start code fragment :: Definition of constantMemArg ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int constantMemArg(__insieme_type_1* var_98, __insieme_type_3 var_86, __insieme_type_3 var_100){
	__insieme_type_3 var_99 = __insieme_funType_4_call(vector.pointwise(uint.div), var_86, var_100);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_11)),&((struct __insieme_job_11){sizeof(struct __insieme_job_11),((((1*var_99[0])*var_99[1])*var_99[2])),((((1*var_99[0])*var_99[1])*var_99[2])),&fun__insieme_job_11,var_98,var_99,var_100,var_99,var_98,var_100}),sizeof(struct __insieme_job_11)));
	mergeAll();
	return 0;
}
static int constantMemArg_wrap(void* _closure, __insieme_type_1* var_98, __insieme_type_3 var_86, __insieme_type_3 var_100) { return constantMemArg(var_98, var_86, var_100); }

// start code fragment :: struct for job __insieme_job_21 //
struct __insieme_job_21 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_110;
	__insieme_type_3 var_111;
	__insieme_type_3 var_112;
	// ---- additional captured variables -----
	__insieme_type_3 var_515;
	__insieme_type_1* var_516;
	__insieme_type_3 var_517;
};

// start code fragment :: Definition of __insieme_closure_22 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_22 {
    void(*call)(void*);
    __insieme_funType_14* nested;
    __insieme_type_1* c1;
    __insieme_type_3 c2;
    __insieme_type_3 c3;
} __insieme_closure_22;

static inline void __insieme_closure_22_bind(__insieme_closure_22* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3); }

static inline __insieme_closure_22* __insieme_closure_22_ctr(__insieme_closure_22* closure, __insieme_funType_14* nested, __insieme_type_1* c1, __insieme_type_3 c2, __insieme_type_3 c3) {
    *closure = (__insieme_closure_22){&__insieme_closure_22_bind, nested, c1, c2, c3};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_24 //
struct __insieme_job_24 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_105;
	__insieme_type_3 var_106;
	// ---- additional captured variables -----
	__insieme_type_3 var_518;
	__insieme_type_1* var_519;
};

// start code fragment :: Definition of __insieme_closure_25 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_25 {
    void(*call)(void*);
    __insieme_funType_18* nested;
    __insieme_type_1* c1;
    __insieme_type_3 c2;
} __insieme_closure_25;

static inline void __insieme_closure_25_bind(__insieme_closure_25* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2); }

static inline __insieme_closure_25* __insieme_closure_25_ctr(__insieme_closure_25* closure, __insieme_funType_18* nested, __insieme_type_1* c1, __insieme_type_3 c2) {
    *closure = (__insieme_closure_25){&__insieme_closure_25_bind, nested, c1, c2};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_26 ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>)->unit) //
void __insieme_supp_26(__insieme_type_1* g, __insieme_type_3 var_104) { float element = ((*g).data[((unsigned int)(0))]); }
static void __insieme_supp_26_wrap(void* _closure, __insieme_type_1* g, __insieme_type_3 var_104) { __insieme_supp_26(g, var_104); }

// start code fragment :: function for job __insieme_job_24 //
void fun__insieme_job_24(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_105 = ((struct __insieme_job_24*)args)->var_105;
	__insieme_type_3 var_106 = ((struct __insieme_job_24*)args)->var_106;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_518 = ((struct __insieme_job_24*)args)->var_518;
	__insieme_type_1* var_519 = ((struct __insieme_job_24*)args)->var_519;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_25_ctr((__insieme_closure_25*)alloca(sizeof(__insieme_closure_25)),(__insieme_funType_18*)__insieme_funType_18_ctr((__insieme_funType_18*)alloca(sizeof(__insieme_funType_18)),&__insieme_supp_26_wrap), var_105, var_106));
}

// start code fragment :: Definition of __insieme_supp_23 ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_23(__insieme_type_1* var_108, __insieme_type_3 var_103, __insieme_type_3 var_109){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_24)),&((struct __insieme_job_24){sizeof(struct __insieme_job_24),((((1*var_109[0])*var_109[1])*var_109[2])),((((1*var_109[0])*var_109[1])*var_109[2])),&fun__insieme_job_24,var_108,var_109,var_109,var_108}),sizeof(struct __insieme_job_24)));
	mergeAll();
}
static void __insieme_supp_23_wrap(void* _closure, __insieme_type_1* var_108, __insieme_type_3 var_103, __insieme_type_3 var_109) { __insieme_supp_23(var_108, var_103, var_109); }

// start code fragment :: function for job __insieme_job_21 //
void fun__insieme_job_21(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_110 = ((struct __insieme_job_21*)args)->var_110;
	__insieme_type_3 var_111 = ((struct __insieme_job_21*)args)->var_111;
	__insieme_type_3 var_112 = ((struct __insieme_job_21*)args)->var_112;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_515 = ((struct __insieme_job_21*)args)->var_515;
	__insieme_type_1* var_516 = ((struct __insieme_job_21*)args)->var_516;
	__insieme_type_3 var_517 = ((struct __insieme_job_21*)args)->var_517;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_22_ctr((__insieme_closure_22*)alloca(sizeof(__insieme_closure_22)),(__insieme_funType_14*)__insieme_funType_14_ctr((__insieme_funType_14*)alloca(sizeof(__insieme_funType_14)),&__insieme_supp_23_wrap), var_110, var_111, var_112));
}

// start code fragment :: Definition of globalMemArg ... type: ((ref<array<real<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int globalMemArg(__insieme_type_1* var_114, __insieme_type_3 var_102, __insieme_type_3 var_116){
	__insieme_type_3 var_115 = __insieme_funType_4_call(vector.pointwise(uint.div), var_102, var_116);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_21)),&((struct __insieme_job_21){sizeof(struct __insieme_job_21),((((1*var_115[0])*var_115[1])*var_115[2])),((((1*var_115[0])*var_115[1])*var_115[2])),&fun__insieme_job_21,var_114,var_115,var_116,var_115,var_114,var_116}),sizeof(struct __insieme_job_21)));
	mergeAll();
	return 0;
}
static int globalMemArg_wrap(void* _closure, __insieme_type_1* var_114, __insieme_type_3 var_102, __insieme_type_3 var_116) { return globalMemArg(var_114, var_102, var_116); }

// start code fragment :: array type definition of __insieme_type_28 <=> array<int<4>,1> //
typedef struct ___insieme_type_28 { 
    int* data;
} __insieme_type_28;

// start code fragment :: struct for job __insieme_job_30 //
struct __insieme_job_30 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_3 var_127;
	__insieme_type_3 var_128;
	// ---- additional captured variables -----
	__insieme_type_3 var_520;
	__insieme_type_3 var_521;
	__insieme_type_28* var_522;
};

// start code fragment :: Definitions for function type: __insieme_funType_32 //
//
// -------------------- Begin of constructs for function type ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_32 <-> ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_32 { 
    void(*call)(void*, __insieme_type_28*, __insieme_type_3, __insieme_type_3);
} __insieme_funType_32;

// Type safe function for invoking closures of type __insieme_funType_32
static inline void __insieme_funType_32_call(__insieme_funType_32* closure, __insieme_type_28* p1, __insieme_type_3 p2, __insieme_type_3 p3) {  closure->call(closure, p1,p2,p3); }

// A constructor for closures wrapping pure functions of type ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_32* __insieme_funType_32_ctr(__insieme_funType_32* target, void(*call)(void*, __insieme_type_28*, __insieme_type_3, __insieme_type_3)) {
	*target = (__insieme_funType_32){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_31 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_31 {
    void(*call)(void*);
    __insieme_funType_32* nested;
    __insieme_type_28* c1;
    __insieme_type_3 c2;
    __insieme_type_3 c3;
} __insieme_closure_31;

static inline void __insieme_closure_31_bind(__insieme_closure_31* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3); }

static inline __insieme_closure_31* __insieme_closure_31_ctr(__insieme_closure_31* closure, __insieme_funType_32* nested, __insieme_type_28* c1, __insieme_type_3 c2, __insieme_type_3 c3) {
    *closure = (__insieme_closure_31){&__insieme_closure_31_bind, nested, c1, c2, c3};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_34 //
struct __insieme_job_34 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_28* var_121;
	__insieme_type_3 var_122;
	// ---- additional captured variables -----
	__insieme_type_3 var_523;
	__insieme_type_28* var_524;
};

// start code fragment :: Definitions for function type: __insieme_funType_36 //
//
// -------------------- Begin of constructs for function type ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_36 <-> ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_36 { 
    void(*call)(void*, __insieme_type_28*, __insieme_type_3);
} __insieme_funType_36;

// Type safe function for invoking closures of type __insieme_funType_36
static inline void __insieme_funType_36_call(__insieme_funType_36* closure, __insieme_type_28* p1, __insieme_type_3 p2) {  closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_36* __insieme_funType_36_ctr(__insieme_funType_36* target, void(*call)(void*, __insieme_type_28*, __insieme_type_3)) {
	*target = (__insieme_funType_36){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_35 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_35 {
    void(*call)(void*);
    __insieme_funType_36* nested;
    __insieme_type_28* c1;
    __insieme_type_3 c2;
} __insieme_closure_35;

static inline void __insieme_closure_35_bind(__insieme_closure_35* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2); }

static inline __insieme_closure_35* __insieme_closure_35_ctr(__insieme_closure_35* closure, __insieme_funType_36* nested, __insieme_type_28* c1, __insieme_type_3 c2) {
    *closure = (__insieme_closure_35){&__insieme_closure_35_bind, nested, c1, c2};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_37 ... type: ((ref<array<int<4>,1>>,vector<uint<4>,3>)->unit) //
void __insieme_supp_37(__insieme_type_28* l, __insieme_type_3 var_120) { int element = ((*l).data[((unsigned int)(0))]); }
static void __insieme_supp_37_wrap(void* _closure, __insieme_type_28* l, __insieme_type_3 var_120) { __insieme_supp_37(l, var_120); }

// start code fragment :: function for job __insieme_job_34 //
void fun__insieme_job_34(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_28* var_121 = ((struct __insieme_job_34*)args)->var_121;
	__insieme_type_3 var_122 = ((struct __insieme_job_34*)args)->var_122;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_523 = ((struct __insieme_job_34*)args)->var_523;
	__insieme_type_28* var_524 = ((struct __insieme_job_34*)args)->var_524;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_35_ctr((__insieme_closure_35*)alloca(sizeof(__insieme_closure_35)),(__insieme_funType_36*)__insieme_funType_36_ctr((__insieme_funType_36*)alloca(sizeof(__insieme_funType_36)),&__insieme_supp_37_wrap), var_121, var_122));
}

// start code fragment :: Definition of __insieme_supp_33 ... type: ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_33(__insieme_type_28* var_124, __insieme_type_3 var_119, __insieme_type_3 var_125){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_34)),&((struct __insieme_job_34){sizeof(struct __insieme_job_34),((((1*var_125[0])*var_125[1])*var_125[2])),((((1*var_125[0])*var_125[1])*var_125[2])),&fun__insieme_job_34,var_124,var_125,var_125,var_124}),sizeof(struct __insieme_job_34)));
	mergeAll();
}
static void __insieme_supp_33_wrap(void* _closure, __insieme_type_28* var_124, __insieme_type_3 var_119, __insieme_type_3 var_125) { __insieme_supp_33(var_124, var_119, var_125); }

// start code fragment :: function for job __insieme_job_30 //
void fun__insieme_job_30(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_3 var_127 = ((struct __insieme_job_30*)args)->var_127;
	__insieme_type_3 var_128 = ((struct __insieme_job_30*)args)->var_128;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_520 = ((struct __insieme_job_30*)args)->var_520;
	__insieme_type_3 var_521 = ((struct __insieme_job_30*)args)->var_521;
	__insieme_type_28* var_522 = ((struct __insieme_job_30*)args)->var_522;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_31_ctr((__insieme_closure_31*)alloca(sizeof(__insieme_closure_31)),(__insieme_funType_32*)__insieme_funType_32_ctr((__insieme_funType_32*)alloca(sizeof(__insieme_funType_32)),&__insieme_supp_33_wrap), var_522, var_127, var_128));
}

// start code fragment :: Definition of localMemArg ... type: ((ref<array<int<4>,1>>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int localMemArg(__insieme_type_28* var_126, __insieme_type_3 var_118, __insieme_type_3 var_131){
	__insieme_type_3 var_130 = __insieme_funType_4_call(vector.pointwise(uint.div), var_118, var_131);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_30)),&((struct __insieme_job_30){sizeof(struct __insieme_job_30),((((1*var_130[0])*var_130[1])*var_130[2])),((((1*var_130[0])*var_130[1])*var_130[2])),&fun__insieme_job_30,var_130,var_131,var_130,var_131,var_126}),sizeof(struct __insieme_job_30)));
	mergeAll();
	return 0;
}
static int localMemArg_wrap(void* _closure, __insieme_type_28* var_126, __insieme_type_3 var_118, __insieme_type_3 var_131) { return localMemArg(var_126, var_118, var_131); }

// start code fragment :: struct for job __insieme_job_40 //
struct __insieme_job_40 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_3 var_141;
	__insieme_type_3 var_142;
	// ---- additional captured variables -----
	__insieme_type_3 var_525;
	__insieme_type_3 var_526;
	short var_527;
};

// start code fragment :: Definitions for function type: __insieme_funType_42 //
//
// -------------------- Begin of constructs for function type ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_42 <-> ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_42 { 
    void(*call)(void*, short, __insieme_type_3, __insieme_type_3);
} __insieme_funType_42;

// Type safe function for invoking closures of type __insieme_funType_42
static inline void __insieme_funType_42_call(__insieme_funType_42* closure, short p1, __insieme_type_3 p2, __insieme_type_3 p3) {  closure->call(closure, p1,p2,p3); }

// A constructor for closures wrapping pure functions of type ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_42* __insieme_funType_42_ctr(__insieme_funType_42* target, void(*call)(void*, short, __insieme_type_3, __insieme_type_3)) {
	*target = (__insieme_funType_42){call};
	return target;
}
// ----------------------- end of constructs for function ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_41 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_41 {
    void(*call)(void*);
    __insieme_funType_42* nested;
    short c1;
    __insieme_type_3 c2;
    __insieme_type_3 c3;
} __insieme_closure_41;

static inline void __insieme_closure_41_bind(__insieme_closure_41* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3); }

static inline __insieme_closure_41* __insieme_closure_41_ctr(__insieme_closure_41* closure, __insieme_funType_42* nested, short c1, __insieme_type_3 c2, __insieme_type_3 c3) {
    *closure = (__insieme_closure_41){&__insieme_closure_41_bind, nested, c1, c2, c3};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_44 //
struct __insieme_job_44 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_3 var_137;
	// ---- additional captured variables -----
	__insieme_type_3 var_528;
	short var_529;
};

// start code fragment :: Definitions for function type: __insieme_funType_46 //
//
// -------------------- Begin of constructs for function type ((int<2>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_46 <-> ((int<2>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_46 { 
    void(*call)(void*, short, __insieme_type_3);
} __insieme_funType_46;

// Type safe function for invoking closures of type __insieme_funType_46
static inline void __insieme_funType_46_call(__insieme_funType_46* closure, short p1, __insieme_type_3 p2) {  closure->call(closure, p1,p2); }

// A constructor for closures wrapping pure functions of type ((int<2>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_46* __insieme_funType_46_ctr(__insieme_funType_46* target, void(*call)(void*, short, __insieme_type_3)) {
	*target = (__insieme_funType_46){call};
	return target;
}
// ----------------------- end of constructs for function ((int<2>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_45 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_45 {
    void(*call)(void*);
    __insieme_funType_46* nested;
    short c1;
    __insieme_type_3 c2;
} __insieme_closure_45;

static inline void __insieme_closure_45_bind(__insieme_closure_45* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2); }

static inline __insieme_closure_45* __insieme_closure_45_ctr(__insieme_closure_45* closure, __insieme_funType_46* nested, short c1, __insieme_type_3 c2) {
    *closure = (__insieme_closure_45){&__insieme_closure_45_bind, nested, c1, c2};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_47 ... type: ((int<2>,vector<uint<4>,3>)->unit) //
void __insieme_supp_47(short p, __insieme_type_3 var_135) { short copy = p; }
static void __insieme_supp_47_wrap(void* _closure, short p, __insieme_type_3 var_135) { __insieme_supp_47(p, var_135); }

// start code fragment :: function for job __insieme_job_44 //
void fun__insieme_job_44(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_3 var_137 = ((struct __insieme_job_44*)args)->var_137;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_528 = ((struct __insieme_job_44*)args)->var_528;
	short var_529 = ((struct __insieme_job_44*)args)->var_529;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_45_ctr((__insieme_closure_45*)alloca(sizeof(__insieme_closure_45)),(__insieme_funType_46*)__insieme_funType_46_ctr((__insieme_funType_46*)alloca(sizeof(__insieme_funType_46)),&__insieme_supp_47_wrap), var_529, var_137));
}

// start code fragment :: Definition of __insieme_supp_43 ... type: ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_43(short var_136, __insieme_type_3 var_134, __insieme_type_3 var_139){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_44)),&((struct __insieme_job_44){sizeof(struct __insieme_job_44),((((1*var_139[0])*var_139[1])*var_139[2])),((((1*var_139[0])*var_139[1])*var_139[2])),&fun__insieme_job_44,var_139,var_139,var_136}),sizeof(struct __insieme_job_44)));
	mergeAll();
}
static void __insieme_supp_43_wrap(void* _closure, short var_136, __insieme_type_3 var_134, __insieme_type_3 var_139) { __insieme_supp_43(var_136, var_134, var_139); }

// start code fragment :: function for job __insieme_job_40 //
void fun__insieme_job_40(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_3 var_141 = ((struct __insieme_job_40*)args)->var_141;
	__insieme_type_3 var_142 = ((struct __insieme_job_40*)args)->var_142;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_525 = ((struct __insieme_job_40*)args)->var_525;
	__insieme_type_3 var_526 = ((struct __insieme_job_40*)args)->var_526;
	short var_527 = ((struct __insieme_job_40*)args)->var_527;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_41_ctr((__insieme_closure_41*)alloca(sizeof(__insieme_closure_41)),(__insieme_funType_42*)__insieme_funType_42_ctr((__insieme_funType_42*)alloca(sizeof(__insieme_funType_42)),&__insieme_supp_43_wrap), var_527, var_141, var_142));
}

// start code fragment :: Definition of privateMemArg ... type: ((int<2>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int privateMemArg(short var_140, __insieme_type_3 var_133, __insieme_type_3 var_145){
	__insieme_type_3 var_144 = __insieme_funType_4_call(vector.pointwise(uint.div), var_133, var_145);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_40)),&((struct __insieme_job_40){sizeof(struct __insieme_job_40),((((1*var_144[0])*var_144[1])*var_144[2])),((((1*var_144[0])*var_144[1])*var_144[2])),&fun__insieme_job_40,var_144,var_145,var_144,var_145,var_140}),sizeof(struct __insieme_job_40)));
	mergeAll();
	return 0;
}
static int privateMemArg_wrap(void* _closure, short var_140, __insieme_type_3 var_133, __insieme_type_3 var_145) { return privateMemArg(var_140, var_133, var_145); }

// start code fragment :: struct for job __insieme_job_50 //
struct __insieme_job_50 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_163;
	__insieme_type_1* var_164;
	__insieme_type_28* var_165;
	__insieme_type_3 var_169;
	__insieme_type_3 var_170;
	// ---- additional captured variables -----
	__insieme_type_3 var_530;
	__insieme_type_1* var_531;
	__insieme_type_1* var_532;
	__insieme_type_28* var_533;
	__insieme_type_3 var_534;
	__insieme_type_1* var_535;
	unsigned int var_536;
	int var_537;
};

// start code fragment :: Definitions for function type: __insieme_funType_52 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_52 <-> ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_52 { 
    void(*call)(void*, __insieme_type_1*, __insieme_type_1*, __insieme_type_28*, __insieme_type_1*, unsigned int, int, __insieme_type_3, __insieme_type_3);
} __insieme_funType_52;

// Type safe function for invoking closures of type __insieme_funType_52
static inline void __insieme_funType_52_call(__insieme_funType_52* closure, __insieme_type_1* p1, __insieme_type_1* p2, __insieme_type_28* p3, __insieme_type_1* p4, unsigned int p5, int p6, __insieme_type_3 p7, __insieme_type_3 p8) {  closure->call(closure, p1,p2,p3,p4,p5,p6,p7,p8); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_52* __insieme_funType_52_ctr(__insieme_funType_52* target, void(*call)(void*, __insieme_type_1*, __insieme_type_1*, __insieme_type_28*, __insieme_type_1*, unsigned int, int, __insieme_type_3, __insieme_type_3)) {
	*target = (__insieme_funType_52){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_51 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_51 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_51;

static inline void __insieme_closure_51_bind(__insieme_closure_51* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_51* __insieme_closure_51_ctr(__insieme_closure_51* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_51){&__insieme_closure_51_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_54 //
struct __insieme_job_54 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_150;
	__insieme_type_1* var_151;
	__insieme_type_28* var_152;
	__insieme_type_1* var_153;
	__insieme_type_3 var_156;
	// ---- additional captured variables -----
	__insieme_type_3 var_538;
	__insieme_type_1* var_539;
	__insieme_type_1* var_540;
	__insieme_type_28* var_541;
	__insieme_type_1* var_542;
	unsigned int var_543;
	int var_544;
};

// start code fragment :: Definitions for function type: __insieme_funType_56 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_56 <-> ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_56 { 
    void(*call)(void*, __insieme_type_1*, __insieme_type_1*, __insieme_type_28*, __insieme_type_1*, unsigned int, int, __insieme_type_3);
} __insieme_funType_56;

// Type safe function for invoking closures of type __insieme_funType_56
static inline void __insieme_funType_56_call(__insieme_funType_56* closure, __insieme_type_1* p1, __insieme_type_1* p2, __insieme_type_28* p3, __insieme_type_1* p4, unsigned int p5, int p6, __insieme_type_3 p7) {  closure->call(closure, p1,p2,p3,p4,p5,p6,p7); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_56* __insieme_funType_56_ctr(__insieme_funType_56* target, void(*call)(void*, __insieme_type_1*, __insieme_type_1*, __insieme_type_28*, __insieme_type_1*, unsigned int, int, __insieme_type_3)) {
	*target = (__insieme_funType_56){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_55 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_55 {
    void(*call)(void*);
    __insieme_funType_56* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
} __insieme_closure_55;

static inline void __insieme_closure_55_bind(__insieme_closure_55* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7); }

static inline __insieme_closure_55* __insieme_closure_55_ctr(__insieme_closure_55* closure, __insieme_funType_56* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7) {
    *closure = (__insieme_closure_55){&__insieme_closure_55_bind, nested, c1, c2, c3, c4, c5, c6, c7};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_57 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit) //
void __insieme_supp_57(__insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_149) { ((((*ga).data[((unsigned int)(0))])) = ((float)((((*gb).data[((unsigned int)(0))]))))); }
static void __insieme_supp_57_wrap(void* _closure, __insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_149) { __insieme_supp_57(c, ga, gb, l, pa, pb, var_149); }

// start code fragment :: function for job __insieme_job_54 //
void fun__insieme_job_54(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_150 = ((struct __insieme_job_54*)args)->var_150;
	__insieme_type_1* var_151 = ((struct __insieme_job_54*)args)->var_151;
	__insieme_type_28* var_152 = ((struct __insieme_job_54*)args)->var_152;
	__insieme_type_1* var_153 = ((struct __insieme_job_54*)args)->var_153;
	__insieme_type_3 var_156 = ((struct __insieme_job_54*)args)->var_156;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_538 = ((struct __insieme_job_54*)args)->var_538;
	__insieme_type_1* var_539 = ((struct __insieme_job_54*)args)->var_539;
	__insieme_type_1* var_540 = ((struct __insieme_job_54*)args)->var_540;
	__insieme_type_28* var_541 = ((struct __insieme_job_54*)args)->var_541;
	__insieme_type_1* var_542 = ((struct __insieme_job_54*)args)->var_542;
	unsigned int var_543 = ((struct __insieme_job_54*)args)->var_543;
	int var_544 = ((struct __insieme_job_54*)args)->var_544;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_55_ctr((__insieme_closure_55*)alloca(sizeof(__insieme_closure_55)),(__insieme_funType_56*)__insieme_funType_56_ctr((__insieme_funType_56*)alloca(sizeof(__insieme_funType_56)),&__insieme_supp_57_wrap), var_150, var_151, var_152, var_153, var_543, var_544, var_156));
}

// start code fragment :: Definition of __insieme_supp_53 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_53(__insieme_type_1* var_158, __insieme_type_1* var_159, __insieme_type_28* var_160, __insieme_type_1* var_161, unsigned int var_154, int var_155, __insieme_type_3 var_148, __insieme_type_3 var_162){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_54)),&((struct __insieme_job_54){sizeof(struct __insieme_job_54),((((1*var_162[0])*var_162[1])*var_162[2])),((((1*var_162[0])*var_162[1])*var_162[2])),&fun__insieme_job_54,var_158,var_159,var_160,var_161,var_162,var_162,var_158,var_159,var_160,var_161,var_154,var_155}),sizeof(struct __insieme_job_54)));
	mergeAll();
}
static void __insieme_supp_53_wrap(void* _closure, __insieme_type_1* var_158, __insieme_type_1* var_159, __insieme_type_28* var_160, __insieme_type_1* var_161, unsigned int var_154, int var_155, __insieme_type_3 var_148, __insieme_type_3 var_162) { __insieme_supp_53(var_158, var_159, var_160, var_161, var_154, var_155, var_148, var_162); }

// start code fragment :: function for job __insieme_job_50 //
void fun__insieme_job_50(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_163 = ((struct __insieme_job_50*)args)->var_163;
	__insieme_type_1* var_164 = ((struct __insieme_job_50*)args)->var_164;
	__insieme_type_28* var_165 = ((struct __insieme_job_50*)args)->var_165;
	__insieme_type_3 var_169 = ((struct __insieme_job_50*)args)->var_169;
	__insieme_type_3 var_170 = ((struct __insieme_job_50*)args)->var_170;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_530 = ((struct __insieme_job_50*)args)->var_530;
	__insieme_type_1* var_531 = ((struct __insieme_job_50*)args)->var_531;
	__insieme_type_1* var_532 = ((struct __insieme_job_50*)args)->var_532;
	__insieme_type_28* var_533 = ((struct __insieme_job_50*)args)->var_533;
	__insieme_type_3 var_534 = ((struct __insieme_job_50*)args)->var_534;
	__insieme_type_1* var_535 = ((struct __insieme_job_50*)args)->var_535;
	unsigned int var_536 = ((struct __insieme_job_50*)args)->var_536;
	int var_537 = ((struct __insieme_job_50*)args)->var_537;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_51_ctr((__insieme_closure_51*)alloca(sizeof(__insieme_closure_51)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_53_wrap), var_163, var_164, var_165, var_535, var_536, var_537, var_169, var_170));
}

// start code fragment :: Definition of allMemArg ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int allMemArg(__insieme_type_1* var_172, __insieme_type_1* var_173, __insieme_type_28* var_174, __insieme_type_1* var_166, unsigned int var_167, int var_168, __insieme_type_3 var_147, __insieme_type_3 var_176){
	__insieme_type_3 var_175 = __insieme_funType_4_call(vector.pointwise(uint.div), var_147, var_176);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_50)),&((struct __insieme_job_50){sizeof(struct __insieme_job_50),((((1*var_175[0])*var_175[1])*var_175[2])),((((1*var_175[0])*var_175[1])*var_175[2])),&fun__insieme_job_50,var_172,var_173,var_174,var_175,var_176,var_175,var_172,var_173,var_174,var_176,var_166,var_167,var_168}),sizeof(struct __insieme_job_50)));
	mergeAll();
	return 0;
}
static int allMemArg_wrap(void* _closure, __insieme_type_1* var_172, __insieme_type_1* var_173, __insieme_type_28* var_174, __insieme_type_1* var_166, unsigned int var_167, int var_168, __insieme_type_3 var_147, __insieme_type_3 var_176) { return allMemArg(var_172, var_173, var_174, var_166, var_167, var_168, var_147, var_176); }

// start code fragment :: struct for job __insieme_job_58 //
struct __insieme_job_58 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_194;
	__insieme_type_1* var_195;
	__insieme_type_28* var_196;
	__insieme_type_3 var_200;
	__insieme_type_3 var_201;
	// ---- additional captured variables -----
	__insieme_type_3 var_545;
	__insieme_type_1* var_546;
	__insieme_type_1* var_547;
	__insieme_type_28* var_548;
	__insieme_type_3 var_549;
	__insieme_type_1* var_550;
	unsigned int var_551;
	int var_552;
};

// start code fragment :: Definition of __insieme_closure_59 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_59 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_59;

static inline void __insieme_closure_59_bind(__insieme_closure_59* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_59* __insieme_closure_59_ctr(__insieme_closure_59* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_59){&__insieme_closure_59_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_61 //
struct __insieme_job_61 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_181;
	__insieme_type_1* var_182;
	__insieme_type_28* var_183;
	__insieme_type_1* var_184;
	__insieme_type_3 var_187;
	// ---- additional captured variables -----
	__insieme_type_3 var_553;
	__insieme_type_1* var_554;
	__insieme_type_1* var_555;
	__insieme_type_28* var_556;
	__insieme_type_1* var_557;
	unsigned int var_558;
	int var_559;
};

// start code fragment :: Definition of __insieme_closure_62 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_62 {
    void(*call)(void*);
    __insieme_funType_56* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
} __insieme_closure_62;

static inline void __insieme_closure_62_bind(__insieme_closure_62* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7); }

static inline __insieme_closure_62* __insieme_closure_62_ctr(__insieme_closure_62* closure, __insieme_funType_56* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7) {
    *closure = (__insieme_closure_62){&__insieme_closure_62_bind, nested, c1, c2, c3, c4, c5, c6, c7};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_63 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit) //
void __insieme_supp_63(__insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_180){
	((((*l).data[((unsigned int)((((*gb).data[((unsigned int)(0))]))))])) = 3.3f);
	((((*ga).data[((unsigned int)(pa))])) = ((((*c).data[((unsigned int)(1))]))*(((*l).data[((unsigned int)((((*gb).data[((unsigned int)(0))]))))]))));
}
static void __insieme_supp_63_wrap(void* _closure, __insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_180) { __insieme_supp_63(c, ga, gb, l, pa, pb, var_180); }

// start code fragment :: function for job __insieme_job_61 //
void fun__insieme_job_61(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_181 = ((struct __insieme_job_61*)args)->var_181;
	__insieme_type_1* var_182 = ((struct __insieme_job_61*)args)->var_182;
	__insieme_type_28* var_183 = ((struct __insieme_job_61*)args)->var_183;
	__insieme_type_1* var_184 = ((struct __insieme_job_61*)args)->var_184;
	__insieme_type_3 var_187 = ((struct __insieme_job_61*)args)->var_187;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_553 = ((struct __insieme_job_61*)args)->var_553;
	__insieme_type_1* var_554 = ((struct __insieme_job_61*)args)->var_554;
	__insieme_type_1* var_555 = ((struct __insieme_job_61*)args)->var_555;
	__insieme_type_28* var_556 = ((struct __insieme_job_61*)args)->var_556;
	__insieme_type_1* var_557 = ((struct __insieme_job_61*)args)->var_557;
	unsigned int var_558 = ((struct __insieme_job_61*)args)->var_558;
	int var_559 = ((struct __insieme_job_61*)args)->var_559;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_62_ctr((__insieme_closure_62*)alloca(sizeof(__insieme_closure_62)),(__insieme_funType_56*)__insieme_funType_56_ctr((__insieme_funType_56*)alloca(sizeof(__insieme_funType_56)),&__insieme_supp_63_wrap), var_181, var_182, var_183, var_184, var_558, var_559, var_187));
}

// start code fragment :: Definition of __insieme_supp_60 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_60(__insieme_type_1* var_189, __insieme_type_1* var_190, __insieme_type_28* var_191, __insieme_type_1* var_192, unsigned int var_185, int var_186, __insieme_type_3 var_179, __insieme_type_3 var_193){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_61)),&((struct __insieme_job_61){sizeof(struct __insieme_job_61),((((1*var_193[0])*var_193[1])*var_193[2])),((((1*var_193[0])*var_193[1])*var_193[2])),&fun__insieme_job_61,var_189,var_190,var_191,var_192,var_193,var_193,var_189,var_190,var_191,var_192,var_185,var_186}),sizeof(struct __insieme_job_61)));
	mergeAll();
}
static void __insieme_supp_60_wrap(void* _closure, __insieme_type_1* var_189, __insieme_type_1* var_190, __insieme_type_28* var_191, __insieme_type_1* var_192, unsigned int var_185, int var_186, __insieme_type_3 var_179, __insieme_type_3 var_193) { __insieme_supp_60(var_189, var_190, var_191, var_192, var_185, var_186, var_179, var_193); }

// start code fragment :: function for job __insieme_job_58 //
void fun__insieme_job_58(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_194 = ((struct __insieme_job_58*)args)->var_194;
	__insieme_type_1* var_195 = ((struct __insieme_job_58*)args)->var_195;
	__insieme_type_28* var_196 = ((struct __insieme_job_58*)args)->var_196;
	__insieme_type_3 var_200 = ((struct __insieme_job_58*)args)->var_200;
	__insieme_type_3 var_201 = ((struct __insieme_job_58*)args)->var_201;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_545 = ((struct __insieme_job_58*)args)->var_545;
	__insieme_type_1* var_546 = ((struct __insieme_job_58*)args)->var_546;
	__insieme_type_1* var_547 = ((struct __insieme_job_58*)args)->var_547;
	__insieme_type_28* var_548 = ((struct __insieme_job_58*)args)->var_548;
	__insieme_type_3 var_549 = ((struct __insieme_job_58*)args)->var_549;
	__insieme_type_1* var_550 = ((struct __insieme_job_58*)args)->var_550;
	unsigned int var_551 = ((struct __insieme_job_58*)args)->var_551;
	int var_552 = ((struct __insieme_job_58*)args)->var_552;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_59_ctr((__insieme_closure_59*)alloca(sizeof(__insieme_closure_59)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_60_wrap), var_194, var_195, var_196, var_550, var_551, var_552, var_200, var_201));
}

// start code fragment :: Definition of simpleCalc ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int simpleCalc(__insieme_type_1* var_203, __insieme_type_1* var_204, __insieme_type_28* var_205, __insieme_type_1* var_197, unsigned int var_198, int var_199, __insieme_type_3 var_178, __insieme_type_3 var_207){
	__insieme_type_3 var_206 = __insieme_funType_4_call(vector.pointwise(uint.div), var_178, var_207);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_58)),&((struct __insieme_job_58){sizeof(struct __insieme_job_58),((((1*var_206[0])*var_206[1])*var_206[2])),((((1*var_206[0])*var_206[1])*var_206[2])),&fun__insieme_job_58,var_203,var_204,var_205,var_206,var_207,var_206,var_203,var_204,var_205,var_207,var_197,var_198,var_199}),sizeof(struct __insieme_job_58)));
	mergeAll();
	return 0;
}
static int simpleCalc_wrap(void* _closure, __insieme_type_1* var_203, __insieme_type_1* var_204, __insieme_type_28* var_205, __insieme_type_1* var_197, unsigned int var_198, int var_199, __insieme_type_3 var_178, __insieme_type_3 var_207) { return simpleCalc(var_203, var_204, var_205, var_197, var_198, var_199, var_178, var_207); }

// start code fragment :: struct for job __insieme_job_64 //
struct __insieme_job_64 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_233;
	__insieme_type_1* var_234;
	__insieme_type_28* var_235;
	__insieme_type_3 var_239;
	__insieme_type_3 var_240;
	// ---- additional captured variables -----
	__insieme_type_3 var_560;
	__insieme_type_1* var_561;
	__insieme_type_1* var_562;
	__insieme_type_28* var_563;
	__insieme_type_3 var_564;
	__insieme_type_1* var_565;
	unsigned int var_566;
	int var_567;
};

// start code fragment :: Definition of __insieme_closure_65 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_65 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_65;

static inline void __insieme_closure_65_bind(__insieme_closure_65* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_65* __insieme_closure_65_ctr(__insieme_closure_65* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_65){&__insieme_closure_65_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_67 //
struct __insieme_job_67 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_218;
	__insieme_type_1* var_219;
	__insieme_type_28* var_220;
	__insieme_type_1* var_221;
	__insieme_type_3 var_224;
	__insieme_type_3 var_225;
	// ---- additional captured variables -----
	__insieme_type_3 var_568;
	__insieme_type_1* var_569;
	__insieme_type_1* var_570;
	__insieme_type_28* var_571;
	__insieme_type_1* var_572;
	__insieme_type_3 var_573;
	unsigned int var_574;
	int var_575;
};

// start code fragment :: Definition of __insieme_closure_68 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_68 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_68;

static inline void __insieme_closure_68_bind(__insieme_closure_68* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_68* __insieme_closure_68_ctr(__insieme_closure_68* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_68){&__insieme_closure_68_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_71 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_71(unsigned int var_212, __insieme_type_3 var_214, __insieme_type_3 var_213){
	unsigned int var_215 = isbr_getThreadId(0);
	unsigned int var_216 = isbr_getThreadId(1);
	switch(var_212) {
	case 0:
		return (((var_215/var_213[2])/var_213[1])+(var_213[0]*((var_216/var_214[2])/var_214[1]))); break;
	case 1:
		return (((var_215/var_213[2])%var_213[1])+(var_213[1]*((var_216/var_214[2])%var_214[1]))); break;
	case 2:
		return ((var_215%var_213[2])+(var_213[2]*((var_216/var_214[2])%var_214[1]))); break;
	};
}
static unsigned int __insieme_supp_71_wrap(void* _closure, unsigned int var_212, __insieme_type_3 var_214, __insieme_type_3 var_213) { return __insieme_supp_71(var_212, var_214, var_213); }

// start code fragment :: Definition of __insieme_supp_69 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_69(__insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_210, __insieme_type_3 var_211){
	unsigned int gid = __insieme_supp_71(((unsigned int)(0)), var_210, var_211);
	((((*ga).data[((unsigned int)((gid)))])) = ((float)((gid))));
}
static void __insieme_supp_69_wrap(void* _closure, __insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_210, __insieme_type_3 var_211) { __insieme_supp_69(c, ga, gb, l, pa, pb, var_210, var_211); }

// start code fragment :: function for job __insieme_job_67 //
void fun__insieme_job_67(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_218 = ((struct __insieme_job_67*)args)->var_218;
	__insieme_type_1* var_219 = ((struct __insieme_job_67*)args)->var_219;
	__insieme_type_28* var_220 = ((struct __insieme_job_67*)args)->var_220;
	__insieme_type_1* var_221 = ((struct __insieme_job_67*)args)->var_221;
	__insieme_type_3 var_224 = ((struct __insieme_job_67*)args)->var_224;
	__insieme_type_3 var_225 = ((struct __insieme_job_67*)args)->var_225;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_568 = ((struct __insieme_job_67*)args)->var_568;
	__insieme_type_1* var_569 = ((struct __insieme_job_67*)args)->var_569;
	__insieme_type_1* var_570 = ((struct __insieme_job_67*)args)->var_570;
	__insieme_type_28* var_571 = ((struct __insieme_job_67*)args)->var_571;
	__insieme_type_1* var_572 = ((struct __insieme_job_67*)args)->var_572;
	__insieme_type_3 var_573 = ((struct __insieme_job_67*)args)->var_573;
	unsigned int var_574 = ((struct __insieme_job_67*)args)->var_574;
	int var_575 = ((struct __insieme_job_67*)args)->var_575;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_68_ctr((__insieme_closure_68*)alloca(sizeof(__insieme_closure_68)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_69_wrap), var_218, var_219, var_220, var_221, var_574, var_575, var_224, var_225));
}

// start code fragment :: Definition of __insieme_supp_66 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_66(__insieme_type_1* var_227, __insieme_type_1* var_228, __insieme_type_28* var_229, __insieme_type_1* var_230, unsigned int var_222, int var_223, __insieme_type_3 var_231, __insieme_type_3 var_232){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_67)),&((struct __insieme_job_67){sizeof(struct __insieme_job_67),((((1*var_232[0])*var_232[1])*var_232[2])),((((1*var_232[0])*var_232[1])*var_232[2])),&fun__insieme_job_67,var_227,var_228,var_229,var_230,var_231,var_232,var_232,var_227,var_228,var_229,var_230,var_231,var_222,var_223}),sizeof(struct __insieme_job_67)));
	mergeAll();
}
static void __insieme_supp_66_wrap(void* _closure, __insieme_type_1* var_227, __insieme_type_1* var_228, __insieme_type_28* var_229, __insieme_type_1* var_230, unsigned int var_222, int var_223, __insieme_type_3 var_231, __insieme_type_3 var_232) { __insieme_supp_66(var_227, var_228, var_229, var_230, var_222, var_223, var_231, var_232); }

// start code fragment :: function for job __insieme_job_64 //
void fun__insieme_job_64(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_233 = ((struct __insieme_job_64*)args)->var_233;
	__insieme_type_1* var_234 = ((struct __insieme_job_64*)args)->var_234;
	__insieme_type_28* var_235 = ((struct __insieme_job_64*)args)->var_235;
	__insieme_type_3 var_239 = ((struct __insieme_job_64*)args)->var_239;
	__insieme_type_3 var_240 = ((struct __insieme_job_64*)args)->var_240;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_560 = ((struct __insieme_job_64*)args)->var_560;
	__insieme_type_1* var_561 = ((struct __insieme_job_64*)args)->var_561;
	__insieme_type_1* var_562 = ((struct __insieme_job_64*)args)->var_562;
	__insieme_type_28* var_563 = ((struct __insieme_job_64*)args)->var_563;
	__insieme_type_3 var_564 = ((struct __insieme_job_64*)args)->var_564;
	__insieme_type_1* var_565 = ((struct __insieme_job_64*)args)->var_565;
	unsigned int var_566 = ((struct __insieme_job_64*)args)->var_566;
	int var_567 = ((struct __insieme_job_64*)args)->var_567;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_65_ctr((__insieme_closure_65*)alloca(sizeof(__insieme_closure_65)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_66_wrap), var_233, var_234, var_235, var_565, var_566, var_567, var_239, var_240));
}

// start code fragment :: Definition of getId ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int getId(__insieme_type_1* var_242, __insieme_type_1* var_243, __insieme_type_28* var_244, __insieme_type_1* var_236, unsigned int var_237, int var_238, __insieme_type_3 var_209, __insieme_type_3 var_246){
	__insieme_type_3 var_245 = __insieme_funType_4_call(vector.pointwise(uint.div), var_209, var_246);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_64)),&((struct __insieme_job_64){sizeof(struct __insieme_job_64),((((1*var_245[0])*var_245[1])*var_245[2])),((((1*var_245[0])*var_245[1])*var_245[2])),&fun__insieme_job_64,var_242,var_243,var_244,var_245,var_246,var_245,var_242,var_243,var_244,var_246,var_236,var_237,var_238}),sizeof(struct __insieme_job_64)));
	mergeAll();
	return 0;
}
static int getId_wrap(void* _closure, __insieme_type_1* var_242, __insieme_type_1* var_243, __insieme_type_28* var_244, __insieme_type_1* var_236, unsigned int var_237, int var_238, __insieme_type_3 var_209, __insieme_type_3 var_246) { return getId(var_242, var_243, var_244, var_236, var_237, var_238, var_209, var_246); }

// start code fragment :: struct for job __insieme_job_72 //
struct __insieme_job_72 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_268;
	__insieme_type_1* var_269;
	__insieme_type_28* var_270;
	__insieme_type_3 var_274;
	__insieme_type_3 var_275;
	__insieme_type_3 var_276;
	// ---- additional captured variables -----
	__insieme_type_3 var_576;
	__insieme_type_1* var_577;
	__insieme_type_1* var_578;
	__insieme_type_28* var_579;
	__insieme_type_3 var_580;
	__insieme_type_3 var_581;
	__insieme_type_1* var_582;
	unsigned int var_583;
	int var_584;
};

// start code fragment :: Definitions for function type: __insieme_funType_74 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_74 <-> ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_74 { 
    void(*call)(void*, __insieme_type_1*, __insieme_type_1*, __insieme_type_28*, __insieme_type_1*, unsigned int, int, __insieme_type_3, __insieme_type_3, __insieme_type_3);
} __insieme_funType_74;

// Type safe function for invoking closures of type __insieme_funType_74
static inline void __insieme_funType_74_call(__insieme_funType_74* closure, __insieme_type_1* p1, __insieme_type_1* p2, __insieme_type_28* p3, __insieme_type_1* p4, unsigned int p5, int p6, __insieme_type_3 p7, __insieme_type_3 p8, __insieme_type_3 p9) {  closure->call(closure, p1,p2,p3,p4,p5,p6,p7,p8,p9); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_74* __insieme_funType_74_ctr(__insieme_funType_74* target, void(*call)(void*, __insieme_type_1*, __insieme_type_1*, __insieme_type_28*, __insieme_type_1*, unsigned int, int, __insieme_type_3, __insieme_type_3, __insieme_type_3)) {
	*target = (__insieme_funType_74){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_73 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_73 {
    void(*call)(void*);
    __insieme_funType_74* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
    __insieme_type_3 c9;
} __insieme_closure_73;

static inline void __insieme_closure_73_bind(__insieme_closure_73* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8,closure->c9); }

static inline __insieme_closure_73* __insieme_closure_73_ctr(__insieme_closure_73* closure, __insieme_funType_74* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8, __insieme_type_3 c9) {
    *closure = (__insieme_closure_73){&__insieme_closure_73_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8, c9};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_76 //
struct __insieme_job_76 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_251;
	__insieme_type_1* var_252;
	__insieme_type_28* var_253;
	__insieme_type_1* var_254;
	__insieme_type_3 var_257;
	__insieme_type_3 var_258;
	__insieme_type_3 var_259;
	// ---- additional captured variables -----
	__insieme_type_3 var_585;
	__insieme_type_1* var_586;
	__insieme_type_1* var_587;
	__insieme_type_28* var_588;
	__insieme_type_1* var_589;
	__insieme_type_3 var_590;
	__insieme_type_3 var_591;
	unsigned int var_592;
	int var_593;
};

// start code fragment :: Definition of __insieme_closure_77 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_77 {
    void(*call)(void*);
    __insieme_funType_74* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
    __insieme_type_3 c9;
} __insieme_closure_77;

static inline void __insieme_closure_77_bind(__insieme_closure_77* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8,closure->c9); }

static inline __insieme_closure_77* __insieme_closure_77_ctr(__insieme_closure_77* closure, __insieme_funType_74* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8, __insieme_type_3 c9) {
    *closure = (__insieme_closure_77){&__insieme_closure_77_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8, c9};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_78 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_78(__insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_248, __insieme_type_3 var_249, __insieme_type_3 var_250){
	((((*ga).data[((unsigned int)(0))])) = ((float)(var_248[((unsigned int)(0))])));
	((((*ga).data[((unsigned int)(1))])) = ((float)(var_248[((unsigned int)(1))])));
	((((*ga).data[((unsigned int)(2))])) = ((float)(var_248[((unsigned int)(2))])));
	((((*ga).data[((unsigned int)(3))])) = ((float)(var_250[((unsigned int)(0))])));
	((((*ga).data[((unsigned int)(4))])) = ((float)(var_250[((unsigned int)(1))])));
	((((*ga).data[((unsigned int)(5))])) = ((float)(var_250[((unsigned int)(2))])));
	((((*ga).data[((unsigned int)(6))])) = ((float)(var_249[((unsigned int)(0))])));
	((((*ga).data[((unsigned int)(7))])) = ((float)(var_249[((unsigned int)(1))])));
	((((*ga).data[((unsigned int)(8))])) = ((float)(var_249[((unsigned int)(2))])));
}
static void __insieme_supp_78_wrap(void* _closure, __insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_248, __insieme_type_3 var_249, __insieme_type_3 var_250) { __insieme_supp_78(c, ga, gb, l, pa, pb, var_248, var_249, var_250); }

// start code fragment :: function for job __insieme_job_76 //
void fun__insieme_job_76(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_251 = ((struct __insieme_job_76*)args)->var_251;
	__insieme_type_1* var_252 = ((struct __insieme_job_76*)args)->var_252;
	__insieme_type_28* var_253 = ((struct __insieme_job_76*)args)->var_253;
	__insieme_type_1* var_254 = ((struct __insieme_job_76*)args)->var_254;
	__insieme_type_3 var_257 = ((struct __insieme_job_76*)args)->var_257;
	__insieme_type_3 var_258 = ((struct __insieme_job_76*)args)->var_258;
	__insieme_type_3 var_259 = ((struct __insieme_job_76*)args)->var_259;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_585 = ((struct __insieme_job_76*)args)->var_585;
	__insieme_type_1* var_586 = ((struct __insieme_job_76*)args)->var_586;
	__insieme_type_1* var_587 = ((struct __insieme_job_76*)args)->var_587;
	__insieme_type_28* var_588 = ((struct __insieme_job_76*)args)->var_588;
	__insieme_type_1* var_589 = ((struct __insieme_job_76*)args)->var_589;
	__insieme_type_3 var_590 = ((struct __insieme_job_76*)args)->var_590;
	__insieme_type_3 var_591 = ((struct __insieme_job_76*)args)->var_591;
	unsigned int var_592 = ((struct __insieme_job_76*)args)->var_592;
	int var_593 = ((struct __insieme_job_76*)args)->var_593;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_77_ctr((__insieme_closure_77*)alloca(sizeof(__insieme_closure_77)),(__insieme_funType_74*)__insieme_funType_74_ctr((__insieme_funType_74*)alloca(sizeof(__insieme_funType_74)),&__insieme_supp_78_wrap), var_251, var_252, var_253, var_254, var_592, var_593, var_257, var_258, var_259));
}

// start code fragment :: Definition of __insieme_supp_75 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_75(__insieme_type_1* var_261, __insieme_type_1* var_262, __insieme_type_28* var_263, __insieme_type_1* var_264, unsigned int var_255, int var_256, __insieme_type_3 var_265, __insieme_type_3 var_266, __insieme_type_3 var_267){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_76)),&((struct __insieme_job_76){sizeof(struct __insieme_job_76),((((1*var_267[0])*var_267[1])*var_267[2])),((((1*var_267[0])*var_267[1])*var_267[2])),&fun__insieme_job_76,var_261,var_262,var_263,var_264,var_265,var_266,var_267,var_267,var_261,var_262,var_263,var_264,var_265,var_266,var_255,var_256}),sizeof(struct __insieme_job_76)));
	mergeAll();
}
static void __insieme_supp_75_wrap(void* _closure, __insieme_type_1* var_261, __insieme_type_1* var_262, __insieme_type_28* var_263, __insieme_type_1* var_264, unsigned int var_255, int var_256, __insieme_type_3 var_265, __insieme_type_3 var_266, __insieme_type_3 var_267) { __insieme_supp_75(var_261, var_262, var_263, var_264, var_255, var_256, var_265, var_266, var_267); }

// start code fragment :: function for job __insieme_job_72 //
void fun__insieme_job_72(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_268 = ((struct __insieme_job_72*)args)->var_268;
	__insieme_type_1* var_269 = ((struct __insieme_job_72*)args)->var_269;
	__insieme_type_28* var_270 = ((struct __insieme_job_72*)args)->var_270;
	__insieme_type_3 var_274 = ((struct __insieme_job_72*)args)->var_274;
	__insieme_type_3 var_275 = ((struct __insieme_job_72*)args)->var_275;
	__insieme_type_3 var_276 = ((struct __insieme_job_72*)args)->var_276;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_576 = ((struct __insieme_job_72*)args)->var_576;
	__insieme_type_1* var_577 = ((struct __insieme_job_72*)args)->var_577;
	__insieme_type_1* var_578 = ((struct __insieme_job_72*)args)->var_578;
	__insieme_type_28* var_579 = ((struct __insieme_job_72*)args)->var_579;
	__insieme_type_3 var_580 = ((struct __insieme_job_72*)args)->var_580;
	__insieme_type_3 var_581 = ((struct __insieme_job_72*)args)->var_581;
	__insieme_type_1* var_582 = ((struct __insieme_job_72*)args)->var_582;
	unsigned int var_583 = ((struct __insieme_job_72*)args)->var_583;
	int var_584 = ((struct __insieme_job_72*)args)->var_584;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_73_ctr((__insieme_closure_73*)alloca(sizeof(__insieme_closure_73)),(__insieme_funType_74*)__insieme_funType_74_ctr((__insieme_funType_74*)alloca(sizeof(__insieme_funType_74)),&__insieme_supp_75_wrap), var_268, var_269, var_270, var_582, var_583, var_584, var_274, var_275, var_276));
}

// start code fragment :: Definition of getSize ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int getSize(__insieme_type_1* var_278, __insieme_type_1* var_279, __insieme_type_28* var_280, __insieme_type_1* var_271, unsigned int var_272, int var_273, __insieme_type_3 var_281, __insieme_type_3 var_283){
	__insieme_type_3 var_282 = __insieme_funType_4_call(vector.pointwise(uint.div), var_281, var_283);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_72)),&((struct __insieme_job_72){sizeof(struct __insieme_job_72),((((1*var_282[0])*var_282[1])*var_282[2])),((((1*var_282[0])*var_282[1])*var_282[2])),&fun__insieme_job_72,var_278,var_279,var_280,var_281,var_282,var_283,var_282,var_278,var_279,var_280,var_281,var_283,var_271,var_272,var_273}),sizeof(struct __insieme_job_72)));
	mergeAll();
	return 0;
}
static int getSize_wrap(void* _closure, __insieme_type_1* var_278, __insieme_type_1* var_279, __insieme_type_28* var_280, __insieme_type_1* var_271, unsigned int var_272, int var_273, __insieme_type_3 var_281, __insieme_type_3 var_283) { return getSize(var_278, var_279, var_280, var_271, var_272, var_273, var_281, var_283); }

// start code fragment :: struct for job __insieme_job_79 //
struct __insieme_job_79 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_301;
	__insieme_type_1* var_302;
	__insieme_type_28* var_303;
	__insieme_type_3 var_307;
	__insieme_type_3 var_308;
	// ---- additional captured variables -----
	__insieme_type_3 var_594;
	__insieme_type_1* var_595;
	__insieme_type_1* var_596;
	__insieme_type_28* var_597;
	__insieme_type_3 var_598;
	__insieme_type_1* var_599;
	unsigned int var_600;
	int var_601;
};

// start code fragment :: Definition of __insieme_closure_80 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_80 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_80;

static inline void __insieme_closure_80_bind(__insieme_closure_80* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_80* __insieme_closure_80_ctr(__insieme_closure_80* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_80){&__insieme_closure_80_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_82 //
struct __insieme_job_82 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_288;
	__insieme_type_1* var_289;
	__insieme_type_28* var_290;
	__insieme_type_1* var_291;
	__insieme_type_3 var_294;
	// ---- additional captured variables -----
	__insieme_type_3 var_602;
	__insieme_type_1* var_603;
	__insieme_type_1* var_604;
	__insieme_type_28* var_605;
	__insieme_type_1* var_606;
	unsigned int var_607;
	int var_608;
};

// start code fragment :: Definition of __insieme_closure_83 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_83 {
    void(*call)(void*);
    __insieme_funType_56* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
} __insieme_closure_83;

static inline void __insieme_closure_83_bind(__insieme_closure_83* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7); }

static inline __insieme_closure_83* __insieme_closure_83_ctr(__insieme_closure_83* closure, __insieme_funType_56* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7) {
    *closure = (__insieme_closure_83){&__insieme_closure_83_bind, nested, c1, c2, c3, c4, c5, c6, c7};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_84 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>)->unit) //
void __insieme_supp_84(__insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_287) { if((pa==((unsigned int)(pb)))) { ((((*ga).data[((unsigned int)(0))])) = (((*c).data[((unsigned int)(0))]))); }; }
static void __insieme_supp_84_wrap(void* _closure, __insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_287) { __insieme_supp_84(c, ga, gb, l, pa, pb, var_287); }

// start code fragment :: function for job __insieme_job_82 //
void fun__insieme_job_82(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_288 = ((struct __insieme_job_82*)args)->var_288;
	__insieme_type_1* var_289 = ((struct __insieme_job_82*)args)->var_289;
	__insieme_type_28* var_290 = ((struct __insieme_job_82*)args)->var_290;
	__insieme_type_1* var_291 = ((struct __insieme_job_82*)args)->var_291;
	__insieme_type_3 var_294 = ((struct __insieme_job_82*)args)->var_294;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_602 = ((struct __insieme_job_82*)args)->var_602;
	__insieme_type_1* var_603 = ((struct __insieme_job_82*)args)->var_603;
	__insieme_type_1* var_604 = ((struct __insieme_job_82*)args)->var_604;
	__insieme_type_28* var_605 = ((struct __insieme_job_82*)args)->var_605;
	__insieme_type_1* var_606 = ((struct __insieme_job_82*)args)->var_606;
	unsigned int var_607 = ((struct __insieme_job_82*)args)->var_607;
	int var_608 = ((struct __insieme_job_82*)args)->var_608;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_83_ctr((__insieme_closure_83*)alloca(sizeof(__insieme_closure_83)),(__insieme_funType_56*)__insieme_funType_56_ctr((__insieme_funType_56*)alloca(sizeof(__insieme_funType_56)),&__insieme_supp_84_wrap), var_288, var_289, var_290, var_291, var_607, var_608, var_294));
}

// start code fragment :: Definition of __insieme_supp_81 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_81(__insieme_type_1* var_296, __insieme_type_1* var_297, __insieme_type_28* var_298, __insieme_type_1* var_299, unsigned int var_292, int var_293, __insieme_type_3 var_286, __insieme_type_3 var_300){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_82)),&((struct __insieme_job_82){sizeof(struct __insieme_job_82),((((1*var_300[0])*var_300[1])*var_300[2])),((((1*var_300[0])*var_300[1])*var_300[2])),&fun__insieme_job_82,var_296,var_297,var_298,var_299,var_300,var_300,var_296,var_297,var_298,var_299,var_292,var_293}),sizeof(struct __insieme_job_82)));
	mergeAll();
}
static void __insieme_supp_81_wrap(void* _closure, __insieme_type_1* var_296, __insieme_type_1* var_297, __insieme_type_28* var_298, __insieme_type_1* var_299, unsigned int var_292, int var_293, __insieme_type_3 var_286, __insieme_type_3 var_300) { __insieme_supp_81(var_296, var_297, var_298, var_299, var_292, var_293, var_286, var_300); }

// start code fragment :: function for job __insieme_job_79 //
void fun__insieme_job_79(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_301 = ((struct __insieme_job_79*)args)->var_301;
	__insieme_type_1* var_302 = ((struct __insieme_job_79*)args)->var_302;
	__insieme_type_28* var_303 = ((struct __insieme_job_79*)args)->var_303;
	__insieme_type_3 var_307 = ((struct __insieme_job_79*)args)->var_307;
	__insieme_type_3 var_308 = ((struct __insieme_job_79*)args)->var_308;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_594 = ((struct __insieme_job_79*)args)->var_594;
	__insieme_type_1* var_595 = ((struct __insieme_job_79*)args)->var_595;
	__insieme_type_1* var_596 = ((struct __insieme_job_79*)args)->var_596;
	__insieme_type_28* var_597 = ((struct __insieme_job_79*)args)->var_597;
	__insieme_type_3 var_598 = ((struct __insieme_job_79*)args)->var_598;
	__insieme_type_1* var_599 = ((struct __insieme_job_79*)args)->var_599;
	unsigned int var_600 = ((struct __insieme_job_79*)args)->var_600;
	int var_601 = ((struct __insieme_job_79*)args)->var_601;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_80_ctr((__insieme_closure_80*)alloca(sizeof(__insieme_closure_80)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_81_wrap), var_301, var_302, var_303, var_599, var_600, var_601, var_307, var_308));
}

// start code fragment :: Definition of branch ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int branch(__insieme_type_1* var_310, __insieme_type_1* var_311, __insieme_type_28* var_312, __insieme_type_1* var_304, unsigned int var_305, int var_306, __insieme_type_3 var_285, __insieme_type_3 var_314){
	__insieme_type_3 var_313 = __insieme_funType_4_call(vector.pointwise(uint.div), var_285, var_314);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_79)),&((struct __insieme_job_79){sizeof(struct __insieme_job_79),((((1*var_313[0])*var_313[1])*var_313[2])),((((1*var_313[0])*var_313[1])*var_313[2])),&fun__insieme_job_79,var_310,var_311,var_312,var_313,var_314,var_313,var_310,var_311,var_312,var_314,var_304,var_305,var_306}),sizeof(struct __insieme_job_79)));
	mergeAll();
	return 0;
}
static int branch_wrap(void* _closure, __insieme_type_1* var_310, __insieme_type_1* var_311, __insieme_type_28* var_312, __insieme_type_1* var_304, unsigned int var_305, int var_306, __insieme_type_3 var_285, __insieme_type_3 var_314) { return branch(var_310, var_311, var_312, var_304, var_305, var_306, var_285, var_314); }

// start code fragment :: struct for job __insieme_job_85 //
struct __insieme_job_85 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_352;
	__insieme_type_1* var_353;
	__insieme_type_28* var_354;
	__insieme_type_3 var_358;
	__insieme_type_3 var_359;
	// ---- additional captured variables -----
	__insieme_type_3 var_609;
	__insieme_type_1* var_610;
	__insieme_type_1* var_611;
	__insieme_type_28* var_612;
	__insieme_type_3 var_613;
	__insieme_type_1* var_614;
	unsigned int var_615;
	int var_616;
};

// start code fragment :: Definition of __insieme_closure_86 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_86 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_86;

static inline void __insieme_closure_86_bind(__insieme_closure_86* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_86* __insieme_closure_86_ctr(__insieme_closure_86* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_86){&__insieme_closure_86_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_88 //
struct __insieme_job_88 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_337;
	__insieme_type_1* var_338;
	__insieme_type_28* var_339;
	__insieme_type_1* var_340;
	__insieme_type_3 var_343;
	__insieme_type_3 var_344;
	// ---- additional captured variables -----
	__insieme_type_3 var_617;
	__insieme_type_1* var_618;
	__insieme_type_1* var_619;
	__insieme_type_28* var_620;
	__insieme_type_1* var_621;
	__insieme_type_3 var_622;
	unsigned int var_623;
	int var_624;
};

// start code fragment :: Definition of __insieme_closure_89 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_89 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_89;

static inline void __insieme_closure_89_bind(__insieme_closure_89* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_89* __insieme_closure_89_ctr(__insieme_closure_89* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_89){&__insieme_closure_89_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_92 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_92(unsigned int var_319, __insieme_type_3 var_321, __insieme_type_3 var_320){
	unsigned int var_322 = isbr_getThreadId(0);
	unsigned int var_323 = isbr_getThreadId(1);
	switch(var_319) {
	case 0:
		return (((var_322/var_320[2])/var_320[1])+(var_320[0]*((var_323/var_321[2])/var_321[1]))); break;
	case 1:
		return (((var_322/var_320[2])%var_320[1])+(var_320[1]*((var_323/var_321[2])%var_321[1]))); break;
	case 2:
		return ((var_322%var_320[2])+(var_320[2]*((var_323/var_321[2])%var_321[1]))); break;
	};
}
static unsigned int __insieme_supp_92_wrap(void* _closure, unsigned int var_319, __insieme_type_3 var_321, __insieme_type_3 var_320) { return __insieme_supp_92(var_319, var_321, var_320); }

// start code fragment :: Definition of __insieme_supp_93 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_93(unsigned int var_325, __insieme_type_3 var_327, __insieme_type_3 var_326){
	unsigned int var_328 = isbr_getThreadId(0);
	unsigned int var_329 = isbr_getThreadId(1);
	switch(var_325) {
	case 0:
		return (((var_328/var_326[2])/var_326[1])+(var_326[0]*((var_329/var_327[2])/var_327[1]))); break;
	case 1:
		return (((var_328/var_326[2])%var_326[1])+(var_326[1]*((var_329/var_327[2])%var_327[1]))); break;
	case 2:
		return ((var_328%var_326[2])+(var_326[2]*((var_329/var_327[2])%var_327[1]))); break;
	};
}
static unsigned int __insieme_supp_93_wrap(void* _closure, unsigned int var_325, __insieme_type_3 var_327, __insieme_type_3 var_326) { return __insieme_supp_93(var_325, var_327, var_326); }

// start code fragment :: Definition of __insieme_supp_94 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_94(unsigned int var_331, __insieme_type_3 var_333, __insieme_type_3 var_332){
	unsigned int var_334 = isbr_getThreadId(0);
	unsigned int var_335 = isbr_getThreadId(1);
	switch(var_331) {
	case 0:
		return (((var_334/var_332[2])/var_332[1])+(var_332[0]*((var_335/var_333[2])/var_333[1]))); break;
	case 1:
		return (((var_334/var_332[2])%var_332[1])+(var_332[1]*((var_335/var_333[2])%var_333[1]))); break;
	case 2:
		return ((var_334%var_332[2])+(var_332[2]*((var_335/var_333[2])%var_333[1]))); break;
	};
}
static unsigned int __insieme_supp_94_wrap(void* _closure, unsigned int var_331, __insieme_type_3 var_333, __insieme_type_3 var_332) { return __insieme_supp_94(var_331, var_333, var_332); }

// start code fragment :: Definition of __insieme_supp_90 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_90(__insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_317, __insieme_type_3 var_318){
	__insieme_type_3 gid;
	((((gid).data[((unsigned int)(0))])) = __insieme_supp_92(((unsigned int)(0)), var_317, var_318));
	((((gid).data[((unsigned int)(1))])) = __insieme_supp_93(((unsigned int)(1)), var_317, var_318));
	((((gid).data[((unsigned int)(2))])) = __insieme_supp_94(((unsigned int)(2)), var_317, var_318));
	unsigned int gid3 = (((((((gid).data[((unsigned int)(0))]))*((unsigned int)((((*gb).data[((unsigned int)(2))])))))*((unsigned int)((((*gb).data[((unsigned int)(1))])))))+((((gid).data[((unsigned int)(1))]))*((unsigned int)((((*gb).data[((unsigned int)(2))]))))))+(((gid).data[((unsigned int)(2))])));
	((((*ga).data[((unsigned int)((gid3)))])) = (((*c).data[((unsigned int)((gid3)))])));
}
static void __insieme_supp_90_wrap(void* _closure, __insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_317, __insieme_type_3 var_318) { __insieme_supp_90(c, ga, gb, l, pa, pb, var_317, var_318); }

// start code fragment :: function for job __insieme_job_88 //
void fun__insieme_job_88(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_337 = ((struct __insieme_job_88*)args)->var_337;
	__insieme_type_1* var_338 = ((struct __insieme_job_88*)args)->var_338;
	__insieme_type_28* var_339 = ((struct __insieme_job_88*)args)->var_339;
	__insieme_type_1* var_340 = ((struct __insieme_job_88*)args)->var_340;
	__insieme_type_3 var_343 = ((struct __insieme_job_88*)args)->var_343;
	__insieme_type_3 var_344 = ((struct __insieme_job_88*)args)->var_344;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_617 = ((struct __insieme_job_88*)args)->var_617;
	__insieme_type_1* var_618 = ((struct __insieme_job_88*)args)->var_618;
	__insieme_type_1* var_619 = ((struct __insieme_job_88*)args)->var_619;
	__insieme_type_28* var_620 = ((struct __insieme_job_88*)args)->var_620;
	__insieme_type_1* var_621 = ((struct __insieme_job_88*)args)->var_621;
	__insieme_type_3 var_622 = ((struct __insieme_job_88*)args)->var_622;
	unsigned int var_623 = ((struct __insieme_job_88*)args)->var_623;
	int var_624 = ((struct __insieme_job_88*)args)->var_624;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_89_ctr((__insieme_closure_89*)alloca(sizeof(__insieme_closure_89)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_90_wrap), var_337, var_338, var_339, var_340, var_623, var_624, var_343, var_344));
}

// start code fragment :: Definition of __insieme_supp_87 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_87(__insieme_type_1* var_346, __insieme_type_1* var_347, __insieme_type_28* var_348, __insieme_type_1* var_349, unsigned int var_341, int var_342, __insieme_type_3 var_350, __insieme_type_3 var_351){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_88)),&((struct __insieme_job_88){sizeof(struct __insieme_job_88),((((1*var_351[0])*var_351[1])*var_351[2])),((((1*var_351[0])*var_351[1])*var_351[2])),&fun__insieme_job_88,var_346,var_347,var_348,var_349,var_350,var_351,var_351,var_346,var_347,var_348,var_349,var_350,var_341,var_342}),sizeof(struct __insieme_job_88)));
	mergeAll();
}
static void __insieme_supp_87_wrap(void* _closure, __insieme_type_1* var_346, __insieme_type_1* var_347, __insieme_type_28* var_348, __insieme_type_1* var_349, unsigned int var_341, int var_342, __insieme_type_3 var_350, __insieme_type_3 var_351) { __insieme_supp_87(var_346, var_347, var_348, var_349, var_341, var_342, var_350, var_351); }

// start code fragment :: function for job __insieme_job_85 //
void fun__insieme_job_85(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_352 = ((struct __insieme_job_85*)args)->var_352;
	__insieme_type_1* var_353 = ((struct __insieme_job_85*)args)->var_353;
	__insieme_type_28* var_354 = ((struct __insieme_job_85*)args)->var_354;
	__insieme_type_3 var_358 = ((struct __insieme_job_85*)args)->var_358;
	__insieme_type_3 var_359 = ((struct __insieme_job_85*)args)->var_359;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_609 = ((struct __insieme_job_85*)args)->var_609;
	__insieme_type_1* var_610 = ((struct __insieme_job_85*)args)->var_610;
	__insieme_type_1* var_611 = ((struct __insieme_job_85*)args)->var_611;
	__insieme_type_28* var_612 = ((struct __insieme_job_85*)args)->var_612;
	__insieme_type_3 var_613 = ((struct __insieme_job_85*)args)->var_613;
	__insieme_type_1* var_614 = ((struct __insieme_job_85*)args)->var_614;
	unsigned int var_615 = ((struct __insieme_job_85*)args)->var_615;
	int var_616 = ((struct __insieme_job_85*)args)->var_616;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_86_ctr((__insieme_closure_86*)alloca(sizeof(__insieme_closure_86)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_87_wrap), var_352, var_353, var_354, var_614, var_615, var_616, var_358, var_359));
}

// start code fragment :: Definition of access3D ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int access3D(__insieme_type_1* var_361, __insieme_type_1* var_362, __insieme_type_28* var_363, __insieme_type_1* var_355, unsigned int var_356, int var_357, __insieme_type_3 var_316, __insieme_type_3 var_365){
	__insieme_type_3 var_364 = __insieme_funType_4_call(vector.pointwise(uint.div), var_316, var_365);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_85)),&((struct __insieme_job_85){sizeof(struct __insieme_job_85),((((1*var_364[0])*var_364[1])*var_364[2])),((((1*var_364[0])*var_364[1])*var_364[2])),&fun__insieme_job_85,var_361,var_362,var_363,var_364,var_365,var_364,var_361,var_362,var_363,var_365,var_355,var_356,var_357}),sizeof(struct __insieme_job_85)));
	mergeAll();
	return 0;
}
static int access3D_wrap(void* _closure, __insieme_type_1* var_361, __insieme_type_1* var_362, __insieme_type_28* var_363, __insieme_type_1* var_355, unsigned int var_356, int var_357, __insieme_type_3 var_316, __insieme_type_3 var_365) { return access3D(var_361, var_362, var_363, var_355, var_356, var_357, var_316, var_365); }

// start code fragment :: struct for job __insieme_job_95 //
struct __insieme_job_95 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_397;
	__insieme_type_1* var_398;
	__insieme_type_28* var_399;
	__insieme_type_3 var_403;
	__insieme_type_3 var_404;
	// ---- additional captured variables -----
	__insieme_type_3 var_625;
	__insieme_type_1* var_626;
	__insieme_type_1* var_627;
	__insieme_type_28* var_628;
	__insieme_type_3 var_629;
	__insieme_type_1* var_630;
	unsigned int var_631;
	int var_632;
};

// start code fragment :: Definition of __insieme_closure_96 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_96 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_96;

static inline void __insieme_closure_96_bind(__insieme_closure_96* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_96* __insieme_closure_96_ctr(__insieme_closure_96* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_96){&__insieme_closure_96_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_98 //
struct __insieme_job_98 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_382;
	__insieme_type_1* var_383;
	__insieme_type_28* var_384;
	__insieme_type_1* var_385;
	__insieme_type_3 var_388;
	__insieme_type_3 var_389;
	// ---- additional captured variables -----
	__insieme_type_3 var_633;
	__insieme_type_1* var_634;
	__insieme_type_1* var_635;
	__insieme_type_28* var_636;
	__insieme_type_1* var_637;
	__insieme_type_3 var_638;
	unsigned int var_639;
	int var_640;
};

// start code fragment :: Definition of __insieme_closure_99 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_99 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_99;

static inline void __insieme_closure_99_bind(__insieme_closure_99* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_99* __insieme_closure_99_ctr(__insieme_closure_99* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_99){&__insieme_closure_99_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_101 ... type: ((uint<4>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_101(unsigned int var_370, __insieme_type_3 var_371){
	unsigned int var_373 = isbr_getThreadId(0);
	switch(var_370) {
	case 0:
		return ((var_373/var_371[2])/var_371[1]); break;
	case 1:
		return ((var_373/var_371[2])%var_371[1]); break;
	case 2:
		return (var_373%var_371[2]); break;
	};
}
static unsigned int __insieme_supp_101_wrap(void* _closure, unsigned int var_370, __insieme_type_3 var_371) { return __insieme_supp_101(var_370, var_371); }

// start code fragment :: Definition of __insieme_supp_102 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_102(unsigned int var_376, __insieme_type_3 var_378, __insieme_type_3 var_377){
	unsigned int var_379 = isbr_getThreadId(0);
	unsigned int var_380 = isbr_getThreadId(1);
	switch(var_376) {
	case 0:
		return (((var_379/var_377[2])/var_377[1])+(var_377[0]*((var_380/var_378[2])/var_378[1]))); break;
	case 1:
		return (((var_379/var_377[2])%var_377[1])+(var_377[1]*((var_380/var_378[2])%var_378[1]))); break;
	case 2:
		return ((var_379%var_377[2])+(var_377[2]*((var_380/var_378[2])%var_378[1]))); break;
	};
}
static unsigned int __insieme_supp_102_wrap(void* _closure, unsigned int var_376, __insieme_type_3 var_378, __insieme_type_3 var_377) { return __insieme_supp_102(var_376, var_378, var_377); }

// start code fragment :: Definition of __insieme_supp_100 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_100(__insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_368, __insieme_type_3 var_369){
	unsigned int lid = __insieme_supp_101(((unsigned int)(0)), var_369);
	unsigned int gid = __insieme_supp_102(((unsigned int)(0)), var_368, var_369);
	((((*l).data[((unsigned int)((lid)))])) = (((*c).data[((unsigned int)((gid)))])));
	barrier(CLK_LOCAL_MEM_FENCE);
	((((*ga).data[((unsigned int)((gid)))])) = (((*l).data[((unsigned int)((lid)))])));
}
static void __insieme_supp_100_wrap(void* _closure, __insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_368, __insieme_type_3 var_369) { __insieme_supp_100(c, ga, gb, l, pa, pb, var_368, var_369); }

// start code fragment :: function for job __insieme_job_98 //
void fun__insieme_job_98(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_382 = ((struct __insieme_job_98*)args)->var_382;
	__insieme_type_1* var_383 = ((struct __insieme_job_98*)args)->var_383;
	__insieme_type_28* var_384 = ((struct __insieme_job_98*)args)->var_384;
	__insieme_type_1* var_385 = ((struct __insieme_job_98*)args)->var_385;
	__insieme_type_3 var_388 = ((struct __insieme_job_98*)args)->var_388;
	__insieme_type_3 var_389 = ((struct __insieme_job_98*)args)->var_389;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_633 = ((struct __insieme_job_98*)args)->var_633;
	__insieme_type_1* var_634 = ((struct __insieme_job_98*)args)->var_634;
	__insieme_type_1* var_635 = ((struct __insieme_job_98*)args)->var_635;
	__insieme_type_28* var_636 = ((struct __insieme_job_98*)args)->var_636;
	__insieme_type_1* var_637 = ((struct __insieme_job_98*)args)->var_637;
	__insieme_type_3 var_638 = ((struct __insieme_job_98*)args)->var_638;
	unsigned int var_639 = ((struct __insieme_job_98*)args)->var_639;
	int var_640 = ((struct __insieme_job_98*)args)->var_640;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_99_ctr((__insieme_closure_99*)alloca(sizeof(__insieme_closure_99)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_100_wrap), var_382, var_383, var_384, var_385, var_639, var_640, var_388, var_389));
}

// start code fragment :: Definition of __insieme_supp_97 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_97(__insieme_type_1* var_391, __insieme_type_1* var_392, __insieme_type_28* var_393, __insieme_type_1* var_394, unsigned int var_386, int var_387, __insieme_type_3 var_395, __insieme_type_3 var_396){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_98)),&((struct __insieme_job_98){sizeof(struct __insieme_job_98),((((1*var_396[0])*var_396[1])*var_396[2])),((((1*var_396[0])*var_396[1])*var_396[2])),&fun__insieme_job_98,var_391,var_392,var_393,var_394,var_395,var_396,var_396,var_391,var_392,var_393,var_394,var_395,var_386,var_387}),sizeof(struct __insieme_job_98)));
	mergeAll();
}
static void __insieme_supp_97_wrap(void* _closure, __insieme_type_1* var_391, __insieme_type_1* var_392, __insieme_type_28* var_393, __insieme_type_1* var_394, unsigned int var_386, int var_387, __insieme_type_3 var_395, __insieme_type_3 var_396) { __insieme_supp_97(var_391, var_392, var_393, var_394, var_386, var_387, var_395, var_396); }

// start code fragment :: function for job __insieme_job_95 //
void fun__insieme_job_95(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_397 = ((struct __insieme_job_95*)args)->var_397;
	__insieme_type_1* var_398 = ((struct __insieme_job_95*)args)->var_398;
	__insieme_type_28* var_399 = ((struct __insieme_job_95*)args)->var_399;
	__insieme_type_3 var_403 = ((struct __insieme_job_95*)args)->var_403;
	__insieme_type_3 var_404 = ((struct __insieme_job_95*)args)->var_404;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_625 = ((struct __insieme_job_95*)args)->var_625;
	__insieme_type_1* var_626 = ((struct __insieme_job_95*)args)->var_626;
	__insieme_type_1* var_627 = ((struct __insieme_job_95*)args)->var_627;
	__insieme_type_28* var_628 = ((struct __insieme_job_95*)args)->var_628;
	__insieme_type_3 var_629 = ((struct __insieme_job_95*)args)->var_629;
	__insieme_type_1* var_630 = ((struct __insieme_job_95*)args)->var_630;
	unsigned int var_631 = ((struct __insieme_job_95*)args)->var_631;
	int var_632 = ((struct __insieme_job_95*)args)->var_632;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_96_ctr((__insieme_closure_96*)alloca(sizeof(__insieme_closure_96)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_97_wrap), var_397, var_398, var_399, var_630, var_631, var_632, var_403, var_404));
}

// start code fragment :: Definition of barriers ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int barriers(__insieme_type_1* var_406, __insieme_type_1* var_407, __insieme_type_28* var_408, __insieme_type_1* var_400, unsigned int var_401, int var_402, __insieme_type_3 var_367, __insieme_type_3 var_410){
	__insieme_type_3 var_409 = __insieme_funType_4_call(vector.pointwise(uint.div), var_367, var_410);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_95)),&((struct __insieme_job_95){sizeof(struct __insieme_job_95),((((1*var_409[0])*var_409[1])*var_409[2])),((((1*var_409[0])*var_409[1])*var_409[2])),&fun__insieme_job_95,var_406,var_407,var_408,var_409,var_410,var_409,var_406,var_407,var_408,var_410,var_400,var_401,var_402}),sizeof(struct __insieme_job_95)));
	mergeAll();
	return 0;
}
static int barriers_wrap(void* _closure, __insieme_type_1* var_406, __insieme_type_1* var_407, __insieme_type_28* var_408, __insieme_type_1* var_400, unsigned int var_401, int var_402, __insieme_type_3 var_367, __insieme_type_3 var_410) { return barriers(var_406, var_407, var_408, var_400, var_401, var_402, var_367, var_410); }

// start code fragment :: struct for job __insieme_job_103 //
struct __insieme_job_103 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_443;
	__insieme_type_1* var_444;
	__insieme_type_28* var_445;
	__insieme_type_3 var_449;
	__insieme_type_3 var_450;
	// ---- additional captured variables -----
	__insieme_type_3 var_641;
	__insieme_type_1* var_642;
	__insieme_type_1* var_643;
	__insieme_type_28* var_644;
	__insieme_type_3 var_645;
	__insieme_type_1* var_646;
	unsigned int var_647;
	int var_648;
};

// start code fragment :: Definition of __insieme_closure_104 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_104 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_104;

static inline void __insieme_closure_104_bind(__insieme_closure_104* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_104* __insieme_closure_104_ctr(__insieme_closure_104* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_104){&__insieme_closure_104_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: vector_type_declaration of __insieme_type_107 <=> vector<int<4>,258> //
typedef struct ___insieme_type_107 { 
    int data[258];
} __insieme_type_107;

// A constructor initializing a vector of the type __insieme_type_107 uniformly
static inline __insieme_type_107 __insieme_type_107_init_uniform(int value) {
	__insieme_type_107 res;
	for (int i=0; i<258;++i) {
	    res.data[i] = value;
	}
	return res;
}


// start code fragment :: struct for job __insieme_job_106 //
struct __insieme_job_106 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_427;
	__insieme_type_1* var_428;
	__insieme_type_28* var_429;
	__insieme_type_1* var_430;
	__insieme_type_107* var_433;
	__insieme_type_3 var_434;
	__insieme_type_3 var_435;
	// ---- additional captured variables -----
	__insieme_type_3 var_649;
	__insieme_type_1* var_650;
	__insieme_type_1* var_651;
	__insieme_type_28* var_652;
	__insieme_type_1* var_653;
	__insieme_type_3 var_654;
	unsigned int var_655;
	int var_656;
};

// start code fragment :: Definitions for function type: __insieme_funType_110 //
//
// -------------------- Begin of constructs for function type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)---------------------
// Base-struct of describing closures of type __insieme_funType_110 <-> ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
typedef struct ___insieme_funType_110 { 
    void(*call)(void*, __insieme_type_1*, __insieme_type_1*, __insieme_type_28*, __insieme_type_1*, unsigned int, int, __insieme_type_107*, __insieme_type_3, __insieme_type_3);
} __insieme_funType_110;

// Type safe function for invoking closures of type __insieme_funType_110
static inline void __insieme_funType_110_call(__insieme_funType_110* closure, __insieme_type_1* p1, __insieme_type_1* p2, __insieme_type_28* p3, __insieme_type_1* p4, unsigned int p5, int p6, __insieme_type_107* p7, __insieme_type_3 p8, __insieme_type_3 p9) {  closure->call(closure, p1,p2,p3,p4,p5,p6,p7,p8,p9); }

// A constructor for closures wrapping pure functions of type ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)
static inline __insieme_funType_110* __insieme_funType_110_ctr(__insieme_funType_110* target, void(*call)(void*, __insieme_type_1*, __insieme_type_1*, __insieme_type_28*, __insieme_type_1*, unsigned int, int, __insieme_type_107*, __insieme_type_3, __insieme_type_3)) {
	*target = (__insieme_funType_110){call};
	return target;
}
// ----------------------- end of constructs for function ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit)-----------------------

// start code fragment :: Definition of __insieme_closure_109 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_109 {
    void(*call)(void*);
    __insieme_funType_110* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_107* c7;
    __insieme_type_3 c8;
    __insieme_type_3 c9;
} __insieme_closure_109;

static inline void __insieme_closure_109_bind(__insieme_closure_109* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8,closure->c9); }

static inline __insieme_closure_109* __insieme_closure_109_ctr(__insieme_closure_109* closure, __insieme_funType_110* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_107* c7, __insieme_type_3 c8, __insieme_type_3 c9) {
    *closure = (__insieme_closure_109){&__insieme_closure_109_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8, c9};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_112 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_112(unsigned int var_415, __insieme_type_3 var_417, __insieme_type_3 var_416){
	unsigned int var_418 = isbr_getThreadId(0);
	unsigned int var_419 = isbr_getThreadId(1);
	switch(var_415) {
	case 0:
		return (((var_418/var_416[2])/var_416[1])+(var_416[0]*((var_419/var_417[2])/var_417[1]))); break;
	case 1:
		return (((var_418/var_416[2])%var_416[1])+(var_416[1]*((var_419/var_417[2])%var_417[1]))); break;
	case 2:
		return ((var_418%var_416[2])+(var_416[2]*((var_419/var_417[2])%var_417[1]))); break;
	};
}
static unsigned int __insieme_supp_112_wrap(void* _closure, unsigned int var_415, __insieme_type_3 var_417, __insieme_type_3 var_416) { return __insieme_supp_112(var_415, var_417, var_416); }

// start code fragment :: Definition of __insieme_supp_113 ... type: ((uint<4>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_113(unsigned int var_421, __insieme_type_3 var_422){
	unsigned int var_424 = isbr_getThreadId(0);
	switch(var_421) {
	case 0:
		return ((var_424/var_422[2])/var_422[1]); break;
	case 1:
		return ((var_424/var_422[2])%var_422[1]); break;
	case 2:
		return (var_424%var_422[2]); break;
	};
}
static unsigned int __insieme_supp_113_wrap(void* _closure, unsigned int var_421, __insieme_type_3 var_422) { return __insieme_supp_113(var_421, var_422); }

// start code fragment :: Definition of __insieme_supp_111 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,ref<vector<int<4>,258>>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_111(__insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_107* inKernelLocal, __insieme_type_3 var_413, __insieme_type_3 var_414){
	unsigned int gid = __insieme_supp_112(((unsigned int)(0)), var_413, var_414);
	unsigned int lid = __insieme_supp_113(((unsigned int)(0)), var_414);
	{};
	((((*l).data[((unsigned int)((lid)))])) = (((*c).data[((unsigned int)((gid)))])));
	((((*inKernelLocal).data[((unsigned int)(((lid)-((unsigned int)(1)))))])) = (((*gb).data[((unsigned int)((gid)))])));
	barrier(CLK_LOCAL_MEM_FENCE);
	((((*ga).data[((unsigned int)((gid)))])) = ((((*l).data[((unsigned int)(((gid)+((unsigned int)(1)))))]))+((float)((((*inKernelLocal).data[((unsigned int)((gid)))]))))));
}
static void __insieme_supp_111_wrap(void* _closure, __insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_107* inKernelLocal, __insieme_type_3 var_413, __insieme_type_3 var_414) { __insieme_supp_111(c, ga, gb, l, pa, pb, inKernelLocal, var_413, var_414); }

// start code fragment :: function for job __insieme_job_106 //
void fun__insieme_job_106(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_427 = ((struct __insieme_job_106*)args)->var_427;
	__insieme_type_1* var_428 = ((struct __insieme_job_106*)args)->var_428;
	__insieme_type_28* var_429 = ((struct __insieme_job_106*)args)->var_429;
	__insieme_type_1* var_430 = ((struct __insieme_job_106*)args)->var_430;
	__insieme_type_107* var_433 = ((struct __insieme_job_106*)args)->var_433;
	__insieme_type_3 var_434 = ((struct __insieme_job_106*)args)->var_434;
	__insieme_type_3 var_435 = ((struct __insieme_job_106*)args)->var_435;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_649 = ((struct __insieme_job_106*)args)->var_649;
	__insieme_type_1* var_650 = ((struct __insieme_job_106*)args)->var_650;
	__insieme_type_1* var_651 = ((struct __insieme_job_106*)args)->var_651;
	__insieme_type_28* var_652 = ((struct __insieme_job_106*)args)->var_652;
	__insieme_type_1* var_653 = ((struct __insieme_job_106*)args)->var_653;
	__insieme_type_3 var_654 = ((struct __insieme_job_106*)args)->var_654;
	unsigned int var_655 = ((struct __insieme_job_106*)args)->var_655;
	int var_656 = ((struct __insieme_job_106*)args)->var_656;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_109_ctr((__insieme_closure_109*)alloca(sizeof(__insieme_closure_109)),(__insieme_funType_110*)__insieme_funType_110_ctr((__insieme_funType_110*)alloca(sizeof(__insieme_funType_110)),&__insieme_supp_111_wrap), var_427, var_428, var_429, var_430, var_655, var_656, var_433, var_434, var_435));
}

// start code fragment :: Definition of __insieme_supp_105 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_105(__insieme_type_1* var_437, __insieme_type_1* var_438, __insieme_type_28* var_439, __insieme_type_1* var_440, unsigned int var_431, int var_432, __insieme_type_3 var_441, __insieme_type_3 var_442){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_106)),&((struct __insieme_job_106){sizeof(struct __insieme_job_106),((((1*var_442[0])*var_442[1])*var_442[2])),((((1*var_442[0])*var_442[1])*var_442[2])),&fun__insieme_job_106,var_437,var_438,var_439,var_440,alloca(sizeof(__insieme_type_107)),var_441,var_442,var_442,var_437,var_438,var_439,var_440,var_441,var_431,var_432}),sizeof(struct __insieme_job_106)));
	mergeAll();
}
static void __insieme_supp_105_wrap(void* _closure, __insieme_type_1* var_437, __insieme_type_1* var_438, __insieme_type_28* var_439, __insieme_type_1* var_440, unsigned int var_431, int var_432, __insieme_type_3 var_441, __insieme_type_3 var_442) { __insieme_supp_105(var_437, var_438, var_439, var_440, var_431, var_432, var_441, var_442); }

// start code fragment :: function for job __insieme_job_103 //
void fun__insieme_job_103(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_443 = ((struct __insieme_job_103*)args)->var_443;
	__insieme_type_1* var_444 = ((struct __insieme_job_103*)args)->var_444;
	__insieme_type_28* var_445 = ((struct __insieme_job_103*)args)->var_445;
	__insieme_type_3 var_449 = ((struct __insieme_job_103*)args)->var_449;
	__insieme_type_3 var_450 = ((struct __insieme_job_103*)args)->var_450;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_641 = ((struct __insieme_job_103*)args)->var_641;
	__insieme_type_1* var_642 = ((struct __insieme_job_103*)args)->var_642;
	__insieme_type_1* var_643 = ((struct __insieme_job_103*)args)->var_643;
	__insieme_type_28* var_644 = ((struct __insieme_job_103*)args)->var_644;
	__insieme_type_3 var_645 = ((struct __insieme_job_103*)args)->var_645;
	__insieme_type_1* var_646 = ((struct __insieme_job_103*)args)->var_646;
	unsigned int var_647 = ((struct __insieme_job_103*)args)->var_647;
	int var_648 = ((struct __insieme_job_103*)args)->var_648;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_104_ctr((__insieme_closure_104*)alloca(sizeof(__insieme_closure_104)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_105_wrap), var_443, var_444, var_445, var_646, var_647, var_648, var_449, var_450));
}

// start code fragment :: Definition of localMem ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int localMem(__insieme_type_1* var_452, __insieme_type_1* var_453, __insieme_type_28* var_454, __insieme_type_1* var_446, unsigned int var_447, int var_448, __insieme_type_3 var_412, __insieme_type_3 var_456){
	__insieme_type_3 var_455 = __insieme_funType_4_call(vector.pointwise(uint.div), var_412, var_456);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_103)),&((struct __insieme_job_103){sizeof(struct __insieme_job_103),((((1*var_455[0])*var_455[1])*var_455[2])),((((1*var_455[0])*var_455[1])*var_455[2])),&fun__insieme_job_103,var_452,var_453,var_454,var_455,var_456,var_455,var_452,var_453,var_454,var_456,var_446,var_447,var_448}),sizeof(struct __insieme_job_103)));
	mergeAll();
	return 0;
}
static int localMem_wrap(void* _closure, __insieme_type_1* var_452, __insieme_type_1* var_453, __insieme_type_28* var_454, __insieme_type_1* var_446, unsigned int var_447, int var_448, __insieme_type_3 var_412, __insieme_type_3 var_456) { return localMem(var_452, var_453, var_454, var_446, var_447, var_448, var_412, var_456); }

// start code fragment :: struct for job __insieme_job_114 //
struct __insieme_job_114 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_494;
	__insieme_type_1* var_495;
	__insieme_type_28* var_496;
	__insieme_type_3 var_500;
	__insieme_type_3 var_501;
	// ---- additional captured variables -----
	__insieme_type_3 var_657;
	__insieme_type_1* var_658;
	__insieme_type_1* var_659;
	__insieme_type_28* var_660;
	__insieme_type_3 var_661;
	__insieme_type_1* var_662;
	unsigned int var_663;
	int var_664;
};

// start code fragment :: Definition of __insieme_closure_115 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_115 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_115;

static inline void __insieme_closure_115_bind(__insieme_closure_115* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_115* __insieme_closure_115_ctr(__insieme_closure_115* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_115){&__insieme_closure_115_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: struct for job __insieme_job_117 //
struct __insieme_job_117 { 
	unsigned structSize;
	unsigned min, max;
	void (*fun)(isbr_JobArgs*);
	__insieme_type_1* var_479;
	__insieme_type_1* var_480;
	__insieme_type_28* var_481;
	__insieme_type_1* var_482;
	__insieme_type_3 var_485;
	__insieme_type_3 var_486;
	// ---- additional captured variables -----
	__insieme_type_3 var_665;
	__insieme_type_1* var_666;
	__insieme_type_1* var_667;
	__insieme_type_28* var_668;
	__insieme_type_1* var_669;
	__insieme_type_3 var_670;
	unsigned int var_671;
	int var_672;
};

// start code fragment :: Definition of __insieme_closure_118 ... type: (()->unit) //
// -- Begin - Closure Constructs ------------------------------------------------------------
// struct definition a closure of type (()->unit)
typedef struct ___insieme_closure_118 {
    void(*call)(void*);
    __insieme_funType_52* nested;
    __insieme_type_1* c1;
    __insieme_type_1* c2;
    __insieme_type_28* c3;
    __insieme_type_1* c4;
    unsigned int c5;
    int c6;
    __insieme_type_3 c7;
    __insieme_type_3 c8;
} __insieme_closure_118;

static inline void __insieme_closure_118_bind(__insieme_closure_118* closure) {  closure->nested->call(closure->nested, closure->c1,closure->c2,closure->c3,closure->c4,closure->c5,closure->c6,closure->c7,closure->c8); }

static inline __insieme_closure_118* __insieme_closure_118_ctr(__insieme_closure_118* closure, __insieme_funType_52* nested, __insieme_type_1* c1, __insieme_type_1* c2, __insieme_type_28* c3, __insieme_type_1* c4, unsigned int c5, int c6, __insieme_type_3 c7, __insieme_type_3 c8) {
    *closure = (__insieme_closure_118){&__insieme_closure_118_bind, nested, c1, c2, c3, c4, c5, c6, c7, c8};
    return closure;
}
// -- End - Closure Constructs --------------------------------------------------------------

// start code fragment :: Definition of __insieme_supp_120 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_120(unsigned int var_461, __insieme_type_3 var_463, __insieme_type_3 var_462){
	unsigned int var_464 = isbr_getThreadId(0);
	unsigned int var_465 = isbr_getThreadId(1);
	switch(var_461) {
	case 0:
		return (((var_464/var_462[2])/var_462[1])+(var_462[0]*((var_465/var_463[2])/var_463[1]))); break;
	case 1:
		return (((var_464/var_462[2])%var_462[1])+(var_462[1]*((var_465/var_463[2])%var_463[1]))); break;
	case 2:
		return ((var_464%var_462[2])+(var_462[2]*((var_465/var_463[2])%var_463[1]))); break;
	};
}
static unsigned int __insieme_supp_120_wrap(void* _closure, unsigned int var_461, __insieme_type_3 var_463, __insieme_type_3 var_462) { return __insieme_supp_120(var_461, var_463, var_462); }

// start code fragment :: Definition of __insieme_supp_121 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_121(unsigned int var_467, __insieme_type_3 var_469, __insieme_type_3 var_468){
	unsigned int var_470 = isbr_getThreadId(0);
	unsigned int var_471 = isbr_getThreadId(1);
	switch(var_467) {
	case 0:
		return (((var_470/var_468[2])/var_468[1])+(var_468[0]*((var_471/var_469[2])/var_469[1]))); break;
	case 1:
		return (((var_470/var_468[2])%var_468[1])+(var_468[1]*((var_471/var_469[2])%var_469[1]))); break;
	case 2:
		return ((var_470%var_468[2])+(var_468[2]*((var_471/var_469[2])%var_469[1]))); break;
	};
}
static unsigned int __insieme_supp_121_wrap(void* _closure, unsigned int var_467, __insieme_type_3 var_469, __insieme_type_3 var_468) { return __insieme_supp_121(var_467, var_469, var_468); }

// start code fragment :: Definition of __insieme_supp_122 ... type: ((uint<4>,vector<uint<4>,3>,vector<uint<4>,3>)->uint<4>) //
unsigned int __insieme_supp_122(unsigned int var_473, __insieme_type_3 var_475, __insieme_type_3 var_474){
	unsigned int var_476 = isbr_getThreadId(0);
	unsigned int var_477 = isbr_getThreadId(1);
	switch(var_473) {
	case 0:
		return (((var_476/var_474[2])/var_474[1])+(var_474[0]*((var_477/var_475[2])/var_475[1]))); break;
	case 1:
		return (((var_476/var_474[2])%var_474[1])+(var_474[1]*((var_477/var_475[2])%var_475[1]))); break;
	case 2:
		return ((var_476%var_474[2])+(var_474[2]*((var_477/var_475[2])%var_475[1]))); break;
	};
}
static unsigned int __insieme_supp_122_wrap(void* _closure, unsigned int var_473, __insieme_type_3 var_475, __insieme_type_3 var_474) { return __insieme_supp_122(var_473, var_475, var_474); }

// start code fragment :: Definition of __insieme_supp_119 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_119(__insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_459, __insieme_type_3 var_460){
	int iGID = ((int)(((((__insieme_supp_120(((unsigned int)(0)), var_459, var_460)*((unsigned int)((((*gb).data[((unsigned int)(1))])))))*((unsigned int)((((*gb).data[((unsigned int)(2))])))))+(__insieme_supp_121(((unsigned int)(1)), var_459, var_460)*((unsigned int)((((*gb).data[((unsigned int)(2))]))))))+__insieme_supp_122(((unsigned int)(2)), var_459, var_460))));
	int iNumElements = ((((((*gb).data[((unsigned int)(0))]))*(((*gb).data[((unsigned int)(1))])))*(((*gb).data[((unsigned int)(2))])))-17);
	if(((iGID)>=(iNumElements))) { return; };
	((((*ga).data[((unsigned int)((iGID)))])) = ((((*c).data[((unsigned int)((iGID)))]))+((float)((((*gb).data[((unsigned int)((iGID)))]))))));
}
static void __insieme_supp_119_wrap(void* _closure, __insieme_type_1* c, __insieme_type_1* ga, __insieme_type_28* gb, __insieme_type_1* l, unsigned int pa, int pb, __insieme_type_3 var_459, __insieme_type_3 var_460) { __insieme_supp_119(c, ga, gb, l, pa, pb, var_459, var_460); }

// start code fragment :: function for job __insieme_job_117 //
void fun__insieme_job_117(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_479 = ((struct __insieme_job_117*)args)->var_479;
	__insieme_type_1* var_480 = ((struct __insieme_job_117*)args)->var_480;
	__insieme_type_28* var_481 = ((struct __insieme_job_117*)args)->var_481;
	__insieme_type_1* var_482 = ((struct __insieme_job_117*)args)->var_482;
	__insieme_type_3 var_485 = ((struct __insieme_job_117*)args)->var_485;
	__insieme_type_3 var_486 = ((struct __insieme_job_117*)args)->var_486;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_665 = ((struct __insieme_job_117*)args)->var_665;
	__insieme_type_1* var_666 = ((struct __insieme_job_117*)args)->var_666;
	__insieme_type_1* var_667 = ((struct __insieme_job_117*)args)->var_667;
	__insieme_type_28* var_668 = ((struct __insieme_job_117*)args)->var_668;
	__insieme_type_1* var_669 = ((struct __insieme_job_117*)args)->var_669;
	__insieme_type_3 var_670 = ((struct __insieme_job_117*)args)->var_670;
	unsigned int var_671 = ((struct __insieme_job_117*)args)->var_671;
	int var_672 = ((struct __insieme_job_117*)args)->var_672;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_118_ctr((__insieme_closure_118*)alloca(sizeof(__insieme_closure_118)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_119_wrap), var_479, var_480, var_481, var_482, var_671, var_672, var_485, var_486));
}

// start code fragment :: Definition of __insieme_supp_116 ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->unit) //
void __insieme_supp_116(__insieme_type_1* var_488, __insieme_type_1* var_489, __insieme_type_28* var_490, __insieme_type_1* var_491, unsigned int var_483, int var_484, __insieme_type_3 var_492, __insieme_type_3 var_493){
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_117)),&((struct __insieme_job_117){sizeof(struct __insieme_job_117),((((1*var_493[0])*var_493[1])*var_493[2])),((((1*var_493[0])*var_493[1])*var_493[2])),&fun__insieme_job_117,var_488,var_489,var_490,var_491,var_492,var_493,var_493,var_488,var_489,var_490,var_491,var_492,var_483,var_484}),sizeof(struct __insieme_job_117)));
	mergeAll();
}
static void __insieme_supp_116_wrap(void* _closure, __insieme_type_1* var_488, __insieme_type_1* var_489, __insieme_type_28* var_490, __insieme_type_1* var_491, unsigned int var_483, int var_484, __insieme_type_3 var_492, __insieme_type_3 var_493) { __insieme_supp_116(var_488, var_489, var_490, var_491, var_483, var_484, var_492, var_493); }

// start code fragment :: function for job __insieme_job_114 //
void fun__insieme_job_114(isbr_JobArgs* args) {
	// ----------- Unpacking local scope variables ----------
	__insieme_type_1* var_494 = ((struct __insieme_job_114*)args)->var_494;
	__insieme_type_1* var_495 = ((struct __insieme_job_114*)args)->var_495;
	__insieme_type_28* var_496 = ((struct __insieme_job_114*)args)->var_496;
	__insieme_type_3 var_500 = ((struct __insieme_job_114*)args)->var_500;
	__insieme_type_3 var_501 = ((struct __insieme_job_114*)args)->var_501;
	// ---------- Unpacking auto-captured variables ---------
	__insieme_type_3 var_657 = ((struct __insieme_job_114*)args)->var_657;
	__insieme_type_1* var_658 = ((struct __insieme_job_114*)args)->var_658;
	__insieme_type_1* var_659 = ((struct __insieme_job_114*)args)->var_659;
	__insieme_type_28* var_660 = ((struct __insieme_job_114*)args)->var_660;
	__insieme_type_3 var_661 = ((struct __insieme_job_114*)args)->var_661;
	__insieme_type_1* var_662 = ((struct __insieme_job_114*)args)->var_662;
	unsigned int var_663 = ((struct __insieme_job_114*)args)->var_663;
	int var_664 = ((struct __insieme_job_114*)args)->var_664;
	// ------------------ Processing Guards -----------------
	// ------------------ Default processing -----------------
	__insieme_funType_12_call((__insieme_funType_12*)__insieme_closure_115_ctr((__insieme_closure_115*)alloca(sizeof(__insieme_closure_115)),(__insieme_funType_52*)__insieme_funType_52_ctr((__insieme_funType_52*)alloca(sizeof(__insieme_funType_52)),&__insieme_supp_116_wrap), var_494, var_495, var_496, var_662, var_663, var_664, var_500, var_501));
}

// start code fragment :: Definition of VectorAdd ... type: ((ref<array<real<4>,1>>,ref<array<real<4>,1>>,ref<array<int<4>,1>>,ref<array<real<4>,1>>,uint<4>,int<4>,vector<uint<4>,3>,vector<uint<4>,3>)->int<4>) //
int VectorAdd(__insieme_type_1* var_503, __insieme_type_1* var_504, __insieme_type_28* var_505, __insieme_type_1* var_497, unsigned int var_498, int var_499, __insieme_type_3 var_458, __insieme_type_3 var_507){
	__insieme_type_3 var_506 = __insieme_funType_4_call(vector.pointwise(uint.div), var_458, var_507);
	isbr_parallel(memcpy(malloc(sizeof(struct __insieme_job_114)),&((struct __insieme_job_114){sizeof(struct __insieme_job_114),((((1*var_506[0])*var_506[1])*var_506[2])),((((1*var_506[0])*var_506[1])*var_506[2])),&fun__insieme_job_114,var_503,var_504,var_505,var_506,var_507,var_506,var_503,var_504,var_505,var_507,var_497,var_498,var_499}),sizeof(struct __insieme_job_114)));
	mergeAll();
	return 0;
}
static int VectorAdd_wrap(void* _closure, __insieme_type_1* var_503, __insieme_type_1* var_504, __insieme_type_28* var_505, __insieme_type_1* var_497, unsigned int var_498, int var_499, __insieme_type_3 var_458, __insieme_type_3 var_507) { return VectorAdd(var_503, var_504, var_505, var_497, var_498, var_499, var_458, var_507); }

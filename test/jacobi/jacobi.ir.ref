// -------------- Pretty Print Inspire --------------
// Inspire Program 
//  Entry Point: 
fun(int<4> v4, ref<array<array<char,1>,1>> v5){
        decl ref<int<8>> v6 =  var(0);
        decl ref<int<8>> v7 =  var(0);
        decl ref<real<8>> v8 =  var(0.0);
        decl ref<real<8>> v9 =  var(0.0);
        v6 := clock();
        decl ref<vector<vector<real<4>,650>,650>> v10 =  var(undefined(type<vector<vector<real<4>,650>,650>>));
        decl ref<vector<vector<real<4>,650>,650>> v11 =  var(undefined(type<vector<vector<real<4>,650>,650>>));
        decl ref<vector<vector<real<4>,650>,650>> v12 =  var(undefined(type<vector<vector<real<4>,650>,650>>));
        decl ref<vector<vector<real<4>,650>,650>> v13 =  var(undefined(type<vector<vector<real<4>,650>,650>>));
        memset(ref.to.anyref(v10), 0, 650*650);
        memset(ref.to.anyref(v12), 0, 650*650);
        for(decl int<4> v17 = 0 .. 650 : 1) 
            for(decl int<4> v16 = 0 .. 650 : 1) 
                vector.ref.elem(vector.ref.elem(v12, v17), v16) := fun(int<4> v1, int<4> v2){
                    return 40*sin(16*2*v1-1*v2);
                }(v17, v16)
            
        ;
        decl ref<real<8>> v18 =  var(0);
        decl ref<real<8>> v19 =  var(0);
        decl ref<real<8>> v20 =  var(0);
        decl ref<real<8>> v21 =  var(0.0);
        decl ref<real<8>> v22 =  var(pow(1/650, 2));
        v7 := clock();
        v8 := v7-v6/1000000l;
        v6 := clock();
        for(decl int<4> v37 = 0 .. 10 : 1) {
            for(decl int<4> v26 = 1 .. 650-1 : 1) {
                for(decl int<4> v25 = 1 .. 650-1 : 1) 
                    vector.ref.elem(vector.ref.elem(v11, v26), v25) := 1/4*vector.ref.elem(vector.ref.elem(v10, v26-1), v25)+vector.ref.elem(vector.ref.elem(v10, v26), v25+1)+vector.ref.elem(vector.ref.elem(v10, v26), v25-1)+vector.ref.elem(vector.ref.elem(v10, v26+1), v25)-v22*vector.ref.elem(vector.ref.elem(v12, v26), v25)
                ;
            };
            memcpy(ref.to.anyref(v10), ref.to.anyref(v11), 650*650);
            for(decl int<4> v30 = 1 .. 650-1 : 1) {
                for(decl int<4> v29 = 1 .. 650-1 : 1) 
                    vector.ref.elem(vector.ref.elem(v13, v30), v29) := vector.ref.elem(vector.ref.elem(v12, v30), v29)-4*vector.ref.elem(vector.ref.elem(v10, v30), v29)+vector.ref.elem(vector.ref.elem(v10, v30-1), v29)+vector.ref.elem(vector.ref.elem(v10, v30+1), v29)+vector.ref.elem(vector.ref.elem(v10, v30), v29-1)+vector.ref.elem(vector.ref.elem(v10, v30), v29+1)
                ;
            };
            decl ref<real<8>> v31 =  var(0);
            for(decl int<4> v35 = 1 .. 650-1 : 1) {
                for(decl int<4> v34 = 1 .. 650-1 : 1) 
                    v31 := v31+pow(vector.ref.elem(vector.ref.elem(v13, v35), v34), 2)
                ;
            };
            v21 := sqrt(v31)/650-1;
        };
        v7 := clock();
        v9 := v7-v6/1000000l;
    }




// --------- Pretty Print Inspire - Detail ----------
// Inspire Program 
//  Entry Point: 
fun(int<4> v4, ref<array<array<char,1>,1>> v5){
        decl ref<int<8>> v6 = ( var(0));
        decl ref<int<8>> v7 = ( var(0));
        decl ref<real<8>> v8 = ( var(0.0));
        decl ref<real<8>> v9 = ( var(0.0));
        (v6 := clock());
        decl ref<vector<vector<real<4>,650>,650>> v10 = ( var(undefined(type<vector<vector<real<4>,650>,650>>)));
        decl ref<vector<vector<real<4>,650>,650>> v11 = ( var(undefined(type<vector<vector<real<4>,650>,650>>)));
        decl ref<vector<vector<real<4>,650>,650>> v12 = ( var(undefined(type<vector<vector<real<4>,650>,650>>)));
        decl ref<vector<vector<real<4>,650>,650>> v13 = ( var(undefined(type<vector<vector<real<4>,650>,650>>)));
        memset(ref.to.anyref(v10), 0, CAST<uint<8>>((650*650)));
        memset(ref.to.anyref(v12), 0, CAST<uint<8>>((650*650)));
        for(decl int<4> v17 = 0 .. 650 : 1) 
            for(decl int<4> v16 = 0 .. 650 : 1) 
                (vector.ref.elem(vector.ref.elem(v12, CAST<uint<4>>(v17)), CAST<uint<4>>(v16)) := CAST<real<4>>(fun(int<4> v1, int<4> v2){
                    return (CAST<real<8>>(40)*sin(CAST<real<8>>(((16*((2*v1)-1))*v2))));
                }(v17, v16)))
            
        ;
        decl ref<real<8>> v18 = ( var(CAST<real<8>>(0)));
        decl ref<real<8>> v19 = ( var(CAST<real<8>>(0)));
        decl ref<real<8>> v20 = ( var(CAST<real<8>>(0)));
        decl ref<real<8>> v21 = ( var(0.0));
        decl ref<real<8>> v22 = ( var(pow((CAST<real<8>>(1)/CAST<real<8>>(650)), CAST<real<8>>(2))));
        (v7 := clock());
        (v8 := (CAST<real<8>>((( *v7)-( *v6)))/CAST<real<8>>(1000000l)));
        (v6 := clock());
        for(decl int<4> v37 = 0 .. 10 : 1) {
            <m id=1>for(decl int<4> v26 = 1 .. (650-1) : 1) {
                for(decl int<4> v25 = 1 .. (650-1) : 1) 
                    (vector.ref.elem(vector.ref.elem(v11, CAST<uint<4>>(v26)), CAST<uint<4>>(v25)) := CAST<real<4>>(((CAST<real<8>>(1)/CAST<real<8>>(4))*(CAST<real<8>>((((( *vector.ref.elem(vector.ref.elem(v10, CAST<uint<4>>((v26-1))), CAST<uint<4>>(v25)))+( *vector.ref.elem(vector.ref.elem(v10, CAST<uint<4>>(v26)), CAST<uint<4>>((v25+1)))))+( *vector.ref.elem(vector.ref.elem(v10, CAST<uint<4>>(v26)), CAST<uint<4>>((v25-1)))))+( *vector.ref.elem(vector.ref.elem(v10, CAST<uint<4>>((v26+1))), CAST<uint<4>>(v25)))))-(( *v22)*CAST<real<8>>(( *vector.ref.elem(vector.ref.elem(v12, CAST<uint<4>>(v26)), CAST<uint<4>>(v25)))))))))
                ;
            }</m>;
            memcpy(ref.to.anyref(v10), ref.to.anyref(v11), CAST<uint<8>>((650*650)));
            for(decl int<4> v30 = 1 .. (650-1) : 1) {
                for(decl int<4> v29 = 1 .. (650-1) : 1) 
                    (vector.ref.elem(vector.ref.elem(v13, CAST<uint<4>>(v30)), CAST<uint<4>>(v29)) := (((((( *vector.ref.elem(vector.ref.elem(v12, CAST<uint<4>>(v30)), CAST<uint<4>>(v29)))-(CAST<real<4>>(4)*( *vector.ref.elem(vector.ref.elem(v10, CAST<uint<4>>(v30)), CAST<uint<4>>(v29)))))+( *vector.ref.elem(vector.ref.elem(v10, CAST<uint<4>>((v30-1))), CAST<uint<4>>(v29))))+( *vector.ref.elem(vector.ref.elem(v10, CAST<uint<4>>((v30+1))), CAST<uint<4>>(v29))))+( *vector.ref.elem(vector.ref.elem(v10, CAST<uint<4>>(v30)), CAST<uint<4>>((v29-1)))))+( *vector.ref.elem(vector.ref.elem(v10, CAST<uint<4>>(v30)), CAST<uint<4>>((v29+1))))))
                ;
            };
            decl ref<real<8>> v31 = ( var(CAST<real<8>>(0)));
            <m id=2>for(decl int<4> v35 = 1 .. (650-1) : 1) {
                for(decl int<4> v34 = 1 .. (650-1) : 1) 
                    (v31 := (( *v31)+pow(CAST<real<8>>(( *vector.ref.elem(vector.ref.elem(v13, CAST<uint<4>>(v35)), CAST<uint<4>>(v34)))), CAST<real<8>>(2))))
                ;
            }</m>;
            (v21 := (sqrt(( *v31))/CAST<real<8>>((650-1))));
        };
        (v7 := clock());
        (v9 := (CAST<real<8>>((( *v7)-( *v6)))/CAST<real<8>>(1000000l)));
    }


// --- Generated Inspire Code ---
#include <alloca.h>
#include <stddef.h>
#include <runtime.h>
#define bool int
#define true 1
#define false 0
#define null 0

// start code fragment :: Prototype for external function: printf ... type: ((ref<array<char,1>>,var_list)->int<4>) //
int printf(char*, ...);

// start code fragment :: Definition of g ... type: ((int<4>)->int<4>) //
int g(int a) { return (a-1); }
static int g_wrap(void* _closure, int a) { return g(a); }

// start code fragment :: Definition of f ... type: ((int<4>,int<4>)->int<4>) //
int f(int a, int b) { return (g((a+b))+1000); }
static int f_wrap(void* _closure, int a, int b) { return f(a, b); }

// start code fragment :: Definition of main ... type: ((int<4>,ref<array<ref<array<char,1>>,1>>)->int<4>) //
int main(int argc, char** argv) { printf("res=%d\n", f(argc, argc)); }
static int main_wrap(void* _closure, int argc, char** argv) { return main(argc, argv); }

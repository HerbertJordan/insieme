<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!-- Annotation -->
<xs:complexType name="T_annotations">
	<xs:sequence>
		<xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_nodePtr">
	<xs:all>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>
	</xs:all>
	<xs:attribute name="ref" type="xs:positiveInteger" use="required"/>
</xs:complexType>

<xs:complexType name="T_typePtr">
	<xs:all>
		<xs:element name="typePtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_listTypePtr">
	<xs:sequence>
		<xs:element name="typePtr" type="T_nodePtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_variablePtr">
	<xs:all>
		<xs:element name="variablePtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_listVariablePtr">
	<xs:sequence>
		<xs:element name="variablePtr" type="T_nodePtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_expressionPtr">
	<xs:all>
		<xs:element name="expressionPtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_listexpressionPtr">
	<xs:sequence>
		<xs:element name="expressionPtr" type="T_nodePtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_functionTypePtr">
	<xs:all>
		<xs:element name="functionTypePtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_RecTypeDefinitionPtr">
	<xs:all>
		<xs:element name="recTypeDefinitionPtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_declarationStmtPtr">
	<xs:all>
		<xs:element name="declarationStmtPtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_listDeclarationStmtPtr">
	<xs:sequence>
		<xs:element name="declarationStmtPtr" type="T_nodePtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_lambdaExprPtr">
    <xs:all>
        <xs:element name="lambdaExprPtr" type="T_nodePtr" minOccurs="1"/>
    </xs:all>   
</xs:complexType>

<xs:complexType name="T_lambdaDefinitionPtr">
	<xs:all>
		<xs:element name="lambdaDefinitionPtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_statementPtr">
	<xs:all>
		<xs:element name="statementPtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_typeVariablePtr">
	<xs:all>
		<xs:element name="typeVariablePtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_tupleTypePtr">
	<xs:all>
		<xs:element name="tupleTypePtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>
</xs:complexType>




<!-- T_intTypeParams -->
<xs:complexType name="T_intTypeParams">
	<xs:sequence>
		<xs:element name="intTypeParam" type="T_intTypeParam" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_intTypeParam">
	<xs:sequence>
		<xs:group ref="G_intType" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:group name="G_intType">
	<xs:choice>
		<xs:element name="variable" type="T_intVariable"/>
		<xs:element name="concrete" type="T_intConcrete"/>
		<xs:element name="infinite" type="T_intInfinite"/>
	</xs:choice>
</xs:group>

<xs:complexType name="T_intVariable">
	<xs:attribute name="value" type="xs:string" use="required"/>
</xs:complexType>

<xs:complexType name="T_intConcrete">
	<xs:attribute name="value" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_intInfinite">
</xs:complexType>

<!-- T_entries -->
<xs:complexType name="T_entries">
	<xs:sequence>
		<xs:element name="entry" type="T_entry" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_entry">
	<xs:sequence>
		<xs:element name="id" type="xs:string" minOccurs="1" maxOccurs="1"/>
		<xs:element name="typePtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
</xs:complexType>

<!-- T_members -->
<xs:complexType name="T_members">
	<xs:sequence>
		<xs:element name="member" type="T_member" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_member">
	<xs:sequence>
		<xs:element name="id" type="xs:string" minOccurs="1" maxOccurs="1"/>
		<xs:element name="expressionPtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
</xs:complexType>

<!-- T_expressions -->
<xs:complexType name="T_expressions">
	<xs:sequence>
		<xs:element name="expression" type="T_expressionPtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<!-- T_elementTypeList -->
<xs:complexType name="T_elementTypeList">
	<xs:sequence>
		<xs:element name="elementType" type="T_typePtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<!-- T_recTypeDefs -->
<xs:complexType name="T_recTypeDefs">
	<xs:sequence>
		<xs:element name="definition" type="T_recTypeDef" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_recTypeDef">
	<xs:sequence>
		<xs:element name="typeVariablePtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
		<xs:element name="typePtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
</xs:complexType>

<!-- T_definitions -->
<xs:complexType name="T_definitions">
	<xs:sequence>
		<xs:element name="definition" type="T_definition" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_definition">
	<xs:sequence>
		<xs:element name="variablePtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
		<xs:element name="lambdaPtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
</xs:complexType>

<!-- T_guards -->
<xs:complexType name="T_guards">
    <xs:sequence>
        <xs:element name="expressionPtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
        <xs:element name="expressionPtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
</xs:complexType>


<!-- T_cases -->
<xs:complexType name="T_cases">
	<xs:sequence>
		<xs:element name="case" type="T_case" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_case">
    <xs:sequence>
        <xs:element name="expressionPtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
        <xs:element name="statementPtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
</xs:complexType>

<!-- T_statements -->
<xs:complexType name="T_statements">
	<xs:sequence>
		<xs:element name="statement" type="T_statementPtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<!-- T_arguments -->
<xs:complexType name="T_arguments">
	<xs:sequence>
		<xs:element name="argument" type="T_expressionPtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<!-- T_guardedStatements -->
<xs:complexType name="T_guardedStatements">
	<xs:sequence>
		<xs:element name="guardedStatement" type="T_guards" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<!-- T_params -->
<xs:complexType name="T_params">
	<xs:sequence>
		<xs:element name="param" type="T_variablePtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<!-- All IR Node -->
<xs:complexType name="T_empty">
	<xs:all>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_program">
	<xs:all>
		<xs:element name="expressions" type="T_expressions" minOccurs="1"/>	
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
		<xs:attribute name="main" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_lambdaExpr">
	<xs:all>
		<xs:element name="type" type="T_functionTypePtr" minOccurs="1"/>
		<xs:element name="variable" type="T_variablePtr" minOccurs="1"/>
		<xs:element name="definition" type="T_lambdaDefinitionPtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_jobExpr">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="declarations" type="T_listDeclarationStmtPtr" minOccurs="1"/>
		<xs:element name="guardedStatements" type="T_guardedStatements" minOccurs="1"/>		
		<xs:element name="defaultStatement" type="T_expressionPtr" minOccurs="1"/>	
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_callExpr">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="function" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="arguments" type="T_arguments" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_castExpr">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="subExpression" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_memberAccessExpr">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="subExpression" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="memberName" type="xs:string" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_tupleProjectionExpr">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="subExpression" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="index" type="xs:integer" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_vectorExpr">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="expressions" type="T_expressions" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_namedCompositeExpr">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="members" type="T_members" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_unionExpr">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="member" type="T_member" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_declarationStmt">
	<xs:all>
		<xs:element name="variable" type="T_variablePtr" minOccurs="1"/>
		<xs:element name="expression" type="T_expressionPtr" minOccurs="1"/>	
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_compoundStmt">
	<xs:all>
		<xs:element name="statements" type="T_statements" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_whileStmt">
	<xs:all>
		<xs:element name="condition" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="body" type="T_statementPtr" minOccurs="1"/>	
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_switchStmt">
	<xs:all>
		<xs:element name="expression" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="cases" type="T_cases" minOccurs="1"/>
		<xs:element name="defaultCase" type="T_statementPtr" minOccurs="1"/>		
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_ifStmt">
	<xs:all>
		<xs:element name="condition" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="thenBody" type="T_statementPtr" minOccurs="1"/>
		<xs:element name="elseBody" type="T_statementPtr" minOccurs="1"/>		
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_forStmt">
	<xs:all>
		<xs:element name="declaration" type="T_declarationStmtPtr" minOccurs="1"/>
		<xs:element name="body" type="T_statementPtr" minOccurs="1"/>		
		<xs:element name="step" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="end" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_returnStmt">
	<xs:all>
		<xs:element name="returnExpression" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_recTypeDefinition">
	<xs:all>
		<xs:element name="definitions" type="T_recTypeDefs" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_recType">
	<xs:all>
		<xs:element name="typeVariable" type="T_typeVariablePtr" minOccurs="1" maxOccurs="1"/>
		<xs:element name="definition" type="T_RecTypeDefinitionPtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_literal">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
	<xs:attribute name="id" type="xs:integer" use="required"/>
	<xs:attribute name="value" type="xs:string" use="required"/>
</xs:complexType>

<xs:complexType name="T_variable">
	<xs:all>
		<xs:element name="type" type="T_typePtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
	<xs:attribute name="id" type="xs:integer" use="required"/>
	<xs:attribute name="identifier" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_markerStmt">
	<xs:all>
		<xs:element name="subStatement" type="T_statementPtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
	<xs:attribute name="id" type="xs:integer" use="required"/>
	<xs:attribute name="identifier" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_typeVariable">
	<xs:all>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
	<xs:attribute name="id" type="xs:integer" use="required"/>
	<xs:attribute name="name" type="xs:string" use="required"/>
</xs:complexType>
	
<xs:complexType name="T_tupleType">
	<xs:all>
		<xs:element name="elementTypeList" type="T_elementTypeList" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_namedCompositeType">
	<xs:all>
		<xs:element name="entries" type="T_entries" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_genType">
	<xs:all>
		<xs:element name="baseType" type="T_typePtr" minOccurs="0"/>
		<xs:element name="typeParams" type="T_listTypePtr" minOccurs="0"/>
		<xs:element name="intTypeParams" type="T_intTypeParams" minOccurs="0"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="familyName" type="xs:string" use="required"/>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_functionType"> 
	<xs:all>
		<xs:element name="argumentTypeList" type="T_listTypePtr" minOccurs="1"/>
		<xs:element name="captureTypeList" type="T_listTypePtr" minOccurs="1"/>
		<xs:element name="returnType" type="T_typePtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>


<xs:complexType name="T_lambdaDefinition"> 
	<xs:all>
		<xs:element name="definitions" type="T_definitions" minOccurs="1"/>	
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_lambda"> 
	<xs:all>
		<xs:element name="type" type="T_functionTypePtr" minOccurs="1"/>
		<xs:element name="captureList" type="T_listVariablePtr" minOccurs="1"/>
		<xs:element name="paramList" type="T_listVariablePtr" minOccurs="1"/>
		<xs:element name="body" type="T_statementPtr" minOccurs="1"/>		
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_captureInitExpr"> 
	<xs:all>
		<xs:element name="type" type="T_functionTypePtr" minOccurs="1"/>
		<xs:element name="lambda" type="T_expressionPtr" minOccurs="1"/>
		<xs:element name="values" type="T_listexpressionPtr" minOccurs="1"/>		
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>


<xs:complexType name="T_rootNode">
	<xs:all>
		<xs:element name="nodePtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>
</xs:complexType>

<xs:group name="G_nodeGroup">
	<xs:choice>
		<xs:element name="program" type="T_program"/>
		<xs:element name="recTypeDefinition" type="T_recTypeDefinition"/>
		
		<xs:element name="breakStmt" type="T_empty"/>
		<xs:element name="compoundStmt" type="T_compoundStmt"/>
		<xs:element name="continueStmt" type="T_empty"/>
		<xs:element name="declarationStmt" type="T_declarationStmt"/>
		<xs:element name="forStmt" type="T_forStmt"/>
		<xs:element name="ifStmt" type="T_ifStmt"/>
		<xs:element name="returnStmt" type="T_returnStmt"/>
		<xs:element name="switchStmt" type="T_switchStmt"/>
		<xs:element name="whileStmt" type="T_whileStmt"/>
		
		<xs:element name="callExpr" type="T_callExpr"/>
		<xs:element name="castExpr" type="T_castExpr"/>
		<xs:element name="jobExpr" type="T_jobExpr"/>
		<xs:element name="captureInitExpr" type="T_captureInitExpr"/>
		<xs:element name="lambdaExpr" type="T_lambdaExpr"/>
		<xs:element name="lambda" type="T_lambda"/>
		<xs:element name="lambdaDefinition" type="T_lambdaDefinition"/>
		<xs:element name="literal" type="T_literal"/>
		<xs:element name="tupleExpr" type="T_vectorExpr"/>
		<xs:element name="variable" type="T_variable"/>
		<xs:element name="vectorExpr" type="T_vectorExpr"/>
		
		<xs:element name="structExpr" type="T_namedCompositeExpr"/>
		<xs:element name="unionExpr" type="T_unionExpr"/>

		<xs:element name="functionType" type="T_functionType"/>
		<xs:element name="genType" type="T_genType"/>
		<xs:element name="recType" type="T_recType"/>
		<xs:element name="tupleType" type="T_tupleType"/>
		<xs:element name="typeVariable" type="T_typeVariable"/>
		
		<xs:element name="structType" type="T_namedCompositeType"/>
		<xs:element name="unionType" type="T_namedCompositeType"/>
		
		<xs:element name="memberAccessExpr" type="T_memberAccessExpr"/>
		<xs:element name="tupleProjectionExpr" type="T_tupleProjectionExpr"/>
		<xs:element name="markerStmt" type="T_markerStmt"/>
		
	</xs:choice>
</xs:group>

<xs:complexType name="T_inspire">
	<xs:sequence>
		<xs:element name="rootNode" type="T_rootNode" minOccurs="1" maxOccurs="1"/>
	    <xs:group ref="G_nodeGroup" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:element name="inspire" type="T_inspire"/>

</xs:schema>
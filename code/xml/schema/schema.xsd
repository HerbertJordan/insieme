<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!-- Annotation -->
<xs:complexType name="T_annotations">
	<xs:sequence>
		<xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
	</xs:sequence>
</xs:complexType>

<!-- NodePtr -->
<xs:complexType name="T_nodePtr">
	<xs:all>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>
	</xs:all>
	<xs:attribute name="ref" type="xs:positiveInteger" use="required"/>
</xs:complexType>

<xs:complexType name="T_uniqueNodePtr">
	<xs:all>
		<xs:element name="typePtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_listNodePtr">
	<xs:sequence>
		<xs:element name="typePtr" type="T_nodePtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_uniqueRecTypeDefinitionPtr">
	<xs:all>
		<xs:element name="recTypeDefinitionPtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_uniqueExpressionPtr">
	<xs:all>
		<xs:element name="expressionPtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_uniqueDeclarationStmtPtr">
	<xs:all>
		<xs:element name="declarationStmtPtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<xs:complexType name="T_uniqueStatementPtr">
	<xs:all>
		<xs:element name="statementPtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>	
</xs:complexType>

<!-- T_intTypeParams -->
<xs:complexType name="T_intTypeParams">
	<xs:all>
		<xs:element name="intTypeParam" type="T_intTypeParam" minOccurs="0"/>
	</xs:all>
</xs:complexType>

<xs:complexType name="T_intTypeParam">
	<xs:attribute name="type" type="A_intTypeParam_type" use="required"/>
	<xs:attribute name="value" type="xs:string" use="required"/>
</xs:complexType>

<xs:simpleType name="A_intTypeParam_type">
	<xs:restriction base="xs:string">
		<xs:enumeration value="variable"/>
		<xs:enumeration value="concrete"/>
		<xs:enumeration value="infinite"/>
	</xs:restriction>
</xs:simpleType>


<!-- T_entries -->
<xs:complexType name="T_entries">
	<xs:sequence>
		<xs:element name="entry" type="T_entry" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_entry">
	<xs:sequence>
		<xs:element name="id" type="xs:string" minOccurs="1" maxOccurs="1"/>
		<xs:element name="typePtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
</xs:complexType>

<!-- T_elementTypeList -->
<xs:complexType name="T_elementTypeList">
	<xs:sequence>
		<xs:element name="elementType" type="T_uniqueNodePtr" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<!-- T_definitions -->
<xs:complexType name="T_definitions">
	<xs:sequence>
		<xs:element name="definition" type="T_definition" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_definition">
	<xs:sequence>
		<xs:element name="typeVariablePtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
		<xs:element name="typePtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
</xs:complexType>

<!-- T_cases -->
<xs:complexType name="T_cases">
	<xs:sequence>
		<xs:element name="case" type="T_case" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="T_case">
	<xs:sequence>
		<xs:element name="expressionPtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
		<xs:element name="statementPtr" type="T_nodePtr" minOccurs="1" maxOccurs="1"/>
	</xs:sequence>
</xs:complexType>


<!-- All IR Node -->
<xs:complexType name="T_switchStmt">
	<xs:all>
		<xs:element name="expression" type="T_uniqueExpressionPtr" minOccurs="1"/>
		<xs:element name="cases" type="T_cases" minOccurs="1"/>
		<xs:element name="defaultCase" type="T_uniqueStatementPtr" minOccurs="1"/>		
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_ifStmt">
	<xs:all>
		<xs:element name="condition" type="T_uniqueExpressionPtr" minOccurs="1"/>
		<xs:element name="thenBody" type="T_uniqueStatementPtr" minOccurs="1"/>
		<xs:element name="elseBody" type="T_uniqueStatementPtr" minOccurs="1"/>		
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_forStmt">
	<xs:all>
		<xs:element name="declaration" type="T_uniqueDeclarationStmtPtr" minOccurs="1"/>
		<xs:element name="body" type="T_uniqueStatementPtr" minOccurs="1"/>		
		<xs:element name="step" type="T_uniqueExpressionPtr" minOccurs="1"/>
		<xs:element name="end" type="T_uniqueExpressionPtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_returnStmt">
	<xs:all>
		<xs:element name="returnExpression" type="T_uniqueExpressionPtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_recTypeDefinition">
	<xs:all>
		<xs:element name="definitions" type="T_definitions" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_recType">
	<xs:all>
		<xs:element name="definition" type="T_uniqueRecTypeDefinitionPtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_literal">
	<xs:all>
		<xs:element name="type" type="T_uniqueNodePtr" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
	<xs:attribute name="id" type="xs:integer" use="required"/>
	<xs:attribute name="value" type="xs:string" use="required"/>
</xs:complexType>

<xs:complexType name="T_typeVariable">
	<xs:all>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
	<xs:attribute name="id" type="xs:integer" use="required"/>
	<xs:attribute name="name" type="xs:string" use="required"/>
</xs:complexType>
	
<xs:complexType name="T_tupleType">
	<xs:all>
		<xs:element name="elementTypeList" type="T_elementTypeList" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_structType">
	<xs:all>
		<xs:element name="entries" type="T_entries" minOccurs="1"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_genType">
	<xs:all>
		<xs:element name="baseType" type="T_uniqueNodePtr" minOccurs="0"/>
		<xs:element name="typeParams" type="T_listNodePtr" minOccurs="0"/>
		<xs:element name="intTypeParams" type="T_intTypeParams" minOccurs="0"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="familyName" type="xs:string" use="required"/>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_functionType">
	<xs:all>
		<xs:element name="argumentType" type="T_uniqueNodePtr" minOccurs="0"/>
		<xs:element name="returnType" type="T_uniqueNodePtr" minOccurs="0"/>
		<xs:element name="annotations" type="T_annotations" minOccurs="0"/>	
	</xs:all>
		<xs:attribute name="id" type="xs:integer" use="required"/>
</xs:complexType>

<xs:complexType name="T_rootNode">
	<xs:all>
		<xs:element name="nodePtr" type="T_nodePtr" minOccurs="1"/>
	</xs:all>
</xs:complexType>

<xs:group name="G_nodeGroup">
	<xs:choice>
		<xs:element name="genType" type="T_genType"/>
		<xs:element name="functionType" type="T_functionType"/>
		<xs:element name="structType" type="T_structType"/>
		<xs:element name="unionType" type="T_structType"/>
		<xs:element name="tupleType" type="T_tupleType"/>
		<xs:element name="typeVariable" type="T_typeVariable"/>
		<xs:element name="recType" type="T_recType"/>
		<xs:element name="recTypeDefinition" type="T_recTypeDefinition"/>
		<xs:element name="literal" type="T_literal"/>
		<xs:element name="returnStmt" type="T_returnStmt"/>
		<xs:element name="forStmt" type="T_forStmt"/>
		<xs:element name="ifStmt" type="T_ifStmt"/>
		<xs:element name="switchStmt" type="T_switchStmt"/>
	</xs:choice>
</xs:group>

<xs:complexType name="T_inspire">
	<xs:sequence>
		<xs:element name="rootNode" type="T_rootNode" minOccurs="1" maxOccurs="1"/>
	    <xs:group ref="G_nodeGroup" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:element name="inspire" type="T_inspire"/>

</xs:schema>
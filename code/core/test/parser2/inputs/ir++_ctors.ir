
let int = int<4>;

let A = struct {
	int x;
};

let B = struct : A {
	int y;
};

let ctorA1 = A::() { this->x = 0; };
let ctorA2 = A::(int x) { this->x = x; };

int main() {

	// create a stack based A
	ref<A> a1 = ctorA1(var(A));
	
	// create a heap based A
	ref<A> a2 = ctorA1(new(A));
	
	// create a stack based A with initial value
	ref<A> a3 = ctorA2(var(A), 2);
	
	// create a stack based A with initial value
	ref<A> a4 = ctorA2(new(A), 3);
	
	print("a1.x = %d\n", *a1.x);
	print("a2.x = %d\n", *a2.x);
	print("a3.x = %d\n", *a3.x);
	print("a4.x = %d\n", *a4.x);
		
}
